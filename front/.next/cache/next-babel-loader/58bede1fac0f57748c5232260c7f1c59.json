{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Row, Col, Button, Portlet } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport Chart from \"@panely/apexcharts\";\nimport Link from \"next/link\";\n\nclass Widget26Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      highlight: \"3,478\",\n      title: \"Sales this month\",\n      link: \"#\",\n      list: [() => __jsx(React.Fragment, null, __jsx(\"span\", {\n        className: \"text-success\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faCaretUp\n      }), \"+11% more sales\"), \"in comparison to last month\"), () => __jsx(React.Fragment, null, __jsx(\"span\", {\n        className: \"text-danger\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faCaretDown\n      }), \"-2% revenue pre sales\"), \"in comparison to last month\")]\n    });\n  }\n\n  render() {\n    const {\n      highlight,\n      title,\n      link,\n      list\n    } = this.state;\n    return __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Icon, null, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faBoxes\n    })), __jsx(Portlet.Title, null, \"Sales change\")), __jsx(Portlet.Body, null, __jsx(Row, null, __jsx(Col, {\n      md: \"6\",\n      lg: \"5\",\n      className: \"p-5\"\n    }, __jsx(\"h3\", {\n      className: \"display-4\",\n      children: highlight\n    }), __jsx(\"span\", {\n      className: \"text-muted\",\n      children: title\n    }), list.map((Data, index) => __jsx(\"p\", {\n      key: index,\n      className: \"text-level-2 my-3\"\n    }, __jsx(Data, null))), __jsx(Link, {\n      href: link\n    }, __jsx(Button, {\n      variant: \"label-primary\",\n      width: \"widest\"\n    }, \"View details\"))), __jsx(Col, {\n      md: \"6\",\n      lg: \"7\"\n    }, __jsx(Widget26Chart, {\n      theme: this.props.theme\n    })))));\n  }\n\n}\n\nclass Widget26Chart extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      // Chart options\n      options: {\n        theme: {\n          mode: this.props.theme,\n          palette: \"palette1\"\n        },\n        chart: {\n          toolbar: {\n            show: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        fill: {\n          opacity: 0\n        },\n        stroke: {\n          show: true,\n          colors: [\"#2196f3\"],\n          lineCap: \"round\"\n        },\n        markers: {\n          colors: this.props.theme === \"dark\" ? \"#424242\" : \"#fff\",\n          strokeWidth: 4,\n          strokeColors: \"#2196f3\"\n        },\n        tooltip: {\n          marker: {\n            show: false\n          },\n          y: {\n            formatter: val => `${val} Products` // Format chart tooltip value\n\n          }\n        },\n        xaxis: {\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"]\n        }\n      },\n      // Chart series data\n      series: [{\n        name: \"Sales\",\n        data: [640, 400, 760, 620, 980, 640]\n      }]\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.theme !== prevProps.theme) {\n      let newState = this.state; // Change chart options\n\n      newState.options.theme = {\n        mode: this.props.theme,\n        palette: \"palette1\"\n      };\n      newState.options.markers.colors = this.props.theme === \"dark\" ? \"#424242\" : \"#fff\";\n      this.setState(newState);\n    }\n  }\n\n  render() {\n    const {\n      options,\n      series\n    } = this.state;\n    return __jsx(Chart, {\n      type: \"area\",\n      options: options,\n      series: series,\n      height: 300\n    });\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.page.theme\n  };\n}\n\nexport default connect(mapStateToProps)(Widget26Component);","map":null,"metadata":{},"sourceType":"module"}