{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Row, Col, Table, Marker, Portlet } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport Chart from \"@panely/apexcharts\";\n\nclass Widget25Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      indicators: [() => __jsx(React.Fragment, null, __jsx(Marker, {\n        type: \"pill\",\n        variant: \"primary\"\n      }), \" 0% Margin\"), () => __jsx(React.Fragment, null, __jsx(Marker, {\n        type: \"pill\",\n        variant: \"success\"\n      }), \" 70% Profit\"), () => __jsx(React.Fragment, null, __jsx(Marker, {\n        type: \"pill\",\n        variant: \"danger\"\n      }), \" 10% Lost\")],\n      details: [{\n        title: \"EPS\",\n        value: \"+75,10%\",\n        color: \"primary\"\n      }, {\n        title: \"PDO\",\n        value: \"15,900\",\n        color: \"success\"\n      }, {\n        title: \"OPL Status\",\n        value: \"Negative\",\n        color: \"danger\"\n      }, {\n        title: \"Priority\",\n        value: \"+460,080\",\n        color: \"info\"\n      }, {\n        title: \"Net profit\",\n        value: \"$215,950\",\n        color: \"primary\"\n      }]\n    });\n  }\n\n  render() {\n    return __jsx(Portlet, null, __jsx(Portlet.Header, null, __jsx(Portlet.Icon, null, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faInbox\n    })), __jsx(Portlet.Title, null, \"Support requests\")), __jsx(Portlet.Body, null, __jsx(Row, null, __jsx(Col, {\n      md: \"6\",\n      lg: \"5\"\n    }, __jsx(Widget25Chart, {\n      theme: this.props.theme\n    }), __jsx(\"div\", {\n      className: \"d-flex justify-content-around mt-4\"\n    }, this.state.indicators.map((Data, index) => __jsx(\"span\", {\n      key: index,\n      className: \"text-muted\"\n    }, __jsx(Data, null))))), __jsx(Col, {\n      md: \"6\",\n      lg: \"7\"\n    }, __jsx(Table, null, __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"border-top-0\"\n    }, \"Type\"), __jsx(\"td\", {\n      className: \"text-right border-top-0\"\n    }, \"Amount\")), this.state.details.map((data, index) => {\n      const {\n        title,\n        value,\n        color\n      } = data;\n      return __jsx(\"tr\", {\n        key: index\n      }, __jsx(\"td\", {\n        children: title\n      }), __jsx(\"td\", {\n        className: `text-right text-${color}`,\n        children: value\n      }));\n    })))))));\n  }\n\n}\n\nclass Widget25Chart extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"currency\", new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n      minimumFractionDigits: 0\n    }));\n\n    _defineProperty(this, \"state\", {\n      // Chart options\n      options: {\n        theme: {\n          mode: this.props.theme,\n          palette: \"palette1\"\n        },\n        labels: [\"Margin\", \"Profit\", \"Lost\"],\n        colors: [\"#2196f3\", \"#4caf50\", \"#f44336\"],\n        tooltip: {\n          fillSeriesColor: false,\n          y: {\n            formatter: val => this.currency.format(val) // Format chart tooltip value\n\n          }\n        },\n        legend: {\n          show: false\n        },\n        dataLabels: {\n          enabled: false\n        }\n      },\n      // Chart series data\n      series: [2000, 7000, 1000]\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.theme !== prevProps.theme) {\n      let newState = this.state; // Change chart options\n\n      newState.options.theme = {\n        mode: this.props.theme,\n        palette: \"palette1\"\n      };\n      this.setState(newState);\n    }\n  }\n\n  render() {\n    const {\n      options,\n      series\n    } = this.state;\n    return __jsx(Chart, {\n      type: \"donut\",\n      className: \"d-flex justify-content-center\",\n      options: options,\n      series: series,\n      height: 300\n    });\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.page.theme\n  };\n}\n\nexport default connect(mapStateToProps)(Widget25Component);","map":null,"metadata":{},"sourceType":"module"}