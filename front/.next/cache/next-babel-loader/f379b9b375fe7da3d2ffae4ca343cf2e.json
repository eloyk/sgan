{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Button, Tooltip, FloatButton } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { bindActionCreators } from \"redux\";\nimport { pageChangeTheme } from \"store/actions\";\nimport { connect } from \"react-redux\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\n\nvar FloatButtonComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(FloatButtonComponent, _React$Component);\n\n  var _super = _createSuper(FloatButtonComponent);\n\n  function FloatButtonComponent() {\n    _classCallCheck(this, FloatButtonComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FloatButtonComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          pageChangeTheme = _this$props.pageChangeTheme;\n      var darkModeActive = theme === \"dark\";\n      return __jsx(FloatButton, {\n        align: \"right\"\n      }, __jsx(Button, {\n        icon: true,\n        id: \"darkModeTrigger\",\n        variant: \"flat-primary\",\n        className: \"mb-2\",\n        onClick: function onClick() {\n          return pageChangeTheme(!darkModeActive ? \"dark\" : \"light\");\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: darkModeActive ? SolidIcon.faSun : SolidIcon.faMoon\n      })), __jsx(Tooltip.Uncontrolled, {\n        placement: \"left\",\n        target: \"darkModeTrigger\"\n      }, \"Enable \", !darkModeActive ? \"dark\" : \"light\", \" mode\"), __jsx(Button, {\n        icon: true,\n        id: \"docsLink\",\n        variant: \"flat-primary\",\n        href: \"https://blueupcodes.com/panely-react/guide.html\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faLightbulb\n      })), __jsx(Tooltip.Uncontrolled, {\n        placement: \"left\",\n        target: \"docsLink\"\n      }, \"Look documentation\"));\n    }\n  }]);\n\n  return FloatButtonComponent;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.page.theme\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeTheme: pageChangeTheme\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FloatButtonComponent);","map":null,"metadata":{},"sourceType":"module"}