{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Row, Col, Portlet, Dropdown, Progress, Widget4 } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport Chart from \"@panely/apexcharts\";\n\nclass Widget22Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: [[{\n        title: \"New York\",\n        progress: 60,\n        color: \"warning\"\n      }, {\n        title: \"Sydney\",\n        progress: 90,\n        color: \"success\"\n      }], [{\n        title: \"San Francisco\",\n        progress: 75,\n        color: \"primary\"\n      }, {\n        title: \"Tokyo\",\n        progress: 55,\n        color: \"danger\"\n      }]]\n    });\n  }\n\n  render() {\n    return __jsx(Portlet, null, __jsx(Portlet.Header, null, __jsx(Portlet.Icon, null, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faExchangeAlt\n    })), __jsx(Portlet.Title, null, \"Revenue change\"), __jsx(Portlet.Addon, null, __jsx(Dropdown.Uncontrolled, null, __jsx(Dropdown.Toggle, {\n      icon: true,\n      variant: \"label-primary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faEllipsisH\n    })), __jsx(Dropdown.Menu, {\n      right: true,\n      animated: true\n    }, __jsx(Dropdown.Item, {\n      icon: __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faPoll\n      })\n    }, \"Report\"), __jsx(Dropdown.Item, {\n      icon: __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faChartPie\n      })\n    }, \"Charts\"), __jsx(Dropdown.Item, {\n      icon: __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faChartLine\n      })\n    }, \"Statistics\"))))), __jsx(Portlet.Body, null, __jsx(Widget22Chart, {\n      theme: this.props.theme\n    }), __jsx(Row, {\n      className: \"mt-4\"\n    }, this.state.data.map((data, index) => {\n      const colSize = 12 / this.state.data.length;\n      return __jsx(Col, {\n        key: index,\n        xs: colSize\n      }, data.map((data, index) => {\n        const {\n          title,\n          progress,\n          color\n        } = data;\n        const marginClass = this.state.data.length - 1 > index ? \"mb-3\" : \"\";\n        return __jsx(Widget4, {\n          key: index,\n          className: marginClass\n        }, __jsx(Widget4.Group, null, __jsx(Widget4.Display, null, __jsx(Widget4.Subtitle, {\n          children: title\n        })), __jsx(Widget4.Addon, null, __jsx(Widget4.Subtitle, {\n          children: `${progress}%`\n        }))), __jsx(Progress, {\n          value: progress,\n          variant: color,\n          size: \"sm\"\n        }));\n      }));\n    }))));\n  }\n\n}\n\nclass Widget22Chart extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"currency\", new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n      minimumFractionDigits: 0\n    }));\n\n    _defineProperty(this, \"state\", {\n      // Chart options\n      options: {\n        theme: {\n          mode: this.props.theme,\n          palette: \"palette1\"\n        },\n        chart: {\n          sparkline: {\n            enabled: true\n          }\n        },\n        markers: {\n          strokeColors: this.props.theme === \"dark\" ? \"#424242\" : \"#fff\"\n        },\n        stroke: {\n          show: false\n        },\n        tooltip: {\n          marker: {\n            show: false\n          },\n          y: {\n            formatter: val => this.currency.format(val) // Format chart tooltip value\n\n          }\n        },\n        xaxis: {\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\"],\n          crosshairs: {\n            show: false\n          }\n        },\n        responsive: [{\n          breakpoint: 576,\n          options: {\n            chart: {\n              height: 200\n            }\n          }\n        }]\n      },\n      // Chart series data\n      series: [{\n        name: \"Revenue\",\n        data: [3100, 4000, 2800, 5100, 4200, 10900, 5600, 8600, 7000]\n      }]\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.theme !== prevProps.theme) {\n      let newState = this.state; // Change chart options\n\n      newState.options.theme = {\n        mode: this.props.theme,\n        palette: \"palette1\"\n      };\n      newState.options.markers.strokeColors = this.props.theme === \"dark\" ? \"#424242\" : \"#fff\";\n      this.setState(newState);\n    }\n  }\n\n  render() {\n    const {\n      options,\n      series\n    } = this.state;\n    return __jsx(Chart, {\n      type: \"area\",\n      options: options,\n      series: series,\n      height: 300\n    });\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.page.theme\n  };\n}\n\nexport default connect(mapStateToProps)(Widget22Component);","map":null,"metadata":{},"sourceType":"module"}