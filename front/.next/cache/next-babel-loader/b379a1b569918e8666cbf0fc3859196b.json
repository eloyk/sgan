{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Row, Col, Form, Label, Button, Popover, Portlet, Container, DemoWrapper } from \"@panely/components\";\nimport { pageChangeHeaderTitle, breadcrumbChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport withLayout from \"components/layout/withLayout\";\nimport withAuth from \"components/firebase/firebaseWithAuth\";\nimport Head from \"next/head\";\n\nclass PopoverPage extends React.Component {\n  componentDidMount() {\n    // Set header title\n    this.props.pageChangeHeaderTitle(\"Popover\"); // Set breadcrumb data\n\n    this.props.breadcrumbChange([{\n      text: \"Dashboard\",\n      link: \"/\"\n    }, {\n      text: \"Elements\"\n    }, {\n      text: \"Base\"\n    }, {\n      text: \"Popover\",\n      link: \"/elements/base/popover\"\n    }]);\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Popover | Panely\")), __jsx(Container, {\n      fluid: true\n    }, __jsx(Row, null, __jsx(Col, {\n      xs: \"12\"\n    }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Popover examples\")), __jsx(Portlet.Body, null, __jsx(Form.Group, {\n      row: true\n    }, __jsx(Label, {\n      sm: \"4\",\n      lg: \"3\",\n      className: \"text-muted text-sm-right\"\n    }, \"Basic popover\"), __jsx(Col, {\n      sm: \"8\",\n      lg: \"9\"\n    }, __jsx(DemoWrapper, null, __jsx(PopoverControlled, null), __jsx(Button, {\n      id: \"popover2\",\n      className: \"ml-2\"\n    }, \"Uncontrolled\"), __jsx(Popover.Uncontrolled, {\n      target: \"popover2\",\n      title: \"Popover title\"\n    }, \"And here's some amazing content. It's very engaging. Right?\")))), __jsx(Form.Group, {\n      row: true\n    }, __jsx(Label, {\n      sm: \"4\",\n      lg: \"3\",\n      className: \"text-muted text-sm-right\"\n    }, \"Positions\"), __jsx(Col, {\n      sm: \"8\",\n      lg: \"9\"\n    }, __jsx(DemoWrapper, null, __jsx(Button, {\n      id: \"popover3\"\n    }, \"Top\"), \" \", __jsx(Button, {\n      id: \"popover4\"\n    }, \"Bottom\"), \" \", __jsx(Button, {\n      id: \"popover5\"\n    }, \"Left\"), \" \", __jsx(Button, {\n      id: \"popover6\"\n    }, \"Right\"), __jsx(Popover.Uncontrolled, {\n      placement: \"top\",\n      target: \"popover3\"\n    }, \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\"), __jsx(Popover.Uncontrolled, {\n      placement: \"bottom\",\n      target: \"popover4\"\n    }, \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\"), __jsx(Popover.Uncontrolled, {\n      placement: \"left\",\n      target: \"popover5\"\n    }, \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\"), __jsx(Popover.Uncontrolled, {\n      placement: \"right\",\n      target: \"popover6\"\n    }, \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\")), __jsx(\"p\", {\n      className: \"mb-0 mt-2\"\n    }, \"Change popover placement by setting \", __jsx(\"code\", null, \"placement\"), \" property with\", \" \", __jsx(\"code\", null, \"top|bottom|right|left\")))), __jsx(Form.Group, {\n      row: true\n    }, __jsx(Label, {\n      sm: \"4\",\n      lg: \"3\",\n      className: \"text-muted text-sm-right\"\n    }, \"Dismiss on next click\"), __jsx(Col, {\n      sm: \"8\",\n      lg: \"9\"\n    }, __jsx(Button, {\n      id: \"popover7\"\n    }, \"Click me\"), __jsx(Popover.Uncontrolled, {\n      trigger: \"focus\",\n      target: \"popover7\",\n      title: \"Dismissible popover\"\n    }, \"And here's some amazing content. It's very engaging. Right?\"), __jsx(\"p\", {\n      className: \"mb-0 mt-2\"\n    }, \"Use the \", __jsx(\"code\", null, \"trigger=\\\"focus\\\"\"), \" property to dismiss popovers on the user\\u2019s next click of a different element than the toggle element\"))), __jsx(Form.Group, {\n      row: true,\n      className: \"mb-0\"\n    }, __jsx(Label, {\n      sm: \"4\",\n      lg: \"3\",\n      className: \"text-muted text-sm-right\"\n    }, \"HTML content\"), __jsx(Col, {\n      sm: \"8\",\n      lg: \"9\"\n    }, __jsx(Button, {\n      id: \"popover8\"\n    }, \"Click me\"), __jsx(Popover.Uncontrolled, {\n      trigger: \"focus\",\n      target: \"popover8\",\n      title: \"Popover title\"\n    }, \"And here's some amazing \", __jsx(\"b\", null, \"HTML\"), \" content. It's very \", __jsx(\"code\", null, \"engaging\"), \". Right?\"), __jsx(\"p\", {\n      className: \"mb-0 mt-2\"\n    }, \"You can put popover html content inside popover body\")))))))));\n  }\n\n} // Controlled popover example\n\n\nclass PopoverControlled extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isOpen: false\n    });\n\n    _defineProperty(this, \"toggle\", () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Button, {\n      id: \"popover1\",\n      onClick: this.toggle\n    }, \"Controlled\"), __jsx(Popover, _extends({\n      target: \"popover1\",\n      title: \"Popover title\",\n      isOpen: this.state.isOpen,\n      toggle: this.toggle\n    }, this.props), \"And here's some amazing content. It's very engaging. Right?\"));\n  }\n\n}\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle,\n    breadcrumbChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withAuth(withLayout(PopoverPage)));","map":null,"metadata":{},"sourceType":"module"}