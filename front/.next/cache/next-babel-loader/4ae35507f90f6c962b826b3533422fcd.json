{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Row, Col, Form, Input, Label, Portlet, Container, FloatLabel, CustomInput } from \"@panely/components\";\nimport { pageChangeHeaderTitle, breadcrumbChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport withLayout from \"components/layout/withLayout\"; //import withAuth from \"components/firebase/firebaseWithAuth\"\n\nimport Head from \"next/head\";\n\nvar FormCustomPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(FormCustomPage, _React$Component);\n\n  var _super = _createSuper(FormCustomPage);\n\n  function FormCustomPage() {\n    _classCallCheck(this, FormCustomPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FormCustomPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Set header title\n      this.props.pageChangeHeaderTitle(\"Custom Form\"); // Set breadcrumb data\n\n      this.props.breadcrumbChange([{\n        text: \"Dashboard\",\n        link: \"/\"\n      }, {\n        text: \"Form\"\n      }, {\n        text: \"Custom\",\n        link: \"/form/custom\"\n      }]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Custom Form | Panely\")), __jsx(Container, {\n        fluid: true\n      }, __jsx(Row, null, __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Custom select\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Use \", __jsx(\"code\", null, '<CustomInput type=\"select\">'), \" to trigger the custom styles. Cannot modify the \", __jsx(\"code\", null, \"<option>\"), \"s due to browser limitations.\"), __jsx(\"p\", null, \"You may also choose from small and large custom selects to match our similarly sized text inputs.\"), __jsx(\"hr\", null), __jsx(Form.Group, null, __jsx(CustomInput, {\n        id: \"customSelect1\",\n        type: \"select\",\n        size: \"sm\"\n      }, __jsx(\"option\", {\n        selected: true\n      }, \"Small\"), __jsx(\"option\", {\n        value: \"1\"\n      }, \"One\"), __jsx(\"option\", {\n        value: \"2\"\n      }, \"Two\"), __jsx(\"option\", {\n        value: \"3\"\n      }, \"Three\"))), __jsx(Form.Group, null, __jsx(CustomInput, {\n        id: \"customSelect2\",\n        type: \"select\"\n      }, __jsx(\"option\", {\n        selected: true\n      }, \"Default\"), __jsx(\"option\", {\n        value: \"1\"\n      }, \"One\"), __jsx(\"option\", {\n        value: \"2\"\n      }, \"Two\"), __jsx(\"option\", {\n        value: \"3\"\n      }, \"Three\"))), __jsx(Form.Group, {\n        className: \"mb-0\"\n      }, __jsx(CustomInput, {\n        id: \"customSelect3\",\n        type: \"select\",\n        size: \"lg\"\n      }, __jsx(\"option\", {\n        selected: true\n      }, \"Large\"), __jsx(\"option\", {\n        value: \"1\"\n      }, \"One\"), __jsx(\"option\", {\n        value: \"2\"\n      }, \"Two\"), __jsx(\"option\", {\n        value: \"3\"\n      }, \"Three\"))))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Float label\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Put \", __jsx(\"code\", null, \"Input\"), \" and \", __jsx(\"code\", null, \"Label\"), \" components into\", \" \", __jsx(\"code\", null, \"FloatLabel\"), \" component. The label element will float above the placeholder and when the cursor focuses on input, the label will be floating to the top of input element.\"), __jsx(\"hr\", null), __jsx(Form.Group, null, __jsx(FloatLabel, null, __jsx(Input, {\n        type: \"email\",\n        id: \"floatLabelEmail\",\n        placeholder: \"Email form\"\n      }), __jsx(Label, {\n        \"for\": \"floatLabelEmail\"\n      }, \"Email\"))), __jsx(Form.Group, null, __jsx(FloatLabel, null, __jsx(Input, {\n        type: \"password\",\n        id: \"floatLabelPassword\",\n        placeholder: \"Password form\"\n      }), __jsx(Label, {\n        \"for\": \"floatLabelPassword\"\n      }, \"Password\"))), __jsx(Form.Group, null, __jsx(FloatLabel, null, __jsx(Input, {\n        type: \"textarea\",\n        id: \"floatLabelTextarea\",\n        rows: \"5\",\n        placeholder: \"Insert your text\"\n      }), __jsx(Label, {\n        \"for\": \"floatLabelTextarea\"\n      }, \"Textarea\"))), __jsx(Form.Group, {\n        className: \"mb-0\"\n      }, __jsx(FloatLabel, null, __jsx(CustomInput, {\n        type: \"select\",\n        id: \"floatLabelSelect\"\n      }, __jsx(\"option\", {\n        value: \"1\"\n      }, \"Option 1\"), __jsx(\"option\", {\n        value: \"2\"\n      }, \"Option 2\"), __jsx(\"option\", {\n        value: \"3\"\n      }, \"Option 3\")), __jsx(Label, {\n        \"for\": \"floatLabelSelect\"\n      }, \"Select\"))), __jsx(\"hr\", null), __jsx(\"p\", null, \"To change input element size, you can set \", __jsx(\"code\", null, \"size\"), \" property.\"), __jsx(\"hr\", null), __jsx(Form.Group, null, __jsx(FloatLabel, {\n        size: \"lg\"\n      }, __jsx(Input, {\n        type: \"text\",\n        size: \"lg\",\n        id: \"floatLabelLarge\",\n        placeholder: \".form-control-lg\"\n      }), __jsx(Label, {\n        \"for\": \"floatLabelLarge\"\n      }, \"Large\"))), __jsx(Form.Group, null, __jsx(FloatLabel, null, __jsx(Input, {\n        type: \"text\",\n        id: \"floatLabelNormal\",\n        placeholder: \"no modifier\"\n      }), __jsx(Label, {\n        \"for\": \"floatLabelNormal\"\n      }, \"Normal\"))), __jsx(Form.Group, {\n        className: \"mb-0\"\n      }, __jsx(FloatLabel, {\n        size: \"sm\"\n      }, __jsx(Input, {\n        type: \"text\",\n        size: \"sm\",\n        id: \"floatLabelSmall\",\n        placeholder: \".form-control-sm\"\n      }), __jsx(Label, {\n        \"for\": \"floatLabelSmall\"\n      }, \"Small\")))))), __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Custom checkboxes and radios\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Custom checkboxes and radios can also be disabled. Add the \", __jsx(\"code\", null, \"disabled\"), \" \", \"boolean property to the component and the custom indicator and label description will be automatically styled.\"), __jsx(\"hr\", null), __jsx(Form.Group, null, __jsx(CustomInput, {\n        type: \"checkbox\",\n        id: \"customCheckbox1\",\n        label: \"Default checkbox\"\n      }), __jsx(CustomInput, {\n        type: \"checkbox\",\n        id: \"customCheckbox2\",\n        label: \"Disabled checkbox\",\n        disabled: true\n      }), __jsx(CustomInput, {\n        type: \"radio\",\n        name: \"customRadios\",\n        id: \"customRadio1\",\n        label: \"Default radio\"\n      }), __jsx(CustomInput, {\n        type: \"radio\",\n        name: \"customRadios\",\n        id: \"customRadio2\",\n        label: \"Second radio\"\n      }), __jsx(CustomInput, {\n        type: \"radio\",\n        name: \"customRadios\",\n        id: \"customRadio3\",\n        label: \"Disabled radio\",\n        disabled: true\n      })), __jsx(Form.Group, {\n        className: \"mb-0\"\n      }, __jsx(CustomInput, {\n        type: \"checkbox\",\n        size: \"sm\",\n        id: \"customCheckboxSmall\",\n        label: \"Small checkbox\"\n      }), __jsx(CustomInput, {\n        type: \"checkbox\",\n        id: \"customCheckboxNormal\",\n        label: \"Default checkbox\"\n      }), __jsx(CustomInput, {\n        type: \"checkbox\",\n        size: \"lg\",\n        id: \"customCheckboxLarge\",\n        label: \"Large checkbox\"\n      }), __jsx(CustomInput, {\n        type: \"radio\",\n        size: \"sm\",\n        id: \"customRadioSmall\",\n        name: \"customRadioSizing\",\n        label: \"Small radio\"\n      }), __jsx(CustomInput, {\n        type: \"radio\",\n        id: \"customRadioNormal\",\n        name: \"customRadioSizing\",\n        label: \"Default radio\"\n      }), __jsx(CustomInput, {\n        type: \"radio\",\n        size: \"lg\",\n        id: \"customRadioLarge\",\n        name: \"customRadioSizing\",\n        label: \"Large radio\"\n      })))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Switches\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"A switch has the markup of a custom checkbox but uses the\", \" \", __jsx(\"code\", null, 'type=\"switch\"'), \" to render a toggle switch. Switches also support the \", __jsx(\"code\", null, \"disabled\"), \" attribute.\"), __jsx(\"hr\", null), __jsx(Form.Group, {\n        className: \"mb-0\"\n      }, __jsx(CustomInput, {\n        type: \"switch\",\n        id: \"customSwitch1\",\n        label: \"Toggle this switch element\"\n      }), __jsx(CustomInput, {\n        type: \"switch\",\n        id: \"customSwitch2\",\n        label: \"Disabled switch element\",\n        disabled: true\n      })))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Custom slider\")), __jsx(Portlet.Body, null, __jsx(Form.Group, {\n        className: \"mb-0\"\n      }, __jsx(Label, {\n        \"for\": \"customRange\"\n      }, \"Example range\"), __jsx(CustomInput, {\n        type: \"range\",\n        id: \"customRange\",\n        name: \"customRange\"\n      })))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Custom file input\")), __jsx(Portlet.Body, null, __jsx(Form.Group, {\n        className: \"mb-0\"\n      }, __jsx(CustomInput, {\n        type: \"file\",\n        id: \"customFile\",\n        name: \"customFile\"\n      }))))))));\n    }\n  }]);\n\n  return FormCustomPage;\n}(React.Component);\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle: pageChangeHeaderTitle,\n    breadcrumbChange: breadcrumbChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withLayout(FormCustomPage));","map":null,"metadata":{},"sourceType":"module"}