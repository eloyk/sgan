{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Router from 'next/router';\nimport axios from 'axios'; //import { useState } from 'react';\n\nconst doRequest = async ({\n  url,\n  method,\n  body\n}, props = {}) => {\n  try {\n    const response = await axios[method](url, _objectSpread(_objectSpread({}, body), props)); // if (onSuccess) {\n    //   onSuccess();\n    // } else {\n    //   () => Router.push(Router.query.redirect || PAGE.dashboardPagePath);\n    // }\n\n    const data = JSON.stringify(response.data);\n    console.log('Respuesta desde el try: ' + data);\n    return data;\n  } catch (err) {\n    const errores = JSON.stringify(err.response.data.errores.mensaje);\n    console.log('Respuesta desde el catch: ' + err.response.data.errores);\n    throw errores;\n  }\n};\n\nexport default doRequest;","map":null,"metadata":{},"sourceType":"module"}