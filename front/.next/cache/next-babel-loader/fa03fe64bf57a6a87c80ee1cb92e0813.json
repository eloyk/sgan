{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\components\\\\layout\\\\part\\\\HeaderNotification.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Badge, Caret, Avatar, Button, Marker, Portlet, Dropdown, RichList } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as RegularIcon from \"@fortawesome/free-regular-svg-icons\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport SimpleBar from \"simplebar\";\n\nclass HeaderNotification extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"bodyRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"state\", {\n      data: [{\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-info\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faFileInvoice,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }\n        })),\n        content: \"New report has been received\",\n        time: \"2 min ago\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faShoppingBasket,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }\n        })),\n        content: \"Last order was completed\",\n        time: \"1 hrs ago\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faUsers,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }\n        })),\n        content: \"Company meeting canceled\",\n        time: \"5 hrs ago\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-warning\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faPaperPlane,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }\n        })),\n        content: \"New feedback received\",\n        time: \"6 hrs ago\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faDownload,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }\n        })),\n        content: \"New update was available\",\n        time: \"1 day ago\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faAsterisk,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }\n        })),\n        content: \"Your password was changed\",\n        time: \"2 day ago\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-info\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faUserPlus,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }\n        })),\n        content: \"New account has been registered\",\n        time: \"5 day ago\"\n      }]\n    });\n\n    _defineProperty(this, \"onToggle\", (e, opened) => {\n      // Initialize custom scrollbar\n      if (opened) {\n        new SimpleBar(this.bodyRef.current);\n      }\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      variant\n    } = _this$props,\n          attributes = _objectWithoutProperties(_this$props, [\"variant\"]);\n\n    let count = this.state.data.length;\n    return __jsx(Dropdown.Uncontrolled, _extends({\n      onToggle: this.onToggle\n    }, attributes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }), __jsx(Dropdown.Toggle, {\n      icon: true,\n      variant: variant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: RegularIcon.faBell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), count > 0 ? __jsx(Button.Marker, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, __jsx(Marker, {\n      type: \"dot\",\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    })) : null), __jsx(Dropdown.Menu, {\n      right: true,\n      wide: true,\n      animated: true,\n      className: \"overflow-hidden py-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, __jsx(Portlet, {\n      scroll: true,\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, __jsx(Portlet.Header, {\n      className: \"bg-primary rounded-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, __jsx(Portlet.Icon, {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: RegularIcon.faBell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    })), __jsx(Portlet.Title, {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, \"Notification\"), __jsx(Portlet.Addon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, __jsx(Badge, {\n      variant: \"warning\",\n      shape: \"square\",\n      size: \"lg\",\n      children: count > 9 ? \"9+\" : count,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }))), __jsx(Portlet.Body, {\n      innerRef: this.bodyRef,\n      className: \"p-0 rounded-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, __jsx(RichList, {\n      action: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, this.state.data.map((data, index) => {\n      const {\n        avatar: NotificationAvatar,\n        content,\n        time\n      } = data;\n      return __jsx(RichList.Item, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, __jsx(RichList.Addon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 23\n        }\n      }, __jsx(NotificationAvatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      })), __jsx(RichList.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 23\n        }\n      }, __jsx(RichList.Title, {\n        children: content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }\n      }), __jsx(RichList.Subtitle, {\n        children: time,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      })), __jsx(RichList.Addon, {\n        addonType: \"append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 23\n        }\n      }, __jsx(Caret, {\n        className: \"mx-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      })));\n    }))))));\n  }\n\n}\n\nexport default HeaderNotification;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/components/layout/part/HeaderNotification.jsx"],"names":["Badge","Caret","Avatar","Button","Marker","Portlet","Dropdown","RichList","FontAwesomeIcon","RegularIcon","SolidIcon","SimpleBar","HeaderNotification","React","Component","createRef","data","avatar","faFileInvoice","content","time","faShoppingBasket","faUsers","faPaperPlane","faDownload","faAsterisk","faUserPlus","e","opened","bodyRef","current","render","props","variant","attributes","count","state","length","onToggle","faBell","map","index","NotificationAvatar"],"mappings":"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","sourcesContent":["import {\n  Badge,\n  Caret,\n  Avatar,\n  Button,\n  Marker,\n  Portlet,\n  Dropdown,\n  RichList\n} from \"@panely/components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport * as RegularIcon from \"@fortawesome/free-regular-svg-icons\"\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\"\nimport SimpleBar from \"simplebar\"\n\nclass HeaderNotification extends React.Component {\n  bodyRef = React.createRef()\n\n  state = {\n    data: [\n      {\n        avatar: () => (\n          <Avatar display variant=\"label-info\">\n            <FontAwesomeIcon icon={SolidIcon.faFileInvoice} />\n          </Avatar>\n        ),\n        content: \"New report has been received\",\n        time: \"2 min ago\"\n      },\n      {\n        avatar: () => (\n          <Avatar display variant=\"label-success\">\n            <FontAwesomeIcon icon={SolidIcon.faShoppingBasket} />\n          </Avatar>\n        ),\n        content: \"Last order was completed\",\n        time: \"1 hrs ago\"\n      },\n      {\n        avatar: () => (\n          <Avatar display variant=\"label-danger\">\n            <FontAwesomeIcon icon={SolidIcon.faUsers} />\n          </Avatar>\n        ),\n        content: \"Company meeting canceled\",\n        time: \"5 hrs ago\"\n      },\n      {\n        avatar: () => (\n          <Avatar display variant=\"label-warning\">\n            <FontAwesomeIcon icon={SolidIcon.faPaperPlane} />\n          </Avatar>\n        ),\n        content: \"New feedback received\",\n        time: \"6 hrs ago\"\n      },\n      {\n        avatar: () => (\n          <Avatar display variant=\"label-primary\">\n            <FontAwesomeIcon icon={SolidIcon.faDownload} />\n          </Avatar>\n        ),\n        content: \"New update was available\",\n        time: \"1 day ago\"\n      },\n      {\n        avatar: () => (\n          <Avatar display variant=\"label-success\">\n            <FontAwesomeIcon icon={SolidIcon.faAsterisk} />\n          </Avatar>\n        ),\n        content: \"Your password was changed\",\n        time: \"2 day ago\"\n      },\n      {\n        avatar: () => (\n          <Avatar display variant=\"label-info\">\n            <FontAwesomeIcon icon={SolidIcon.faUserPlus} />\n          </Avatar>\n        ),\n        content: \"New account has been registered\",\n        time: \"5 day ago\"\n      }\n    ]\n  }\n\n  onToggle = (e, opened) => {\n    // Initialize custom scrollbar\n    if (opened) {\n      new SimpleBar(this.bodyRef.current)\n    }\n  }\n\n  render() {\n    const { variant, ...attributes } = this.props\n    let count = this.state.data.length\n\n    return (\n      <Dropdown.Uncontrolled onToggle={this.onToggle} {...attributes}>\n        <Dropdown.Toggle icon variant={variant}>\n          <FontAwesomeIcon icon={RegularIcon.faBell} />\n          {count > 0 ? (\n            <Button.Marker>\n              <Marker type=\"dot\" variant=\"success\" />\n            </Button.Marker>\n          ) : null}\n        </Dropdown.Toggle>\n        <Dropdown.Menu right wide animated className=\"overflow-hidden py-0\">\n          {/* BEGIN Portlet */}\n          <Portlet scroll className=\"border-0\">\n            <Portlet.Header className=\"bg-primary rounded-0\">\n              <Portlet.Icon className=\"text-white\">\n                <FontAwesomeIcon icon={RegularIcon.faBell} />\n              </Portlet.Icon>\n              <Portlet.Title className=\"text-white\">Notification</Portlet.Title>\n              <Portlet.Addon>\n                <Badge\n                  variant=\"warning\"\n                  shape=\"square\"\n                  size=\"lg\"\n                  children={count > 9 ? \"9+\" : count}\n                />\n              </Portlet.Addon>\n            </Portlet.Header>\n            <Portlet.Body innerRef={this.bodyRef} className=\"p-0 rounded-0\">\n              {/* BEGIN Rich List */}\n              <RichList action>\n                {this.state.data.map((data, index) => {\n                  const { avatar: NotificationAvatar, content, time } = data\n\n                  return (\n                    <RichList.Item key={index}>\n                      <RichList.Addon addonType=\"prepend\">\n                        <NotificationAvatar />\n                      </RichList.Addon>\n                      <RichList.Content>\n                        <RichList.Title children={content} />\n                        <RichList.Subtitle children={time} />\n                      </RichList.Content>\n                      <RichList.Addon addonType=\"append\">\n                        <Caret className=\"mx-2\" />\n                      </RichList.Addon>\n                    </RichList.Item>\n                  )\n                })}\n              </RichList>\n              {/* END Rich List */}\n            </Portlet.Body>\n          </Portlet>\n          {/* END Portlet */}\n        </Dropdown.Menu>\n      </Dropdown.Uncontrolled>\n    )\n  }\n}\n\nexport default HeaderNotification\n"]},"metadata":{},"sourceType":"module"}