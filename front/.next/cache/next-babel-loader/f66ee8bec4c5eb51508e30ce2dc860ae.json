{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Sidemenu } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { bindActionCreators } from \"redux\";\nimport { sidemenuToggle } from \"store/actions\";\nimport { connect } from \"react-redux\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport SidemenuAgendaContact from \"./SidemenuAgendaContact\";\nimport SidemenuAgendaEvent from \"./SidemenuAgendaEvent\";\nimport SimpleBar from \"simplebar\";\n\nclass SidemenuAgenda extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"bodyRef\", /*#__PURE__*/React.createRef());\n  }\n\n  componentDidMount() {\n    // Initialize custom scrollbar\n    new SimpleBar(this.bodyRef.current);\n  }\n\n  render() {\n    const {\n      show,\n      sidemenuToggle\n    } = this.props;\n    return __jsx(Sidemenu, {\n      show: show,\n      align: \"right\",\n      width: \"wider\",\n      backdropOnClick: () => sidemenuToggle(\"agenda\")\n    }, __jsx(Sidemenu.Header, null, __jsx(Sidemenu.Title, null, \"May 14, 2020\"), __jsx(Sidemenu.Addon, null, __jsx(Button, {\n      icon: true,\n      variant: \"label-danger\",\n      onClick: () => sidemenuToggle(\"agenda\")\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faTimes\n    })))), __jsx(Sidemenu.Body, {\n      innerRef: this.bodyRef\n    }, __jsx(SidemenuAgendaEvent, {\n      className: \"mb-3\"\n    }), __jsx(SidemenuAgendaContact, {\n      className: \"mb-0\"\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    show: state.sidemenu.agenda\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    sidemenuToggle\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidemenuAgenda);","map":null,"metadata":{},"sourceType":"module"}