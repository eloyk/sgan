{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport TYPES from \"store/types\";\nimport PAGE from \"config/page.config\";\nconst breakpoint = 1025;\nconst initialState = {\n  desktopMinimized: PAGE.layout.minimizedAside,\n  mobileMinimized: true\n};\n\nfunction asideReducer(state = initialState, action) {\n  switch (action.type) {\n    case TYPES.ASIDE_TOGGLE:\n      if (window.innerWidth >= breakpoint) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          desktopMinimized: action.payload ? action.payload : !state.desktopMinimized\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mobileMinimized: action.payload ? action.payload : !state.mobileMinimized\n        });\n      }\n\n    case TYPES.ASIDE_CHANGE:\n      return {\n        desktopMinimized: action.payload.desktopMinimized ? action.payload.desktopMinimized : state.desktopMinimized,\n        mobileMinimized: action.payload.mobileMinimized ? action.payload.mobileMinimized : state.mobileMinimized\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default asideReducer;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/store/reducers/asideReducer.jsx"],"names":["TYPES","PAGE","breakpoint","initialState","desktopMinimized","layout","minimizedAside","mobileMinimized","asideReducer","state","action","type","ASIDE_TOGGLE","window","innerWidth","payload","ASIDE_CHANGE"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,MAAMC,UAAU,GAAG,IAAnB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,gBAAgB,EAAEH,IAAI,CAACI,MAAL,CAAYC,cADX;AAEnBC,EAAAA,eAAe,EAAE;AAFE,CAArB;;AAKA,SAASC,YAAT,CAAsBC,KAAK,GAAGN,YAA9B,EAA4CO,MAA5C,EAAoD;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,KAAK,CAACY,YAAX;AACE,UAAIC,MAAM,CAACC,UAAP,IAAqBZ,UAAzB,EAAqC;AACnC,+CACKO,KADL;AAEEL,UAAAA,gBAAgB,EAAEM,MAAM,CAACK,OAAP,GAAiBL,MAAM,CAACK,OAAxB,GAAkC,CAACN,KAAK,CAACL;AAF7D;AAID,OALD,MAKO;AACL,+CACKK,KADL;AAEEF,UAAAA,eAAe,EAAEG,MAAM,CAACK,OAAP,GAAiBL,MAAM,CAACK,OAAxB,GAAkC,CAACN,KAAK,CAACF;AAF5D;AAID;;AACH,SAAKP,KAAK,CAACgB,YAAX;AACE,aAAO;AACLZ,QAAAA,gBAAgB,EAAEM,MAAM,CAACK,OAAP,CAAeX,gBAAf,GACdM,MAAM,CAACK,OAAP,CAAeX,gBADD,GAEdK,KAAK,CAACL,gBAHL;AAILG,QAAAA,eAAe,EAAEG,MAAM,CAACK,OAAP,CAAeR,eAAf,GACbG,MAAM,CAACK,OAAP,CAAeR,eADF,GAEbE,KAAK,CAACF;AANL,OAAP;;AAQF;AACE,aAAOE,KAAP;AAvBJ;AAyBD;;AAED,eAAeD,YAAf","sourcesContent":["import TYPES from \"store/types\"\nimport PAGE from \"config/page.config\"\n\nconst breakpoint = 1025\nconst initialState = {\n  desktopMinimized: PAGE.layout.minimizedAside,\n  mobileMinimized: true\n}\n\nfunction asideReducer(state = initialState, action) {\n  switch (action.type) {\n    case TYPES.ASIDE_TOGGLE:\n      if (window.innerWidth >= breakpoint) {\n        return {\n          ...state,\n          desktopMinimized: action.payload ? action.payload : !state.desktopMinimized\n        }\n      } else {\n        return {\n          ...state,\n          mobileMinimized: action.payload ? action.payload : !state.mobileMinimized\n        }\n      }\n    case TYPES.ASIDE_CHANGE:\n      return {\n        desktopMinimized: action.payload.desktopMinimized\n          ? action.payload.desktopMinimized\n          : state.desktopMinimized,\n        mobileMinimized: action.payload.mobileMinimized\n          ? action.payload.mobileMinimized\n          : state.mobileMinimized\n      }\n    default:\n      return state\n  }\n}\n\nexport default asideReducer\n"]},"metadata":{},"sourceType":"module"}