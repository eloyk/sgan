{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\modules\\\\components\\\\Container.jsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType } from \"./utils\";\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: \"div\"\n};\n\nvar Container = function Container(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      fluid = props.fluid,\n      Tag = props.tag,\n      attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"fluid\", \"tag\"]);\n\n  var containerClass = \"container\";\n\n  if (fluid === true) {\n    containerClass = \"container-fluid\";\n  } else if (fluid) {\n    containerClass = \"container-\".concat(fluid);\n  }\n\n  var classes = mapToCssModules(classNames(className, containerClass), cssModule);\n  return __jsx(Tag, _extends({}, attributes, {\n    className: classes,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }));\n};\n\n_c = Container;\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\nexport default Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/modules/components/Container.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","propTypes","className","string","cssModule","object","fluid","oneOfType","bool","tag","defaultProps","Container","props","Tag","attributes","containerClass","classes"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,SAA7C;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEL,SAAS,CAACM,MADL;AAEhBC,EAAAA,SAAS,EAAEP,SAAS,CAACQ,MAFL;AAGhBC,EAAAA,KAAK,EAAET,SAAS,CAACU,SAAV,CAAoB,CAACV,SAAS,CAACW,IAAX,EAAiBX,SAAS,CAACM,MAA3B,CAApB,CAHS;AAIhBM,EAAAA,GAAG,EAAET;AAJW,CAAlB;AAOA,IAAMU,YAAY,GAAG;AACnBD,EAAAA,GAAG,EAAE;AADc,CAArB;;AAIA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAAA,MACjBV,SADiB,GACwCU,KADxC,CACjBV,SADiB;AAAA,MACNE,SADM,GACwCQ,KADxC,CACNR,SADM;AAAA,MACKE,KADL,GACwCM,KADxC,CACKN,KADL;AAAA,MACiBO,GADjB,GACwCD,KADxC,CACYH,GADZ;AAAA,MACyBK,UADzB,4BACwCF,KADxC;;AAGzB,MAAIG,cAAc,GAAG,WAArB;;AAEA,MAAIT,KAAK,KAAK,IAAd,EAAoB;AAClBS,IAAAA,cAAc,GAAG,iBAAjB;AACD,GAFD,MAEO,IAAIT,KAAJ,EAAW;AAChBS,IAAAA,cAAc,uBAAgBT,KAAhB,CAAd;AACD;;AAED,MAAMU,OAAO,GAAGjB,eAAe,CAACD,UAAU,CAACI,SAAD,EAAYa,cAAZ,CAAX,EAAwCX,SAAxC,CAA/B;AAEA,SAAO,MAAC,GAAD,eAASU,UAAT;AAAqB,IAAA,SAAS,EAAEE,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAdD;;KAAML,S;AAgBNA,SAAS,CAACV,SAAV,GAAsBA,SAAtB;AACAU,SAAS,CAACD,YAAV,GAAyBA,YAAzB;AAEA,eAAeC,SAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  tag: \"div\"\n}\n\nconst Container = props => {\n  const { className, cssModule, fluid, tag: Tag, ...attributes } = props\n\n  let containerClass = \"container\"\n\n  if (fluid === true) {\n    containerClass = \"container-fluid\"\n  } else if (fluid) {\n    containerClass = `container-${fluid}`\n  }\n\n  const classes = mapToCssModules(classNames(className, containerClass), cssModule)\n\n  return <Tag {...attributes} className={classes} />\n}\n\nContainer.propTypes = propTypes\nContainer.defaultProps = defaultProps\n\nexport default Container\n"]},"metadata":{},"sourceType":"module"}