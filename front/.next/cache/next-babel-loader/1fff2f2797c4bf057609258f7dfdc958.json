{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType } from \"./utils\";\nconst rowColWidths = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\nconst defaultProps = {\n  tag: \"div\",\n  widths: rowColWidths\n};\n\nconst Row = props => {\n  const {\n    portletFill,\n    className,\n    cssModule,\n    noGutters,\n    tag: Tag,\n    form,\n    widths\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"portletFill\", \"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  const colClasses = [];\n  widths.forEach((colWidth, i) => {\n    let colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    const isXs = !i;\n    colClasses.push(isXs ? `row-cols-${colSize}` : `row-cols-${colWidth}-${colSize}`);\n  });\n  let portletFillClass = null;\n\n  if (typeof portletFill === \"string\") {\n    portletFillClass = `portlet-row-fill-${portletFill}`;\n  } else if (typeof portletFill === \"boolean\") {\n    portletFillClass = \"portlet-row-fill\";\n  }\n\n  const classes = mapToCssModules(classNames(colClasses, portletFillClass, {\n    \"no-gutters\": noGutters\n  }, form ? \"form-row\" : \"row\", className), cssModule);\n  return __jsx(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.defaultProps = defaultProps;\nexport default Row;","map":null,"metadata":{},"sourceType":"module"}