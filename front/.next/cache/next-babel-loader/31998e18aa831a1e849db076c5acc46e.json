{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Row, Col, Portlet, Blockquote, Container } from \"@panely/components\";\nimport { pageChangeHeaderTitle, breadcrumbChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport withLayout from \"components/layout/withLayout\";\nimport withAuth from \"components/firebase/firebaseWithAuth\";\nimport Head from \"next/head\";\n\nvar TypoghrapyPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(TypoghrapyPage, _React$Component);\n\n  var _super = _createSuper(TypoghrapyPage);\n\n  function TypoghrapyPage() {\n    _classCallCheck(this, TypoghrapyPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TypoghrapyPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Set header title\n      this.props.pageChangeHeaderTitle(\"Typoghrapy\"); // Set breadcrumb data\n\n      this.props.breadcrumbChange([{\n        text: \"Dashboard\",\n        link: \"/\"\n      }, {\n        text: \"Elements\"\n      }, {\n        text: \"Base\"\n      }, {\n        text: \"Typoghrapy\",\n        link: \"/elements/base/type\"\n      }]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Typhography | Panely\")), __jsx(Container, {\n        fluid: true\n      }, __jsx(Row, null, __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Headings\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"All HTML headings, \", __jsx(\"code\", null, \"<h1>\"), \" through \", __jsx(\"code\", null, \"<h6>\"), \", are available.\"), __jsx(Portlet, null, __jsx(Portlet.Header, null, __jsx(Portlet.Title, null, \"Headings\")), __jsx(Portlet.Body, null, __jsx(\"h1\", null, \"Heading 1\"), __jsx(\"h2\", null, \"Heading 2\"), __jsx(\"h3\", null, \"Heading 3\"), __jsx(\"h4\", null, \"Heading 4\"), __jsx(\"h5\", null, \"Heading 5\"), __jsx(\"h6\", null, \"Heading 6\"))), __jsx(Portlet, {\n        className: \"mb-0\"\n      }, __jsx(Portlet.Body, null, __jsx(\"h3\", {\n        className: \"mb-0\"\n      }, \"Fancy display heading\", \" \", __jsx(\"small\", {\n        className: \"text-muted\"\n      }, \"With faded secondary text\")))))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Blockquote\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"For quoting blocks of content from another source within your document. Wrap\", \" \", __jsx(\"code\", null, \"Blockquote\"), \" around any HTML as the quote.\"), __jsx(Blockquote, null, __jsx(\"p\", {\n        className: \"mb-0\"\n      }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.\")), __jsx(Blockquote, null, __jsx(\"p\", {\n        className: \"mb-0\"\n      }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.\"), __jsx(Blockquote.Footer, null, __jsx(\"cite\", {\n        title: \"Source Title\"\n      }, \"Source Title\"))), __jsx(Blockquote, {\n        align: \"center\",\n        className: \"mb-0\"\n      }, __jsx(\"p\", {\n        className: \"mb-0\"\n      }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.\"), __jsx(Blockquote.Footer, null, __jsx(\"cite\", {\n        title: \"Source Title\"\n      }, \"Source Title\"))))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Abbreviations\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Stylized abbreviations implementation of HTML\\u2019s \", __jsx(\"code\", null, \"<abbr>\"), \" element\"), __jsx(Portlet, {\n        className: \"mb-0\"\n      }, __jsx(Portlet.Body, null, __jsx(\"p\", null, __jsx(\"abbr\", {\n        title: \"attribute\"\n      }, \"attr\")), __jsx(\"p\", {\n        className: \"mb-0\"\n      }, __jsx(\"abbr\", {\n        title: \"HyperText Markup Language\",\n        className: \"initialism\"\n      }, \"HTML\"))))))), __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Display\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"When you need a heading to stand out, consider using a\", \" \", __jsx(\"strong\", null, \"display heading\"), \"\\u2014a larger, slightly more opinionated heading style\"), __jsx(Portlet, {\n        className: \"mb-0\"\n      }, __jsx(Portlet.Body, null, __jsx(\"h1\", {\n        className: \"display-1\"\n      }, \"Display 1\"), __jsx(\"h1\", {\n        className: \"display-2\"\n      }, \"Display 2\"), __jsx(\"h1\", {\n        className: \"display-3\"\n      }, \"Display 3\"), __jsx(\"h1\", {\n        className: \"display-4\"\n      }, \"Display 4\"))))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Lead\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Make a paragraph stand out by adding \", __jsx(\"code\", null, \".lead\"), \".\"), __jsx(Portlet, {\n        className: \"mb-0\"\n      }, __jsx(Portlet.Body, null, __jsx(\"p\", {\n        className: \"lead mb-0\"\n      }, \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus.\"))))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Inline text styles\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Styling for common inline HTML5 elements.\"), __jsx(Portlet, {\n        className: \"mb-0\"\n      }, __jsx(Portlet.Body, null, __jsx(\"p\", null, \"You can use the mark tag to \", __jsx(\"mark\", null, \"highlight\"), \" text.\"), __jsx(\"p\", null, __jsx(\"del\", null, \"This line of text is meant to be treated as deleted text.\")), __jsx(\"p\", null, __jsx(\"s\", null, \"This line of text is meant to be treated as no longer accurate.\")), __jsx(\"p\", null, __jsx(\"ins\", null, \"This line of text is meant to be treated as an addition to the document.\")), __jsx(\"p\", null, __jsx(\"u\", null, \"This line of text will render as underlined\")), __jsx(\"p\", null, __jsx(\"small\", null, \"This line of text is meant to be treated as fine print.\")), __jsx(\"p\", null, __jsx(\"strong\", null, \"This line rendered as bold text.\")), __jsx(\"p\", {\n        className: \"mb-0\"\n      }, __jsx(\"em\", null, \"This line rendered as italicized text.\"))))))))));\n    }\n  }]);\n\n  return TypoghrapyPage;\n}(React.Component);\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle: pageChangeHeaderTitle,\n    breadcrumbChange: breadcrumbChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withAuth(withLayout(TypoghrapyPage)));","map":null,"metadata":{},"sourceType":"module"}