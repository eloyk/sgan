{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Breadcrumb } from \"@panely/components\";\nimport { connect } from \"react-redux\";\nimport * as FeatherIcon from \"react-feather\";\nimport Link from \"next/link\";\n\nfunction HeaderBreadcrumb(props) {\n  const BreadcrumbItem = React.forwardRef((props, ref) => __jsx(Breadcrumb.Item, _extends({}, props, {\n    innerRef: ref\n  })));\n  return __jsx(Breadcrumb, null, props.breadcrumb.map((data, index) => {\n    const {\n      link,\n      text\n    } = data;\n    const Icon = index === 0 ? () => __jsx(FeatherIcon.Home, null) : false;\n\n    if (link) {\n      return __jsx(Link, {\n        key: index,\n        href: link,\n        passHref: true\n      }, __jsx(BreadcrumbItem, {\n        icon: Icon ? __jsx(Icon, null) : false,\n        children: text\n      }));\n    } else {\n      return __jsx(Breadcrumb.Item, {\n        key: index,\n        icon: Icon ? __jsx(Icon, null) : false,\n        children: text\n      });\n    }\n  }));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    breadcrumb: state.breadcrumb\n  };\n}\n\nexport default connect(mapStateToProps)(HeaderBreadcrumb);","map":null,"metadata":{},"sourceType":"module"}