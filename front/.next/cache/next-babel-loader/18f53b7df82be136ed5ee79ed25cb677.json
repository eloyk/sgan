{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, refPropType } from \"./utils\";\nimport CustomFileInput from \"./CustomFileInput\";\n\nvar CustomInput = function CustomInput(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      innerRef = props.innerRef,\n      htmlFor = props.htmlFor,\n      invalid = props.invalid,\n      valid = props.valid,\n      inline = props.inline,\n      label = props.label,\n      size = props.size,\n      type = props.type,\n      attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"children\", \"innerRef\", \"htmlFor\", \"invalid\", \"valid\", \"inline\", \"label\", \"size\", \"type\"]);\n\n  var sizeClass = false;\n\n  if (size) {\n    if (type === \"checkbox\" || type === \"radio\" || type === \"switch\") {\n      sizeClass = \"custom-control-\".concat(size);\n    } else {\n      sizeClass = \"custom-\".concat(type, \"-\").concat(size);\n    }\n  }\n\n  var customClass = mapToCssModules(classNames(\"custom-\".concat(type), sizeClass, className), cssModule);\n  var validationClassNames = mapToCssModules(classNames(invalid && \"is-invalid\", valid && \"is-valid\"), cssModule);\n  var labelHtmlFor = htmlFor || attributes.id;\n\n  if (type === \"select\") {\n    var _type = attributes.type,\n        _rest = _objectWithoutProperties(attributes, [\"type\"]);\n\n    return __jsx(\"select\", _extends({}, _rest, {\n      type: _type,\n      ref: innerRef,\n      className: classNames(validationClassNames, customClass),\n      \"aria-invalid\": invalid\n    }), children);\n  }\n\n  if (type === \"file\") {\n    return __jsx(CustomFileInput, props);\n  }\n\n  if (type !== \"checkbox\" && type !== \"radio\" && type !== \"switch\") {\n    return __jsx(\"input\", _extends({}, attributes, {\n      type: type,\n      ref: innerRef,\n      \"aria-invalid\": invalid,\n      className: classNames(validationClassNames, customClass)\n    }));\n  }\n\n  var wrapperClasses = classNames(customClass, mapToCssModules(classNames(\"custom-control\", {\n    \"custom-control-inline\": inline\n  }), cssModule));\n\n  var hidden = attributes.hidden,\n      rest = _objectWithoutProperties(attributes, [\"hidden\"]);\n\n  return __jsx(\"div\", {\n    className: wrapperClasses,\n    hidden: hidden || false\n  }, __jsx(\"input\", _extends({}, rest, {\n    type: type === \"switch\" ? \"checkbox\" : type,\n    ref: innerRef,\n    \"aria-invalid\": invalid,\n    className: classNames(validationClassNames, mapToCssModules(\"custom-control-input\", cssModule))\n  })), __jsx(\"label\", {\n    className: mapToCssModules(\"custom-control-label\", cssModule),\n    htmlFor: labelHtmlFor\n  }, label), children);\n};\n\nexport default CustomInput;","map":null,"metadata":{},"sourceType":"module"}