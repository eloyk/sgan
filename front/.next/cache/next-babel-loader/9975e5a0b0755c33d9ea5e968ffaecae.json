{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\pages\\\\elements\\\\base\\\\alert.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Row, Col, Alert, Portlet, Container } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { pageChangeHeaderTitle, breadcrumbChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport withLayout from \"components/layout/withLayout\"; //import withAuth from \"components/firebase/firebaseWithAuth\"\n\nimport Head from \"next/head\";\n\nvar AlertPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(AlertPage, _React$Component);\n\n  var _super = _createSuper(AlertPage);\n\n  function AlertPage() {\n    _classCallCheck(this, AlertPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AlertPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Set header title\n      this.props.pageChangeHeaderTitle(\"Alert\"); // Set breadcrumb data\n\n      this.props.breadcrumbChange([{\n        text: \"Dashboard\",\n        link: \"/\"\n      }, {\n        text: \"Elements\"\n      }, {\n        text: \"Base\"\n      }, {\n        text: \"Alert\",\n        link: \"/elements/base/alert\"\n      }]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, \"Alert | Panely\")), __jsx(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, __jsx(Col, {\n        xs: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, __jsx(Portlet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }\n      }, __jsx(Portlet.Header, {\n        bordered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, __jsx(Portlet.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }\n      }, \"Basic\")), __jsx(Portlet.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }\n      }, __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, \"Alerts\"), \" are available for any length of text, as well as an optional dismiss button. For proper styling, use one of the eight\", \" \", __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, \"required\"), \" contextual classes\"), __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, __jsx(Col, {\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, __jsx(Portlet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 23\n        }\n      }, __jsx(Portlet.Header, {\n        bordered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, __jsx(Portlet.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 27\n        }\n      }, \"Solid\")), __jsx(Portlet.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 27\n        }\n      }, \"Use \", __jsx(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }\n      }, \"variant\"), \" property to apply contextual colors\"), __jsx(Alert, {\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 27\n        }\n      }, \"Primary\"), __jsx(Alert, {\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 27\n        }\n      }, \"Secondary\"), __jsx(Alert, {\n        variant: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 27\n        }\n      }, \"Info\"), __jsx(Alert, {\n        variant: \"warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 27\n        }\n      }, \"Warning\"), __jsx(Alert, {\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 27\n        }\n      }, \"Danger\"), __jsx(Alert, {\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 27\n        }\n      }, \"Success\"), __jsx(Alert, {\n        variant: \"dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 27\n        }\n      }, \"Dark\"), __jsx(Alert, {\n        variant: \"light\",\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 27\n        }\n      }, \"Light\")))), __jsx(Col, {\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, __jsx(Portlet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }\n      }, __jsx(Portlet.Header, {\n        bordered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, __jsx(Portlet.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 27\n        }\n      }, \"Solid\")), __jsx(Portlet.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 27\n        }\n      }, \"Fill \", __jsx(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 34\n        }\n      }, \"variant\"), \" property with \", __jsx(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 69\n        }\n      }, \"outline-(color)\"), \" to apply these variants\"), __jsx(Alert, {\n        variant: \"outline-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 27\n        }\n      }, \"Primary\"), __jsx(Alert, {\n        variant: \"outline-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 27\n        }\n      }, \"Secondary\"), __jsx(Alert, {\n        variant: \"outline-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 27\n        }\n      }, \"Info\"), __jsx(Alert, {\n        variant: \"outline-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 27\n        }\n      }, \"Warning\"), __jsx(Alert, {\n        variant: \"outline-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 27\n        }\n      }, \"Danger\"), __jsx(Alert, {\n        variant: \"outline-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 27\n        }\n      }, \"Success\"), __jsx(Alert, {\n        variant: \"outline-dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 27\n        }\n      }, \"Dark\"), __jsx(Alert, {\n        variant: \"outline-light\",\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 27\n        }\n      }, \"Light\")))), __jsx(Col, {\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, __jsx(Portlet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }, __jsx(Portlet.Header, {\n        bordered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, __jsx(Portlet.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 27\n        }\n      }, \"Solid\")), __jsx(Portlet.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 27\n        }\n      }, \"Fill \", __jsx(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 34\n        }\n      }, \"variant\"), \" property with \", __jsx(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 69\n        }\n      }, \"label-(color)\"), \" to apply these variants\"), __jsx(Alert, {\n        variant: \"label-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 27\n        }\n      }, \"Primary\"), __jsx(Alert, {\n        variant: \"label-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 27\n        }\n      }, \"Secondary\"), __jsx(Alert, {\n        variant: \"label-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 27\n        }\n      }, \"Info\"), __jsx(Alert, {\n        variant: \"label-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 27\n        }\n      }, \"Warning\"), __jsx(Alert, {\n        variant: \"label-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 27\n        }\n      }, \"Danger\"), __jsx(Alert, {\n        variant: \"label-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 27\n        }\n      }, \"Success\"), __jsx(Alert, {\n        variant: \"label-dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 27\n        }\n      }, \"Dark\"), __jsx(Alert, {\n        variant: \"label-light\",\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 27\n        }\n      }, \"Light\"))))))))), __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, __jsx(Col, {\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, __jsx(Portlet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, __jsx(Portlet.Header, {\n        bordered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, __jsx(Portlet.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 19\n        }\n      }, \"Links\")), __jsx(Portlet.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 19\n        }\n      }, \"Use the \", __jsx(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }\n      }, \"Alert.Link\"), \" component to quickly provide matching colored links within any alert.\"), __jsx(Alert, {\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 19\n        }\n      }, \"A simple alert with \", __jsx(Alert.Link, {\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 41\n        }\n      }, \"an example link\"), \". Give it a click if you like.\"), __jsx(Alert, {\n        variant: \"outline-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      }, \"A simple alert with \", __jsx(Alert.Link, {\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 41\n        }\n      }, \"an example link\"), \". Give it a click if you like.\"), __jsx(Alert, {\n        variant: \"label-success\",\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 19\n        }\n      }, \"A simple alert with \", __jsx(Alert.Link, {\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 41\n        }\n      }, \"an example link\"), \". Give it a click if you like.\"))), __jsx(Portlet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }\n      }, __jsx(Portlet.Header, {\n        bordered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, __jsx(Portlet.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 19\n        }\n      }, \"Additional content\")), __jsx(Portlet.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 19\n        }\n      }, \"Alerts can also contain additional HTML elements like headings, paragraphs and dividers.\"), __jsx(Alert, {\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 19\n        }\n      }, __jsx(Alert.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }, \"Well done!\"), __jsx(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }\n      }, \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\")), __jsx(Alert, {\n        variant: \"outline-success\",\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 19\n        }\n      }, __jsx(Alert.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }, \"Well done!\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }\n      }, \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\"), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      }), __jsx(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }\n      }, \"Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\"))))), __jsx(Col, {\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }\n      }, __jsx(Portlet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }\n      }, __jsx(Portlet.Header, {\n        bordered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }\n      }, __jsx(Portlet.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 19\n        }\n      }, \"Icon\")), __jsx(Portlet.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 19\n        }\n      }, \"If you want to put icon into alert element, you can use \", __jsx(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 77\n        }\n      }, \"icon\"), \" \", \"property and fill it with your icon.\"), __jsx(Alert, {\n        variant: \"primary\",\n        icon: __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faArchive,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 50\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 19\n        }\n      }, \"A simple primary alert with \", __jsx(Alert.Link, {\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 49\n        }\n      }, \"an example link\"), \". Give it a click if you like.\"), __jsx(Alert, {\n        variant: \"outline-secondary\",\n        icon: __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faWrench,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 27\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }\n      }, \"A simple primary alert with \", __jsx(Alert.Link, {\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 49\n        }\n      }, \"an example link\"), \". Give it a click if you like.\"), __jsx(Alert, {\n        variant: \"label-success\",\n        icon: __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faStar,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 56\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 19\n        }\n      }, \"A simple primary alert with \", __jsx(Alert.Link, {\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 49\n        }\n      }, \"an example link\"), \". Give it a click if you like.\"))), __jsx(Portlet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }\n      }, __jsx(Portlet.Header, {\n        bordered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }\n      }, __jsx(Portlet.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 19\n        }\n      }, \"Dismissible alert\")), __jsx(Portlet.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 19\n        }\n      }, \"It\\u2019s possible to dismiss any alert inline. For the most basic use-case an uncontrolled component can provide the functionality wanted without the need to manage/control the state of the component. \", __jsx(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 64\n        }\n      }, \"Alert.Uncontrolled\"), \" does not require \", __jsx(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 33\n        }\n      }, \"isOpen\"), \" nor \", __jsx(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 57\n        }\n      }, \"toggle\"), \" props to work.\"), __jsx(AlertControlled, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 19\n        }\n      }), __jsx(Alert.Uncontrolled, {\n        fade: true,\n        variant: \"outline-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 19\n        }\n      }, \"Holy guacamole! You should check in on some of those fields below.\"), __jsx(Alert.Uncontrolled, {\n        fade: true,\n        variant: \"label-secondary\",\n        className: \"mb-0\",\n        icon: __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faCog,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 27\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 19\n        }\n      }, __jsx(Alert.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }\n      }, \"Well done!\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }\n      }, \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\"), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }\n      }), __jsx(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }\n      }, \"Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\"))))))));\n    }\n  }]);\n\n  return AlertPage;\n}(React.Component); // Controlled Alert example\n\n\nvar AlertControlled = /*#__PURE__*/function (_React$Component2) {\n  _inherits(AlertControlled, _React$Component2);\n\n  var _super2 = _createSuper(AlertControlled);\n\n  function AlertControlled() {\n    var _this;\n\n    _classCallCheck(this, AlertControlled);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super2.call.apply(_super2, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isOpen: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function () {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(AlertControlled, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Alert, {\n        isOpen: this.state.isOpen,\n        toggle: this.toggle,\n        variant: \"success\",\n        icon: __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faStar,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }\n        }),\n        fade: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 7\n        }\n      }, \"Holy guacamole! You should check in on some of those fields below.\");\n    }\n  }]);\n\n  return AlertControlled;\n}(React.Component);\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle: pageChangeHeaderTitle,\n    breadcrumbChange: breadcrumbChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withLayout(AlertPage));","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/pages/elements/base/alert.jsx"],"names":["Row","Col","Alert","Portlet","Container","FontAwesomeIcon","pageChangeHeaderTitle","breadcrumbChange","bindActionCreators","connect","SolidIcon","withLayout","Head","AlertPage","props","text","link","faArchive","faWrench","faStar","faCog","React","Component","AlertControlled","isOpen","setState","state","toggle","mapDispathToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,SAAnC,QAAoD,oBAApD;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,qBAAT,EAAgCC,gBAAhC,QAAwD,eAAxD;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,SAAZ,MAA2B,mCAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,S;;;;;;;;;;;;;wCACgB;AAClB;AACA,WAAKC,KAAL,CAAWR,qBAAX,CAAiC,OAAjC,EAFkB,CAGlB;;AACA,WAAKQ,KAAL,CAAWP,gBAAX,CAA4B,CAC1B;AAAEQ,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,IAAI,EAAE;AAA3B,OAD0B,EAE1B;AAAED,QAAAA,IAAI,EAAE;AAAR,OAF0B,EAG1B;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAH0B,EAI1B;AAAEA,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,IAAI,EAAE;AAAvB,OAJ0B,CAA5B;AAMD;;;6BAEQ;AACP,aACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF,EAIE,MAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,MAAT;AAAgB,QAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE,MAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,4HAEoE,GAFpE,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,wBADF,EAME,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,MAAT;AAAgB,QAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE,MAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADN,yCADF,EAKE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,EAME,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,EAOE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,EAQE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,EASE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,EAUE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,EAWE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,EAYE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,OAAf;AAAuB,QAAA,SAAS,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZF,CAJF,CAFF,CADF,EAyBE,MAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,MAAT;AAAgB,QAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE,MAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADP,qBAC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAD1C,6BADF,EAME,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,EAOE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,EAQE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,EASE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,EAUE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,EAWE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,EAYE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,EAaE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,eAAf;AAA+B,QAAA,SAAS,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbF,CAJF,CAFF,CAzBF,EAkDE,MAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,MAAT;AAAgB,QAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE,MAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADP,qBAC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAD1C,6BADF,EAME,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,EAOE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,EAQE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,EASE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,EAUE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,EAWE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,EAYE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,EAaE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,aAAf;AAA6B,QAAA,SAAS,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbF,CAJF,CAFF,CAlDF,CANF,CAJF,CAFF,CADF,CADF,EA+FE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,MAAT;AAAgB,QAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE,MAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADV,2EADF,EAME,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACsB,MAAC,KAAD,CAAO,IAAP;AAAY,QAAA,IAAI,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADtB,mCANF,EAUE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACsB,MAAC,KAAD,CAAO,IAAP;AAAY,QAAA,IAAI,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADtB,mCAVF,EAcE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,eAAf;AAA+B,QAAA,SAAS,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACsB,MAAC,KAAD,CAAO,IAAP;AAAY,QAAA,IAAI,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADtB,mCAdF,CAJF,CAFF,EA6BE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,MAAT;AAAgB,QAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,EAIE,MAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGADF,EAME,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yMAFF,CANF,EAcE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,iBAAf;AAAiC,QAAA,SAAS,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yMAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FARF,CAdF,CAJF,CA7BF,CADF,EAkEE,MAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,MAAT;AAAgB,QAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAIE,MAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAC0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD1D,EAC4E,GAD5E,yCADF,EAME,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAyB,QAAA,IAAI,EAAE,MAAC,eAAD;AAAiB,UAAA,IAAI,EAAEN,SAAS,CAACO,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAC8B,MAAC,KAAD,CAAO,IAAP;AAAY,QAAA,IAAI,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAD9B,mCANF,EAUE,MAAC,KAAD;AACE,QAAA,OAAO,EAAC,mBADV;AAEE,QAAA,IAAI,EAAE,MAAC,eAAD;AAAiB,UAAA,IAAI,EAAEP,SAAS,CAACQ,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAI8B,MAAC,KAAD,CAAO,IAAP;AAAY,QAAA,IAAI,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJ9B,mCAVF,EAiBE,MAAC,KAAD;AAAO,QAAA,OAAO,EAAC,eAAf;AAA+B,QAAA,IAAI,EAAE,MAAC,eAAD;AAAiB,UAAA,IAAI,EAAER,SAAS,CAACS,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAC8B,MAAC,KAAD,CAAO,IAAP;AAAY,QAAA,IAAI,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAD9B,mCAjBF,CAJF,CAFF,EAgCE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,MAAT;AAAgB,QAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,EAIE,MAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uNAG6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAH7C,wBAIc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJd,WAIsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJtC,oBADF,EAQE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EASE,MAAC,KAAD,CAAO,YAAP;AAAoB,QAAA,IAAI,MAAxB;AAAyB,QAAA,OAAO,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EATF,EAYE,MAAC,KAAD,CAAO,YAAP;AACE,QAAA,IAAI,MADN;AAEE,QAAA,OAAO,EAAC,iBAFV;AAGE,QAAA,SAAS,EAAC,MAHZ;AAIE,QAAA,IAAI,EAAE,MAAC,eAAD;AAAiB,UAAA,IAAI,EAAET,SAAS,CAACU,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yMAPF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAaE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FAbF,CAZF,CAJF,CAhCF,CAlEF,CA/FF,CAJF,CADF;AAiPD;;;;EA/PqBC,KAAK,CAACC,S,GAkQ9B;;;IACMC,e;;;;;;;;;;;;;;;;4DAEI;AAAEC,MAAAA,MAAM,EAAE;AAAV,K;;6DAGC,YAAM;AACb,YAAKC,QAAL,CAAc;AAAED,QAAAA,MAAM,EAAE,CAAC,MAAKE,KAAL,CAAWF;AAAtB,OAAd;AACD,K;;;;;;;6BAEQ;AACP,aACE,MAAC,KAAD;AACE,QAAA,MAAM,EAAE,KAAKE,KAAL,CAAWF,MADrB;AAEE,QAAA,MAAM,EAAE,KAAKG,MAFf;AAGE,QAAA,OAAO,EAAC,SAHV;AAIE,QAAA,IAAI,EAAE,MAAC,eAAD;AAAiB,UAAA,IAAI,EAAEjB,SAAS,CAACS,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJR;AAKE,QAAA,IAAI,MALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EADF;AAWD;;;;EArB2BE,KAAK,CAACC,S;;AAwBpC,SAASM,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,SAAOrB,kBAAkB,CAAC;AAAEF,IAAAA,qBAAqB,EAArBA,qBAAF;AAAyBC,IAAAA,gBAAgB,EAAhBA;AAAzB,GAAD,EAA8CsB,QAA9C,CAAzB;AACD;;AAED,eAAepB,OAAO,CAAC,IAAD,EAAOmB,iBAAP,CAAP,CAAiCjB,UAAU,CAACE,SAAD,CAA3C,CAAf","sourcesContent":["import { Row, Col, Alert, Portlet, Container } from \"@panely/components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { pageChangeHeaderTitle, breadcrumbChange } from \"store/actions\"\nimport { bindActionCreators } from \"redux\"\nimport { connect } from \"react-redux\"\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\"\nimport withLayout from \"components/layout/withLayout\"\n//import withAuth from \"components/firebase/firebaseWithAuth\"\nimport Head from \"next/head\"\n\nclass AlertPage extends React.Component {\n  componentDidMount() {\n    // Set header title\n    this.props.pageChangeHeaderTitle(\"Alert\")\n    // Set breadcrumb data\n    this.props.breadcrumbChange([\n      { text: \"Dashboard\", link: \"/\" },\n      { text: \"Elements\" },\n      { text: \"Base\" },\n      { text: \"Alert\", link: \"/elements/base/alert\" }\n    ])\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Head>\n          <title>Alert | Panely</title>\n        </Head>\n        <Container fluid>\n          <Row>\n            <Col xs=\"12\">\n              {/* BEGIN Portlet */}\n              <Portlet>\n                <Portlet.Header bordered>\n                  <Portlet.Title>Basic</Portlet.Title>\n                </Portlet.Header>\n                <Portlet.Body>\n                  <p>\n                    <strong>Alerts</strong> are available for any length of text, as well as an\n                    optional dismiss button. For proper styling, use one of the eight{\" \"}\n                    <strong>required</strong> contextual classes\n                  </p>\n                  <Row>\n                    <Col md=\"4\">\n                      {/* BEGIN Portlet */}\n                      <Portlet>\n                        <Portlet.Header bordered>\n                          <Portlet.Title>Solid</Portlet.Title>\n                        </Portlet.Header>\n                        <Portlet.Body>\n                          <p>\n                            Use <code>variant</code> property to apply contextual colors\n                          </p>\n                          {/* BEGIN Alerts */}\n                          <Alert variant=\"primary\">Primary</Alert>\n                          <Alert variant=\"secondary\">Secondary</Alert>\n                          <Alert variant=\"info\">Info</Alert>\n                          <Alert variant=\"warning\">Warning</Alert>\n                          <Alert variant=\"danger\">Danger</Alert>\n                          <Alert variant=\"success\">Success</Alert>\n                          <Alert variant=\"dark\">Dark</Alert>\n                          <Alert variant=\"light\" className=\"mb-0\">Light</Alert>\n                          {/* END Alerts */}\n                        </Portlet.Body>\n                      </Portlet>\n                      {/* END Portlet */}\n                    </Col>\n                    <Col md=\"4\">\n                      {/* BEGIN Portlet */}\n                      <Portlet>\n                        <Portlet.Header bordered>\n                          <Portlet.Title>Solid</Portlet.Title>\n                        </Portlet.Header>\n                        <Portlet.Body>\n                          <p>\n                            Fill <code>variant</code> property with <code>outline-(color)</code> to\n                            apply these variants\n                          </p>\n                          {/* BEGIN Alerts */}\n                          <Alert variant=\"outline-primary\">Primary</Alert>\n                          <Alert variant=\"outline-secondary\">Secondary</Alert>\n                          <Alert variant=\"outline-info\">Info</Alert>\n                          <Alert variant=\"outline-warning\">Warning</Alert>\n                          <Alert variant=\"outline-danger\">Danger</Alert>\n                          <Alert variant=\"outline-success\">Success</Alert>\n                          <Alert variant=\"outline-dark\">Dark</Alert>\n                          <Alert variant=\"outline-light\" className=\"mb-0\">Light</Alert>\n                          {/* END Alerts */}\n                        </Portlet.Body>\n                      </Portlet>\n                      {/* END Portlet */}\n                    </Col>\n                    <Col md=\"4\">\n                      {/* BEGIN Portlet */}\n                      <Portlet>\n                        <Portlet.Header bordered>\n                          <Portlet.Title>Solid</Portlet.Title>\n                        </Portlet.Header>\n                        <Portlet.Body>\n                          <p>\n                            Fill <code>variant</code> property with <code>label-(color)</code> to\n                            apply these variants\n                          </p>\n                          {/* BEGIN Alerts */}\n                          <Alert variant=\"label-primary\">Primary</Alert>\n                          <Alert variant=\"label-secondary\">Secondary</Alert>\n                          <Alert variant=\"label-info\">Info</Alert>\n                          <Alert variant=\"label-warning\">Warning</Alert>\n                          <Alert variant=\"label-danger\">Danger</Alert>\n                          <Alert variant=\"label-success\">Success</Alert>\n                          <Alert variant=\"label-dark\">Dark</Alert>\n                          <Alert variant=\"label-light\" className=\"mb-0\">Light</Alert>\n                          {/* END Alerts */}\n                        </Portlet.Body>\n                      </Portlet>\n                      {/* END Portlet */}\n                    </Col>\n                  </Row>\n                </Portlet.Body>\n              </Portlet>\n              {/* END Portlet */}\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"6\">\n              {/* BEGIN Portlet */}\n              <Portlet>\n                <Portlet.Header bordered>\n                  <Portlet.Title>Links</Portlet.Title>\n                </Portlet.Header>\n                <Portlet.Body>\n                  <p>\n                    Use the <code>Alert.Link</code> component to quickly provide matching colored\n                    links within any alert.\n                  </p>\n                  {/* BEGIN Alerts */}\n                  <Alert variant=\"primary\">\n                    A simple alert with <Alert.Link href=\"#\">an example link</Alert.Link>.\n                    Give it a click if you like.\n                  </Alert>\n                  <Alert variant=\"outline-secondary\">\n                    A simple alert with <Alert.Link href=\"#\">an example link</Alert.Link>.\n                    Give it a click if you like.\n                  </Alert>\n                  <Alert variant=\"label-success\" className=\"mb-0\">\n                    A simple alert with <Alert.Link href=\"#\">an example link</Alert.Link>.\n                    Give it a click if you like.\n                  </Alert>\n                  {/* END Alerts */}\n                </Portlet.Body>\n              </Portlet>\n              {/* END Portlet */}\n              {/* BEGIN Portlet */}\n              <Portlet>\n                <Portlet.Header bordered>\n                  <Portlet.Title>Additional content</Portlet.Title>\n                </Portlet.Header>\n                <Portlet.Body>\n                  <p>\n                    Alerts can also contain additional HTML elements like headings, paragraphs and\n                    dividers.\n                  </p>\n                  {/* BEGIN Alerts */}\n                  <Alert variant=\"success\">\n                    <Alert.Header>Well done!</Alert.Header>\n                    <p className=\"mb-0\">\n                      Aww yeah, you successfully read this important alert message. This example\n                      text is going to run a bit longer so that you can see how spacing within an\n                      alert works with this kind of content.\n                    </p>\n                  </Alert>\n                  <Alert variant=\"outline-success\" className=\"mb-0\">\n                    <Alert.Header>Well done!</Alert.Header>\n                    <p>\n                      Aww yeah, you successfully read this important alert message. This example\n                      text is going to run a bit longer so that you can see how spacing within an\n                      alert works with this kind of content.\n                    </p>\n                    <hr />\n                    <p className=\"mb-0\">\n                      Whenever you need to, be sure to use margin utilities to keep things nice and\n                      tidy.\n                    </p>\n                  </Alert>\n                  {/* END Alerts */}\n                </Portlet.Body>\n              </Portlet>\n              {/* END Portlet */}\n            </Col>\n            <Col md=\"6\">\n              {/* BEGIN Portlet */}\n              <Portlet>\n                <Portlet.Header bordered>\n                  <Portlet.Title>Icon</Portlet.Title>\n                </Portlet.Header>\n                <Portlet.Body>\n                  <p>\n                    If you want to put icon into alert element, you can use <code>icon</code>{\" \"}\n                    property and fill it with your icon.\n                  </p>\n                  {/* BEGIN Alerts */}\n                  <Alert variant=\"primary\" icon={<FontAwesomeIcon icon={SolidIcon.faArchive} />}>\n                    A simple primary alert with <Alert.Link href=\"#\">an example link</Alert.Link>.\n                    Give it a click if you like.\n                  </Alert>\n                  <Alert\n                    variant=\"outline-secondary\"\n                    icon={<FontAwesomeIcon icon={SolidIcon.faWrench} />}\n                  >\n                    A simple primary alert with <Alert.Link href=\"#\">an example link</Alert.Link>.\n                    Give it a click if you like.\n                  </Alert>\n                  <Alert variant=\"label-success\" icon={<FontAwesomeIcon icon={SolidIcon.faStar} />}>\n                    A simple primary alert with <Alert.Link href=\"#\">an example link</Alert.Link>.\n                    Give it a click if you like.\n                  </Alert>\n                  {/* END Alerts */}\n                </Portlet.Body>\n              </Portlet>\n              {/* END Portlet */}\n              {/* BEGIN Portlet */}\n              <Portlet>\n                <Portlet.Header bordered>\n                  <Portlet.Title>Dismissible alert</Portlet.Title>\n                </Portlet.Header>\n                <Portlet.Body>\n                  <p>\n                    It’s possible to dismiss any alert inline. For the most basic use-case an\n                    uncontrolled component can provide the functionality wanted without the need to\n                    manage/control the state of the component. <code>Alert.Uncontrolled</code> does\n                    not require <code>isOpen</code> nor <code>toggle</code> props to work.\n                  </p>\n                  {/* BEGIN Alerts */}\n                  <AlertControlled />\n                  <Alert.Uncontrolled fade variant=\"outline-warning\">\n                    Holy guacamole! You should check in on some of those fields below.\n                  </Alert.Uncontrolled>\n                  <Alert.Uncontrolled\n                    fade\n                    variant=\"label-secondary\"\n                    className=\"mb-0\"\n                    icon={<FontAwesomeIcon icon={SolidIcon.faCog} />}\n                  >\n                    <Alert.Header>Well done!</Alert.Header>\n                    <p>\n                      Aww yeah, you successfully read this important alert message. This example\n                      text is going to run a bit longer so that you can see how spacing within an\n                      alert works with this kind of content.\n                    </p>\n                    <hr />\n                    <p className=\"mb-0\">\n                      Whenever you need to, be sure to use margin utilities to keep things nice and\n                      tidy.\n                    </p>\n                  </Alert.Uncontrolled>\n                  {/* END Alerts */}\n                </Portlet.Body>\n              </Portlet>\n              {/* END Portlet */}\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n    )\n  }\n}\n\n// Controlled Alert example\nclass AlertControlled extends React.Component {\n  // Default state\n  state = { isOpen: true }\n\n  // Handle dismiss button on alert elements\n  toggle = () => {\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n  render() {\n    return (\n      <Alert\n        isOpen={this.state.isOpen}\n        toggle={this.toggle}\n        variant=\"success\"\n        icon={<FontAwesomeIcon icon={SolidIcon.faStar} />}\n        fade\n      >\n        Holy guacamole! You should check in on some of those fields below.\n      </Alert>\n    )\n  }\n}\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({ pageChangeHeaderTitle, breadcrumbChange }, dispatch)\n}\n\nexport default connect(null, mapDispathToProps)(withLayout(AlertPage))\n"]},"metadata":{},"sourceType":"module"}