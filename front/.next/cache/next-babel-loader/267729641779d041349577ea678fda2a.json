{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\pages\\\\pages\\\\login\\\\login-1.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Form, Label, Input, Button, Portlet, Container, CustomInput, FloatLabel, Widget12 } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport * as yup from \"yup\";\nimport withLayout from \"components/layout/withLayout\";\nimport withAuth from \"components/firebase/firebaseWithAuth\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\n\nfunction Login1Page() {\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Login 1 | Panely\")), __jsx(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    noGutters: true,\n    className: \"align-items-center justify-content-center h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    sm: \"8\",\n    md: \"6\",\n    lg: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(Portlet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(Portlet.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"text-center mt-2 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, __jsx(Widget12, {\n    display: true,\n    circle: true,\n    variant: \"label-primary\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: SolidIcon.faUserAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }))), __jsx(Login1Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  })))))));\n}\n\nfunction Login1Form() {\n  // Define Yup schema for form validation\n  const schema = yup.object().shape({\n    email: yup.string().email(\"Your email is not valid\").required(\"Please enter your email\"),\n    password: yup.string().min(6, \"Please enter at least 6 characters\").required(\"Please provide your password\"),\n    remember: yup.boolean()\n  });\n  const {\n    control,\n    handleSubmit,\n    errors\n  } = useForm({\n    // Apply Yup as resolver for react-hook-form\n    resolver: yupResolver(schema),\n    // Define the default values for all input forms\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n      remember: false\n    }\n  }); // Handle form submit event\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return __jsx(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, __jsx(FloatLabel, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(Controller, {\n    as: Input,\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    size: \"lg\",\n    control: control,\n    invalid: Boolean(errors.email),\n    placeholder: \"Please insert your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), __jsx(Label, {\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Email\"), errors.email && __jsx(Form.Feedback, {\n    children: errors.email.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 28\n    }\n  }))), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, __jsx(FloatLabel, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, __jsx(Controller, {\n    as: Input,\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    size: \"lg\",\n    control: control,\n    invalid: Boolean(errors.password),\n    placeholder: \"Please insert your password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), __jsx(Label, {\n    for: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Password\"), errors.password && __jsx(Form.Feedback, {\n    children: errors.password.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 31\n    }\n  }))), __jsx(\"div\", {\n    className: \"d-flex align-items-center justify-content-between mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, __jsx(Form.Group, {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, __jsx(Controller, {\n    control: control,\n    name: \"remember\",\n    render: ({\n      onChange,\n      onBlur,\n      value,\n      name,\n      ref\n    }) => __jsx(CustomInput, {\n      type: \"switch\",\n      size: \"lg\",\n      id: \"remember\",\n      label: \"Remember me\",\n      onBlur: onBlur,\n      onChange: e => onChange(e.target.checked),\n      checked: value,\n      innerRef: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  })), __jsx(Link, {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"Forgot password?\")), __jsx(\"div\", {\n    className: \"d-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"Don't have an account ? \", __jsx(Link, {\n    href: \"/pages/register/register-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 35\n    }\n  }, \"Sign Up\")), __jsx(Button, {\n    type: \"submit\",\n    variant: \"label-primary\",\n    size: \"lg\",\n    width: \"widest\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n}\n\nexport default withAuth(withLayout(Login1Page, \"blank\"));","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/pages/pages/login/login-1.jsx"],"names":["Row","Col","Form","Label","Input","Button","Portlet","Container","CustomInput","FloatLabel","Widget12","FontAwesomeIcon","useForm","Controller","yupResolver","SolidIcon","yup","withLayout","withAuth","Link","Head","Login1Page","faUserAlt","Login1Form","schema","object","shape","email","string","required","password","min","remember","boolean","control","handleSubmit","errors","resolver","defaultValues","onSubmit","data","console","log","Boolean","message","onChange","onBlur","value","name","ref","e","target","checked"],"mappings":"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","sourcesContent":["import {\n  Row,\n  Col,\n  Form,\n  Label,\n  Input,\n  Button,\n  Portlet,\n  Container,\n  CustomInput,\n  FloatLabel,\n  Widget12\n} from \"@panely/components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { yupResolver } from \"@hookform/resolvers\"\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\"\nimport * as yup from \"yup\"\nimport withLayout from \"components/layout/withLayout\"\nimport withAuth from \"components/firebase/firebaseWithAuth\"\nimport Link from \"next/link\"\nimport Head from \"next/head\"\n\nfunction Login1Page() {\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Login 1 | Panely</title>\n      </Head>\n      <Container fluid>\n        <Row noGutters className=\"align-items-center justify-content-center h-100\">\n          <Col sm=\"8\" md=\"6\" lg=\"4\">\n            {/* BEGIN Portlet */}\n            <Portlet>\n              <Portlet.Body>\n                <div className=\"text-center mt-2 mb-4\">\n                  {/* BEGIN Widget */}\n                  <Widget12 display circle variant=\"label-primary\" className=\"mb-4\">\n                    <FontAwesomeIcon icon={SolidIcon.faUserAlt} />\n                  </Widget12>\n                  {/* END Widget */}\n                </div>\n                <Login1Form />\n              </Portlet.Body>\n            </Portlet>\n            {/* END Portlet */}\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  )\n}\n\nfunction Login1Form() {\n  // Define Yup schema for form validation\n  const schema = yup.object().shape({\n    email: yup\n      .string()\n      .email(\"Your email is not valid\")\n      .required(\"Please enter your email\"),\n    password: yup\n      .string()\n      .min(6, \"Please enter at least 6 characters\")\n      .required(\"Please provide your password\"),\n    remember: yup.boolean()\n  })\n\n  const { control, handleSubmit, errors } = useForm({\n    // Apply Yup as resolver for react-hook-form\n    resolver: yupResolver(schema),\n    // Define the default values for all input forms\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n      remember: false\n    }\n  })\n\n  // Handle form submit event\n  const onSubmit = data => {\n    console.log(data)\n  }\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      {/* BEGIN Form Group */}\n      <Form.Group>\n        <FloatLabel size=\"lg\">\n          <Controller\n            as={Input}\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            size=\"lg\"\n            control={control}\n            invalid={Boolean(errors.email)}\n            placeholder=\"Please insert your email\"\n          />\n          <Label for=\"email\">Email</Label>\n          {errors.email && <Form.Feedback children={errors.email.message} />}\n        </FloatLabel>\n      </Form.Group>\n      {/* END Form Group */}\n      {/* BEGIN Form Group */}\n      <Form.Group>\n        <FloatLabel size=\"lg\">\n          <Controller\n            as={Input}\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            size=\"lg\"\n            control={control}\n            invalid={Boolean(errors.password)}\n            placeholder=\"Please insert your password\"\n          />\n          <Label for=\"password\">Password</Label>\n          {errors.password && <Form.Feedback children={errors.password.message} />}\n        </FloatLabel>\n      </Form.Group>\n      {/* END Form Group */}\n      <div className=\"d-flex align-items-center justify-content-between mb-3\">\n        {/* BEGIN Form Group */}\n        <Form.Group className=\"mb-0\">\n          <Controller\n            control={control}\n            name=\"remember\"\n            render={({ onChange, onBlur, value, name, ref }) => (\n              <CustomInput\n                type=\"switch\"\n                size=\"lg\"\n                id=\"remember\"\n                label=\"Remember me\"\n                onBlur={onBlur}\n                onChange={e => onChange(e.target.checked)}\n                checked={value}\n                innerRef={ref}\n              />\n            )}\n          />\n        </Form.Group>\n        {/* END Form Group */}\n        <Link href=\"#\">Forgot password?</Link>\n      </div>\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <span>\n          Don't have an account ? <Link href=\"/pages/register/register-1\">Sign Up</Link>\n        </span>\n        <Button type=\"submit\" variant=\"label-primary\" size=\"lg\" width=\"widest\">\n          Login\n        </Button>\n      </div>\n    </Form>\n  )\n}\n\nexport default withAuth(withLayout(Login1Page, \"blank\"))\n"]},"metadata":{},"sourceType":"module"}