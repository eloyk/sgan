{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\slick\\\\inner-slider.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport initialState from \"./initial-state\";\nimport debounce from \"lodash.debounce\";\nimport classnames from \"classnames\";\nimport { getOnDemandLazySlides, extractObject, initializedState, getHeight, canGoNext, slideHandler, changeSlide, keyHandler, swipeStart, swipeMove, swipeEnd, getPreClones, getPostClones, getTrackLeft, getTrackCSS } from \"./utils/innerSliderUtils\";\nimport { Track } from \"./track\";\nimport { Dots } from \"./dots\";\nimport { PrevArrow, NextArrow } from \"./arrows\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nexport var InnerSlider = /*#__PURE__*/function (_React$Component) {\n  _inherits(InnerSlider, _React$Component);\n\n  var _super = _createSuper(InnerSlider);\n\n  function InnerSlider(props) {\n    var _this;\n\n    _classCallCheck(this, InnerSlider);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"listRefHandler\", function (ref) {\n      return _this.list = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"trackRefHandler\", function (ref) {\n      return _this.track = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"adaptHeight\", function () {\n      if (_this.props.adaptiveHeight && _this.list) {\n        var elem = _this.list.querySelector(\"[data-index=\\\"\".concat(_this.state.currentSlide, \"\\\"]\"));\n\n        _this.list.style.height = getHeight(elem) + \"px\";\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.props.onInit && _this.props.onInit();\n\n      if (_this.props.lazyLoad) {\n        var slidesToLoad = getOnDemandLazySlides(_objectSpread(_objectSpread({}, _this.props), _this.state));\n\n        if (slidesToLoad.length > 0) {\n          _this.setState(function (prevState) {\n            return {\n              lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)\n            };\n          });\n\n          if (_this.props.onLazyLoad) {\n            _this.props.onLazyLoad(slidesToLoad);\n          }\n        }\n      }\n\n      var spec = _objectSpread({\n        listRef: _this.list,\n        trackRef: _this.track\n      }, _this.props);\n\n      _this.updateState(spec, true, function () {\n        _this.adaptHeight();\n\n        _this.props.autoplay && _this.autoPlay(\"update\");\n      });\n\n      if (_this.props.lazyLoad === \"progressive\") {\n        _this.lazyLoadTimer = setInterval(_this.progressiveLazyLoad, 1000);\n      }\n\n      _this.ro = new ResizeObserver(function () {\n        if (_this.state.animating) {\n          _this.onWindowResized(false); // don't set trackStyle hence don't break animation\n\n\n          _this.callbackTimers.push(setTimeout(function () {\n            return _this.onWindowResized();\n          }, _this.props.speed));\n        } else {\n          _this.onWindowResized();\n        }\n      });\n\n      _this.ro.observe(_this.list);\n\n      Array.prototype.forEach.call(document.querySelectorAll(\".slick-slide\"), function (slide) {\n        slide.onfocus = _this.props.pauseOnFocus ? _this.onSlideFocus : null;\n        slide.onblur = _this.props.pauseOnFocus ? _this.onSlideBlur : null;\n      });\n\n      if (window.addEventListener) {\n        window.addEventListener(\"resize\", _this.onWindowResized);\n      } else {\n        window.attachEvent(\"onresize\", _this.onWindowResized);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillUnmount\", function () {\n      if (_this.animationEndCallback) {\n        clearTimeout(_this.animationEndCallback);\n      }\n\n      if (_this.lazyLoadTimer) {\n        clearInterval(_this.lazyLoadTimer);\n      }\n\n      if (_this.callbackTimers.length) {\n        _this.callbackTimers.forEach(function (timer) {\n          return clearTimeout(timer);\n        });\n\n        _this.callbackTimers = [];\n      }\n\n      if (window.addEventListener) {\n        window.removeEventListener(\"resize\", _this.onWindowResized);\n      } else {\n        window.detachEvent(\"onresize\", _this.onWindowResized);\n      }\n\n      if (_this.autoplayTimer) {\n        clearInterval(_this.autoplayTimer);\n      }\n\n      _this.ro.disconnect();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidUpdate\", function (prevProps) {\n      _this.checkImagesLoad();\n\n      _this.props.onReInit && _this.props.onReInit();\n\n      if (_this.props.lazyLoad) {\n        var slidesToLoad = getOnDemandLazySlides(_objectSpread(_objectSpread({}, _this.props), _this.state));\n\n        if (slidesToLoad.length > 0) {\n          _this.setState(function (prevState) {\n            return {\n              lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)\n            };\n          });\n\n          if (_this.props.onLazyLoad) {\n            _this.props.onLazyLoad(slidesToLoad);\n          }\n        }\n      } // if (this.props.onLazyLoad) {\n      //   this.props.onLazyLoad([leftMostSlide])\n      // }\n\n\n      _this.adaptHeight();\n\n      var spec = _objectSpread(_objectSpread({\n        listRef: _this.list,\n        trackRef: _this.track\n      }, _this.props), _this.state);\n\n      var setTrackStyle = _this.didPropsChange(prevProps);\n\n      setTrackStyle && _this.updateState(spec, setTrackStyle, function () {\n        if (_this.state.currentSlide >= React.Children.count(_this.props.children)) {\n          _this.changeSlide({\n            message: \"index\",\n            index: React.Children.count(_this.props.children) - _this.props.slidesToShow,\n            currentSlide: _this.state.currentSlide\n          });\n        }\n\n        if (_this.props.autoplay) {\n          _this.autoPlay(\"update\");\n        } else {\n          _this.pause(\"paused\");\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onWindowResized\", function (setTrackStyle) {\n      if (_this.debouncedResize) _this.debouncedResize.cancel();\n      _this.debouncedResize = debounce(function () {\n        return _this.resizeWindow(setTrackStyle);\n      }, 50);\n\n      _this.debouncedResize();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resizeWindow\", function () {\n      var setTrackStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var isTrackMounted = Boolean(_this.track && _this.track.node); // prevent warning: setting state on unmounted component (server side rendering)\n\n      if (!isTrackMounted) return;\n\n      var spec = _objectSpread(_objectSpread({\n        listRef: _this.list,\n        trackRef: _this.track\n      }, _this.props), _this.state);\n\n      _this.updateState(spec, setTrackStyle, function () {\n        if (_this.props.autoplay) _this.autoPlay(\"update\");else _this.pause(\"paused\");\n      }); // animating state should be cleared while resizing, otherwise autoplay stops working\n\n\n      _this.setState({\n        animating: false\n      });\n\n      clearTimeout(_this.animationEndCallback);\n      delete _this.animationEndCallback;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateState\", function (spec, setTrackStyle, callback) {\n      var updatedState = initializedState(spec);\n      spec = _objectSpread(_objectSpread(_objectSpread({}, spec), updatedState), {}, {\n        slideIndex: updatedState.currentSlide\n      });\n      var targetLeft = getTrackLeft(spec);\n      spec = _objectSpread(_objectSpread({}, spec), {}, {\n        left: targetLeft\n      });\n      var trackStyle = getTrackCSS(spec);\n\n      if (setTrackStyle || React.Children.count(_this.props.children) !== React.Children.count(spec.children)) {\n        updatedState[\"trackStyle\"] = trackStyle;\n      }\n\n      _this.setState(updatedState, callback);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"ssrInit\", function () {\n      if (_this.props.variableWidth) {\n        var _trackWidth = 0,\n            _trackLeft = 0;\n        var childrenWidths = [];\n        var preClones = getPreClones(_objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {\n          slideCount: _this.props.children.length\n        }));\n        var postClones = getPostClones(_objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {\n          slideCount: _this.props.children.length\n        }));\n\n        _this.props.children.forEach(function (child) {\n          childrenWidths.push(child.props.style.width);\n          _trackWidth += child.props.style.width;\n        });\n\n        for (var i = 0; i < preClones; i++) {\n          _trackLeft += childrenWidths[childrenWidths.length - 1 - i];\n          _trackWidth += childrenWidths[childrenWidths.length - 1 - i];\n        }\n\n        for (var _i = 0; _i < postClones; _i++) {\n          _trackWidth += childrenWidths[_i];\n        }\n\n        for (var _i2 = 0; _i2 < _this.state.currentSlide; _i2++) {\n          _trackLeft += childrenWidths[_i2];\n        }\n\n        var _trackStyle = {\n          width: _trackWidth + \"px\",\n          left: -_trackLeft + \"px\"\n        };\n\n        if (_this.props.centerMode) {\n          var currentWidth = \"\".concat(childrenWidths[_this.state.currentSlide], \"px\");\n          _trackStyle.left = \"calc(\".concat(_trackStyle.left, \" + (100% - \").concat(currentWidth, \") / 2 ) \");\n        }\n\n        return {\n          trackStyle: _trackStyle\n        };\n      }\n\n      var childrenCount = React.Children.count(_this.props.children);\n\n      var spec = _objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {\n        slideCount: childrenCount\n      });\n\n      var slideCount = getPreClones(spec) + getPostClones(spec) + childrenCount;\n      var trackWidth = 100 / _this.props.slidesToShow * slideCount;\n      var slideWidth = 100 / slideCount;\n      var trackLeft = -slideWidth * (getPreClones(spec) + _this.state.currentSlide) * trackWidth / 100;\n\n      if (_this.props.centerMode) {\n        trackLeft += (100 - slideWidth * trackWidth / 100) / 2;\n      }\n\n      var trackStyle = {\n        width: trackWidth + \"%\",\n        left: trackLeft + \"%\"\n      };\n      return {\n        slideWidth: slideWidth + \"%\",\n        trackStyle: trackStyle\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkImagesLoad\", function () {\n      var images = _this.list.querySelectorAll(\".slick-slide img\");\n\n      var imagesCount = images.length,\n          loadedCount = 0;\n      Array.prototype.forEach.call(images, function (image) {\n        var handler = function handler() {\n          return ++loadedCount && loadedCount >= imagesCount && _this.onWindowResized();\n        };\n\n        if (!image.onclick) {\n          image.onclick = function () {\n            return image.parentNode.focus();\n          };\n        } else {\n          var prevClickHandler = image.onclick;\n\n          image.onclick = function () {\n            prevClickHandler();\n            image.parentNode.focus();\n          };\n        }\n\n        if (!image.onload) {\n          if (_this.props.lazyLoad) {\n            image.onload = function () {\n              _this.adaptHeight();\n\n              _this.callbackTimers.push(setTimeout(_this.onWindowResized, _this.props.speed));\n            };\n          } else {\n            image.onload = handler;\n\n            image.onerror = function () {\n              handler();\n              _this.props.onLazyLoadError && _this.props.onLazyLoadError();\n            };\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"progressiveLazyLoad\", function () {\n      var slidesToLoad = [];\n\n      var spec = _objectSpread(_objectSpread({}, _this.props), _this.state);\n\n      for (var index = _this.state.currentSlide; index < _this.state.slideCount + getPostClones(spec); index++) {\n        if (_this.state.lazyLoadedList.indexOf(index) < 0) {\n          slidesToLoad.push(index);\n          break;\n        }\n      }\n\n      for (var _index = _this.state.currentSlide - 1; _index >= -getPreClones(spec); _index--) {\n        if (_this.state.lazyLoadedList.indexOf(_index) < 0) {\n          slidesToLoad.push(_index);\n          break;\n        }\n      }\n\n      if (slidesToLoad.length > 0) {\n        _this.setState(function (state) {\n          return {\n            lazyLoadedList: state.lazyLoadedList.concat(slidesToLoad)\n          };\n        });\n\n        if (_this.props.onLazyLoad) {\n          _this.props.onLazyLoad(slidesToLoad);\n        }\n      } else {\n        if (_this.lazyLoadTimer) {\n          clearInterval(_this.lazyLoadTimer);\n          delete _this.lazyLoadTimer;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slideHandler\", function (index) {\n      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _this$props = _this.props,\n          asNavFor = _this$props.asNavFor,\n          beforeChange = _this$props.beforeChange,\n          onLazyLoad = _this$props.onLazyLoad,\n          speed = _this$props.speed,\n          afterChange = _this$props.afterChange; // capture currentslide before state is updated\n\n      var currentSlide = _this.state.currentSlide;\n\n      var _slideHandler = slideHandler(_objectSpread(_objectSpread(_objectSpread({\n        index: index\n      }, _this.props), _this.state), {}, {\n        trackRef: _this.track,\n        useCSS: _this.props.useCSS && !dontAnimate\n      })),\n          state = _slideHandler.state,\n          nextState = _slideHandler.nextState;\n\n      if (!state) return;\n      beforeChange && beforeChange(currentSlide, state.currentSlide);\n      var slidesToLoad = state.lazyLoadedList.filter(function (value) {\n        return _this.state.lazyLoadedList.indexOf(value) < 0;\n      });\n      onLazyLoad && slidesToLoad.length > 0 && onLazyLoad(slidesToLoad);\n\n      if (!_this.props.waitForAnimate && _this.animationEndCallback) {\n        clearTimeout(_this.animationEndCallback);\n        afterChange && afterChange(currentSlide);\n        delete _this.animationEndCallback;\n      }\n\n      _this.setState(state, function () {\n        // asNavForIndex check is to avoid recursive calls of slideHandler in waitForAnimate=false mode\n        if (asNavFor && _this.asNavForIndex !== index) {\n          _this.asNavForIndex = index;\n          asNavFor.innerSlider.slideHandler(index);\n        }\n\n        if (!nextState) return;\n        _this.animationEndCallback = setTimeout(function () {\n          var animating = nextState.animating,\n              firstBatch = _objectWithoutProperties(nextState, [\"animating\"]);\n\n          _this.setState(firstBatch, function () {\n            _this.callbackTimers.push(setTimeout(function () {\n              return _this.setState({\n                animating: animating\n              });\n            }, 10));\n\n            afterChange && afterChange(state.currentSlide);\n            delete _this.animationEndCallback;\n          });\n        }, speed);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeSlide\", function (options) {\n      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var spec = _objectSpread(_objectSpread({}, _this.props), _this.state);\n\n      var targetSlide = changeSlide(spec, options);\n      if (targetSlide !== 0 && !targetSlide) return;\n\n      if (dontAnimate === true) {\n        _this.slideHandler(targetSlide, dontAnimate);\n      } else {\n        _this.slideHandler(targetSlide);\n      }\n\n      _this.props.autoplay && _this.autoPlay(\"update\");\n\n      if (_this.props.focusOnSelect) {\n        var nodes = _this.list.querySelectorAll(\".slick-current\");\n\n        nodes[0] && nodes[0].focus();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clickHandler\", function (e) {\n      if (_this.clickable === false) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      _this.clickable = true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"keyHandler\", function (e) {\n      var dir = keyHandler(e, _this.props.accessibility, _this.props.rtl);\n      dir !== \"\" && _this.changeSlide({\n        message: dir\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectHandler\", function (options) {\n      _this.changeSlide(options);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"disableBodyScroll\", function () {\n      var preventDefault = function preventDefault(e) {\n        e = e || window.event;\n        if (e.preventDefault) e.preventDefault();\n        e.returnValue = false;\n      };\n\n      window.ontouchmove = preventDefault;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"enableBodyScroll\", function () {\n      window.ontouchmove = null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"swipeStart\", function (e) {\n      if (_this.props.verticalSwiping) {\n        _this.disableBodyScroll();\n      }\n\n      var state = swipeStart(e, _this.props.swipe, _this.props.draggable);\n      state !== \"\" && _this.setState(state);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"swipeMove\", function (e) {\n      var state = swipeMove(e, _objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {\n        trackRef: _this.track,\n        listRef: _this.list,\n        slideIndex: _this.state.currentSlide\n      }));\n      if (!state) return;\n\n      if (state[\"swiping\"]) {\n        _this.clickable = false;\n      }\n\n      _this.setState(state);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"swipeEnd\", function (e) {\n      var state = swipeEnd(e, _objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {\n        trackRef: _this.track,\n        listRef: _this.list,\n        slideIndex: _this.state.currentSlide\n      }));\n      if (!state) return;\n      var triggerSlideHandler = state[\"triggerSlideHandler\"];\n      delete state[\"triggerSlideHandler\"];\n\n      _this.setState(state);\n\n      if (triggerSlideHandler === undefined) return;\n\n      _this.slideHandler(triggerSlideHandler);\n\n      if (_this.props.verticalSwiping) {\n        _this.enableBodyScroll();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"touchEnd\", function (e) {\n      _this.swipeEnd(e);\n\n      _this.clickable = true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickPrev\", function () {\n      // this and fellow methods are wrapped in setTimeout\n      // to make sure initialize setState has happened before\n      // any of such methods are called\n      _this.callbackTimers.push(setTimeout(function () {\n        return _this.changeSlide({\n          message: \"previous\"\n        });\n      }, 0));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickNext\", function () {\n      _this.callbackTimers.push(setTimeout(function () {\n        return _this.changeSlide({\n          message: \"next\"\n        });\n      }, 0));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickGoTo\", function (slide) {\n      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      slide = Number(slide);\n      if (isNaN(slide)) return \"\";\n\n      _this.callbackTimers.push(setTimeout(function () {\n        return _this.changeSlide({\n          message: \"index\",\n          index: slide,\n          currentSlide: _this.state.currentSlide\n        }, dontAnimate);\n      }, 0));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"play\", function () {\n      var nextIndex;\n\n      if (_this.props.rtl) {\n        nextIndex = _this.state.currentSlide - _this.props.slidesToScroll;\n      } else {\n        if (canGoNext(_objectSpread(_objectSpread({}, _this.props), _this.state))) {\n          nextIndex = _this.state.currentSlide + _this.props.slidesToScroll;\n        } else {\n          return false;\n        }\n      }\n\n      _this.slideHandler(nextIndex);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"autoPlay\", function (playType) {\n      if (_this.autoplayTimer) {\n        clearInterval(_this.autoplayTimer);\n      }\n\n      var autoplaying = _this.state.autoplaying;\n\n      if (playType === \"update\") {\n        if (autoplaying === \"hovered\" || autoplaying === \"focused\" || autoplaying === \"paused\") {\n          return;\n        }\n      } else if (playType === \"leave\") {\n        if (autoplaying === \"paused\" || autoplaying === \"focused\") {\n          return;\n        }\n      } else if (playType === \"blur\") {\n        if (autoplaying === \"paused\" || autoplaying === \"hovered\") {\n          return;\n        }\n      }\n\n      _this.autoplayTimer = setInterval(_this.play, _this.props.autoplaySpeed + 50);\n\n      _this.setState({\n        autoplaying: \"playing\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pause\", function (pauseType) {\n      if (_this.autoplayTimer) {\n        clearInterval(_this.autoplayTimer);\n        _this.autoplayTimer = null;\n      }\n\n      var autoplaying = _this.state.autoplaying;\n\n      if (pauseType === \"paused\") {\n        _this.setState({\n          autoplaying: \"paused\"\n        });\n      } else if (pauseType === \"focused\") {\n        if (autoplaying === \"hovered\" || autoplaying === \"playing\") {\n          _this.setState({\n            autoplaying: \"focused\"\n          });\n        }\n      } else {\n        // pauseType  is 'hovered'\n        if (autoplaying === \"playing\") {\n          _this.setState({\n            autoplaying: \"hovered\"\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDotsOver\", function () {\n      return _this.props.autoplay && _this.pause(\"hovered\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDotsLeave\", function () {\n      return _this.props.autoplay && _this.state.autoplaying === \"hovered\" && _this.autoPlay(\"leave\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTrackOver\", function () {\n      return _this.props.autoplay && _this.pause(\"hovered\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTrackLeave\", function () {\n      return _this.props.autoplay && _this.state.autoplaying === \"hovered\" && _this.autoPlay(\"leave\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSlideFocus\", function () {\n      return _this.props.autoplay && _this.pause(\"focused\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSlideBlur\", function () {\n      return _this.props.autoplay && _this.state.autoplaying === \"focused\" && _this.autoPlay(\"blur\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var className = classnames(\"slick-slider\", \"carousel\", _this.props.className, {\n        \"carousel-center\": _this.props.centerMode,\n        \"slick-vertical\": _this.props.vertical,\n        \"slick-initialized\": true\n      });\n\n      var spec = _objectSpread(_objectSpread({}, _this.props), _this.state);\n\n      var trackProps = extractObject(spec, [\"fade\", \"cssEase\", \"speed\", \"infinite\", \"centerMode\", \"focusOnSelect\", \"currentSlide\", \"lazyLoad\", \"lazyLoadedList\", \"rtl\", \"slideWidth\", \"slideHeight\", \"listHeight\", \"vertical\", \"slidesToShow\", \"slidesToScroll\", \"slideCount\", \"trackStyle\", \"variableWidth\", \"unslick\", \"centerPadding\", \"targetSlide\", \"useCSS\"]);\n      var pauseOnHover = _this.props.pauseOnHover;\n      trackProps = _objectSpread(_objectSpread({}, trackProps), {}, {\n        onMouseEnter: pauseOnHover ? _this.onTrackOver : null,\n        onMouseLeave: pauseOnHover ? _this.onTrackLeave : null,\n        onMouseOver: pauseOnHover ? _this.onTrackOver : null,\n        focusOnSelect: _this.props.focusOnSelect && _this.clickable ? _this.selectHandler : null\n      });\n      var dots;\n\n      if (_this.props.dots === true && _this.state.slideCount >= _this.props.slidesToShow) {\n        var dotProps = extractObject(spec, [\"dotsClass\", \"slideCount\", \"slidesToShow\", \"currentSlide\", \"slidesToScroll\", \"clickHandler\", \"children\", \"customPaging\", \"infinite\", \"appendDots\"]);\n        var pauseOnDotsHover = _this.props.pauseOnDotsHover;\n        dotProps = _objectSpread(_objectSpread({}, dotProps), {}, {\n          clickHandler: _this.changeSlide,\n          onMouseEnter: pauseOnDotsHover ? _this.onDotsLeave : null,\n          onMouseOver: pauseOnDotsHover ? _this.onDotsOver : null,\n          onMouseLeave: pauseOnDotsHover ? _this.onDotsLeave : null\n        });\n        dots = __jsx(Dots, _extends({}, dotProps, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 14\n          }\n        }));\n      }\n\n      var prevArrow, nextArrow;\n      var arrowProps = extractObject(spec, [\"infinite\", \"centerMode\", \"currentSlide\", \"slideCount\", \"slidesToShow\", \"prevArrow\", \"nextArrow\"]);\n      arrowProps.clickHandler = _this.changeSlide;\n\n      if (_this.props.arrows) {\n        prevArrow = __jsx(PrevArrow, _extends({}, arrowProps, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 19\n          }\n        }));\n        nextArrow = __jsx(NextArrow, _extends({}, arrowProps, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 19\n          }\n        }));\n      }\n\n      var verticalHeightStyle = null;\n\n      if (_this.props.vertical) {\n        verticalHeightStyle = {\n          height: _this.state.listHeight\n        };\n      }\n\n      var centerPaddingStyle = null;\n\n      if (_this.props.vertical === false) {\n        if (_this.props.centerMode === true) {\n          centerPaddingStyle = {\n            padding: \"0px \" + _this.props.centerPadding\n          };\n        }\n      } else {\n        if (_this.props.centerMode === true) {\n          centerPaddingStyle = {\n            padding: _this.props.centerPadding + \" 0px\"\n          };\n        }\n      }\n\n      var listStyle = _objectSpread(_objectSpread({}, verticalHeightStyle), centerPaddingStyle);\n\n      var touchMove = _this.props.touchMove;\n      var listProps = {\n        className: \"slick-list\",\n        style: listStyle,\n        onClick: _this.clickHandler,\n        onMouseDown: touchMove ? _this.swipeStart : null,\n        onMouseMove: _this.state.dragging && touchMove ? _this.swipeMove : null,\n        onMouseUp: touchMove ? _this.swipeEnd : null,\n        onMouseLeave: _this.state.dragging && touchMove ? _this.swipeEnd : null,\n        onTouchStart: touchMove ? _this.swipeStart : null,\n        onTouchMove: _this.state.dragging && touchMove ? _this.swipeMove : null,\n        onTouchEnd: touchMove ? _this.touchEnd : null,\n        onTouchCancel: _this.state.dragging && touchMove ? _this.swipeEnd : null,\n        onKeyDown: _this.props.accessibility ? _this.keyHandler : null\n      };\n      var innerSliderProps = {\n        className: className,\n        dir: \"ltr\",\n        style: _this.props.style\n      };\n\n      if (_this.props.unslick) {\n        listProps = {\n          className: \"slick-list\"\n        };\n        innerSliderProps = {\n          className: className\n        };\n      }\n\n      return __jsx(\"div\", _extends({}, innerSliderProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 7\n        }\n      }), !_this.props.unslick ? prevArrow : \"\", __jsx(\"div\", _extends({\n        ref: _this.listRefHandler\n      }, listProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 9\n        }\n      }), __jsx(Track, _extends({\n        ref: _this.trackRefHandler\n      }, trackProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 11\n        }\n      }), _this.props.children)), !_this.props.unslick ? nextArrow : \"\", !_this.props.unslick ? dots : \"\");\n    });\n\n    _this.list = null;\n    _this.track = null;\n    _this.state = _objectSpread(_objectSpread({}, initialState), {}, {\n      currentSlide: _this.props.initialSlide,\n      slideCount: React.Children.count(_this.props.children)\n    });\n    _this.callbackTimers = [];\n    _this.clickable = true;\n    _this.debouncedResize = null;\n\n    var ssrState = _this.ssrInit();\n\n    _this.state = _objectSpread(_objectSpread({}, _this.state), ssrState);\n    return _this;\n  }\n\n  _createClass(InnerSlider, [{\n    key: \"didPropsChange\",\n    value: function didPropsChange(prevProps) {\n      var setTrackStyle = false;\n\n      for (var _i3 = 0, _Object$keys = Object.keys(this.props); _i3 < _Object$keys.length; _i3++) {\n        var key = _Object$keys[_i3];\n\n        if (!prevProps.hasOwnProperty(key)) {\n          setTrackStyle = true;\n          break;\n        }\n\n        if (typeof prevProps[key] === \"object\" || typeof prevProps[key] === \"function\") {\n          continue;\n        }\n\n        if (prevProps[key] !== this.props[key]) {\n          setTrackStyle = true;\n          break;\n        }\n      }\n\n      return setTrackStyle || React.Children.count(this.props.children) !== React.Children.count(prevProps.children);\n    }\n  }]);\n\n  return InnerSlider;\n}(React.Component);","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/slick/inner-slider.jsx"],"names":["React","initialState","debounce","classnames","getOnDemandLazySlides","extractObject","initializedState","getHeight","canGoNext","slideHandler","changeSlide","keyHandler","swipeStart","swipeMove","swipeEnd","getPreClones","getPostClones","getTrackLeft","getTrackCSS","Track","Dots","PrevArrow","NextArrow","ResizeObserver","InnerSlider","props","ref","list","track","adaptiveHeight","elem","querySelector","state","currentSlide","style","height","onInit","lazyLoad","slidesToLoad","length","setState","prevState","lazyLoadedList","concat","onLazyLoad","spec","listRef","trackRef","updateState","adaptHeight","autoplay","autoPlay","lazyLoadTimer","setInterval","progressiveLazyLoad","ro","animating","onWindowResized","callbackTimers","push","setTimeout","speed","observe","Array","prototype","forEach","call","document","querySelectorAll","slide","onfocus","pauseOnFocus","onSlideFocus","onblur","onSlideBlur","window","addEventListener","attachEvent","animationEndCallback","clearTimeout","clearInterval","timer","removeEventListener","detachEvent","autoplayTimer","disconnect","prevProps","checkImagesLoad","onReInit","setTrackStyle","didPropsChange","Children","count","children","message","index","slidesToShow","pause","debouncedResize","cancel","resizeWindow","isTrackMounted","Boolean","node","callback","updatedState","slideIndex","targetLeft","left","trackStyle","variableWidth","trackWidth","trackLeft","childrenWidths","preClones","slideCount","postClones","child","width","i","centerMode","currentWidth","childrenCount","slideWidth","images","imagesCount","loadedCount","image","handler","onclick","parentNode","focus","prevClickHandler","onload","onerror","onLazyLoadError","indexOf","dontAnimate","asNavFor","beforeChange","afterChange","useCSS","nextState","filter","value","waitForAnimate","asNavForIndex","innerSlider","firstBatch","options","targetSlide","focusOnSelect","nodes","e","clickable","stopPropagation","preventDefault","dir","accessibility","rtl","event","returnValue","ontouchmove","verticalSwiping","disableBodyScroll","swipe","draggable","triggerSlideHandler","undefined","enableBodyScroll","Number","isNaN","nextIndex","slidesToScroll","playType","autoplaying","play","autoplaySpeed","pauseType","className","vertical","trackProps","pauseOnHover","onMouseEnter","onTrackOver","onMouseLeave","onTrackLeave","onMouseOver","selectHandler","dots","dotProps","pauseOnDotsHover","clickHandler","onDotsLeave","onDotsOver","prevArrow","nextArrow","arrowProps","arrows","verticalHeightStyle","listHeight","centerPaddingStyle","padding","centerPadding","listStyle","touchMove","listProps","onClick","onMouseDown","onMouseMove","dragging","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","touchEnd","onTouchCancel","onKeyDown","innerSliderProps","unslick","listRefHandler","trackRefHandler","initialSlide","ssrState","ssrInit","Object","keys","key","hasOwnProperty","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACEC,qBADF,EAEEC,aAFF,EAGEC,gBAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,YANF,EAOEC,WAPF,EAQEC,UARF,EASEC,UATF,EAUEC,SAVF,EAWEC,QAXF,EAYEC,YAZF,EAaEC,aAbF,EAcEC,YAdF,EAeEC,WAfF,QAgBO,0BAhBP;AAkBA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,UAArC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,WAAaC,WAAb;AAAA;;AAAA;;AACE,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,qEAeF,UAAAC,GAAG;AAAA,aAAK,MAAKC,IAAL,GAAYD,GAAjB;AAAA,KAfD;;AAAA,sEAgBD,UAAAA,GAAG;AAAA,aAAK,MAAKE,KAAL,GAAaF,GAAlB;AAAA,KAhBF;;AAAA,kEAiBL,YAAM;AAClB,UAAI,MAAKD,KAAL,CAAWI,cAAX,IAA6B,MAAKF,IAAtC,EAA4C;AAC1C,YAAMG,IAAI,GAAG,MAAKH,IAAL,CAAUI,aAAV,yBAAwC,MAAKC,KAAL,CAAWC,YAAnD,SAAb;;AACA,cAAKN,IAAL,CAAUO,KAAV,CAAgBC,MAAhB,GAAyB5B,SAAS,CAACuB,IAAD,CAAT,GAAkB,IAA3C;AACD;AACF,KAtBkB;;AAAA,wEAuBC,YAAM;AACxB,YAAKL,KAAL,CAAWW,MAAX,IAAqB,MAAKX,KAAL,CAAWW,MAAX,EAArB;;AACA,UAAI,MAAKX,KAAL,CAAWY,QAAf,EAAyB;AACvB,YAAIC,YAAY,GAAGlC,qBAAqB,iCACnC,MAAKqB,KAD8B,GAEnC,MAAKO,KAF8B,EAAxC;;AAIA,YAAIM,YAAY,CAACC,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,gBAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,mBAAK;AAC1BC,cAAAA,cAAc,EAAED,SAAS,CAACC,cAAV,CAAyBC,MAAzB,CAAgCL,YAAhC;AADU,aAAL;AAAA,WAAvB;;AAGA,cAAI,MAAKb,KAAL,CAAWmB,UAAf,EAA2B;AACzB,kBAAKnB,KAAL,CAAWmB,UAAX,CAAsBN,YAAtB;AACD;AACF;AACF;;AACD,UAAIO,IAAI;AAAKC,QAAAA,OAAO,EAAE,MAAKnB,IAAnB;AAAyBoB,QAAAA,QAAQ,EAAE,MAAKnB;AAAxC,SAAkD,MAAKH,KAAvD,CAAR;;AACA,YAAKuB,WAAL,CAAiBH,IAAjB,EAAuB,IAAvB,EAA6B,YAAM;AACjC,cAAKI,WAAL;;AACA,cAAKxB,KAAL,CAAWyB,QAAX,IAAuB,MAAKC,QAAL,CAAc,QAAd,CAAvB;AACD,OAHD;;AAIA,UAAI,MAAK1B,KAAL,CAAWY,QAAX,KAAwB,aAA5B,EAA2C;AACzC,cAAKe,aAAL,GAAqBC,WAAW,CAAC,MAAKC,mBAAN,EAA2B,IAA3B,CAAhC;AACD;;AACD,YAAKC,EAAL,GAAU,IAAIhC,cAAJ,CAAmB,YAAM;AACjC,YAAI,MAAKS,KAAL,CAAWwB,SAAf,EAA0B;AACxB,gBAAKC,eAAL,CAAqB,KAArB,EADwB,CACI;;;AAC5B,gBAAKC,cAAL,CAAoBC,IAApB,CAAyBC,UAAU,CAAC;AAAA,mBAAM,MAAKH,eAAL,EAAN;AAAA,WAAD,EAA+B,MAAKhC,KAAL,CAAWoC,KAA1C,CAAnC;AACD,SAHD,MAGO;AACL,gBAAKJ,eAAL;AACD;AACF,OAPS,CAAV;;AAQA,YAAKF,EAAL,CAAQO,OAAR,CAAgB,MAAKnC,IAArB;;AACAoC,MAAAA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BC,QAAQ,CAACC,gBAAT,CAA0B,cAA1B,CAA7B,EAAwE,UAAAC,KAAK,EAAI;AAC/EA,QAAAA,KAAK,CAACC,OAAN,GAAgB,MAAK7C,KAAL,CAAW8C,YAAX,GAA0B,MAAKC,YAA/B,GAA8C,IAA9D;AACAH,QAAAA,KAAK,CAACI,MAAN,GAAe,MAAKhD,KAAL,CAAW8C,YAAX,GAA0B,MAAKG,WAA/B,GAA6C,IAA5D;AACD,OAHD;;AAIA,UAAIC,MAAM,CAACC,gBAAX,EAA6B;AAC3BD,QAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAKnB,eAAvC;AACD,OAFD,MAEO;AACLkB,QAAAA,MAAM,CAACE,WAAP,CAAmB,UAAnB,EAA+B,MAAKpB,eAApC;AACD;AACF,KAjEkB;;AAAA,2EAkEI,YAAM;AAC3B,UAAI,MAAKqB,oBAAT,EAA+B;AAC7BC,QAAAA,YAAY,CAAC,MAAKD,oBAAN,CAAZ;AACD;;AACD,UAAI,MAAK1B,aAAT,EAAwB;AACtB4B,QAAAA,aAAa,CAAC,MAAK5B,aAAN,CAAb;AACD;;AACD,UAAI,MAAKM,cAAL,CAAoBnB,MAAxB,EAAgC;AAC9B,cAAKmB,cAAL,CAAoBO,OAApB,CAA4B,UAAAgB,KAAK;AAAA,iBAAIF,YAAY,CAACE,KAAD,CAAhB;AAAA,SAAjC;;AACA,cAAKvB,cAAL,GAAsB,EAAtB;AACD;;AACD,UAAIiB,MAAM,CAACC,gBAAX,EAA6B;AAC3BD,QAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqC,MAAKzB,eAA1C;AACD,OAFD,MAEO;AACLkB,QAAAA,MAAM,CAACQ,WAAP,CAAmB,UAAnB,EAA+B,MAAK1B,eAApC;AACD;;AACD,UAAI,MAAK2B,aAAT,EAAwB;AACtBJ,QAAAA,aAAa,CAAC,MAAKI,aAAN,CAAb;AACD;;AACD,YAAK7B,EAAL,CAAQ8B,UAAR;AACD,KAtFkB;;AAAA,yEA6GE,UAAAC,SAAS,EAAI;AAChC,YAAKC,eAAL;;AACA,YAAK9D,KAAL,CAAW+D,QAAX,IAAuB,MAAK/D,KAAL,CAAW+D,QAAX,EAAvB;;AACA,UAAI,MAAK/D,KAAL,CAAWY,QAAf,EAAyB;AACvB,YAAIC,YAAY,GAAGlC,qBAAqB,iCACnC,MAAKqB,KAD8B,GAEnC,MAAKO,KAF8B,EAAxC;;AAIA,YAAIM,YAAY,CAACC,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,gBAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,mBAAK;AAC1BC,cAAAA,cAAc,EAAED,SAAS,CAACC,cAAV,CAAyBC,MAAzB,CAAgCL,YAAhC;AADU,aAAL;AAAA,WAAvB;;AAGA,cAAI,MAAKb,KAAL,CAAWmB,UAAf,EAA2B;AACzB,kBAAKnB,KAAL,CAAWmB,UAAX,CAAsBN,YAAtB;AACD;AACF;AACF,OAhB+B,CAiBhC;AACA;AACA;;;AACA,YAAKW,WAAL;;AACA,UAAIJ,IAAI;AACNC,QAAAA,OAAO,EAAE,MAAKnB,IADR;AAENoB,QAAAA,QAAQ,EAAE,MAAKnB;AAFT,SAGH,MAAKH,KAHF,GAIH,MAAKO,KAJF,CAAR;;AAMA,UAAMyD,aAAa,GAAG,MAAKC,cAAL,CAAoBJ,SAApB,CAAtB;;AACAG,MAAAA,aAAa,IACX,MAAKzC,WAAL,CAAiBH,IAAjB,EAAuB4C,aAAvB,EAAsC,YAAM;AAC1C,YAAI,MAAKzD,KAAL,CAAWC,YAAX,IAA2BjC,KAAK,CAAC2F,QAAN,CAAeC,KAAf,CAAqB,MAAKnE,KAAL,CAAWoE,QAAhC,CAA/B,EAA0E;AACxE,gBAAKnF,WAAL,CAAiB;AACfoF,YAAAA,OAAO,EAAE,OADM;AAEfC,YAAAA,KAAK,EAAE/F,KAAK,CAAC2F,QAAN,CAAeC,KAAf,CAAqB,MAAKnE,KAAL,CAAWoE,QAAhC,IAA4C,MAAKpE,KAAL,CAAWuE,YAF/C;AAGf/D,YAAAA,YAAY,EAAE,MAAKD,KAAL,CAAWC;AAHV,WAAjB;AAKD;;AACD,YAAI,MAAKR,KAAL,CAAWyB,QAAf,EAAyB;AACvB,gBAAKC,QAAL,CAAc,QAAd;AACD,SAFD,MAEO;AACL,gBAAK8C,KAAL,CAAW,QAAX;AACD;AACF,OAbD,CADF;AAeD,KAxJkB;;AAAA,sEAyJD,UAAAR,aAAa,EAAI;AACjC,UAAI,MAAKS,eAAT,EAA0B,MAAKA,eAAL,CAAqBC,MAArB;AAC1B,YAAKD,eAAL,GAAuBhG,QAAQ,CAAC;AAAA,eAAM,MAAKkG,YAAL,CAAkBX,aAAlB,CAAN;AAAA,OAAD,EAAyC,EAAzC,CAA/B;;AACA,YAAKS,eAAL;AACD,KA7JkB;;AAAA,mEA8JJ,YAA0B;AAAA,UAAzBT,aAAyB,uEAAT,IAAS;AACvC,UAAMY,cAAc,GAAGC,OAAO,CAAC,MAAK1E,KAAL,IAAc,MAAKA,KAAL,CAAW2E,IAA1B,CAA9B,CADuC,CAEvC;;AACA,UAAI,CAACF,cAAL,EAAqB;;AACrB,UAAIxD,IAAI;AACNC,QAAAA,OAAO,EAAE,MAAKnB,IADR;AAENoB,QAAAA,QAAQ,EAAE,MAAKnB;AAFT,SAGH,MAAKH,KAHF,GAIH,MAAKO,KAJF,CAAR;;AAMA,YAAKgB,WAAL,CAAiBH,IAAjB,EAAuB4C,aAAvB,EAAsC,YAAM;AAC1C,YAAI,MAAKhE,KAAL,CAAWyB,QAAf,EAAyB,MAAKC,QAAL,CAAc,QAAd,EAAzB,KACK,MAAK8C,KAAL,CAAW,QAAX;AACN,OAHD,EAVuC,CAcvC;;;AACA,YAAKzD,QAAL,CAAc;AACZgB,QAAAA,SAAS,EAAE;AADC,OAAd;;AAGAuB,MAAAA,YAAY,CAAC,MAAKD,oBAAN,CAAZ;AACA,aAAO,MAAKA,oBAAZ;AACD,KAlLkB;;AAAA,kEAmLL,UAACjC,IAAD,EAAO4C,aAAP,EAAsBe,QAAtB,EAAmC;AAC/C,UAAIC,YAAY,GAAGnG,gBAAgB,CAACuC,IAAD,CAAnC;AACAA,MAAAA,IAAI,iDAAQA,IAAR,GAAiB4D,YAAjB;AAA+BC,QAAAA,UAAU,EAAED,YAAY,CAACxE;AAAxD,QAAJ;AACA,UAAI0E,UAAU,GAAG1F,YAAY,CAAC4B,IAAD,CAA7B;AACAA,MAAAA,IAAI,mCAAQA,IAAR;AAAc+D,QAAAA,IAAI,EAAED;AAApB,QAAJ;AACA,UAAIE,UAAU,GAAG3F,WAAW,CAAC2B,IAAD,CAA5B;;AACA,UACE4C,aAAa,IACbzF,KAAK,CAAC2F,QAAN,CAAeC,KAAf,CAAqB,MAAKnE,KAAL,CAAWoE,QAAhC,MAA8C7F,KAAK,CAAC2F,QAAN,CAAeC,KAAf,CAAqB/C,IAAI,CAACgD,QAA1B,CAFhD,EAGE;AACAY,QAAAA,YAAY,CAAC,YAAD,CAAZ,GAA6BI,UAA7B;AACD;;AACD,YAAKrE,QAAL,CAAciE,YAAd,EAA4BD,QAA5B;AACD,KAhMkB;;AAAA,8DAkMT,YAAM;AACd,UAAI,MAAK/E,KAAL,CAAWqF,aAAf,EAA8B;AAC5B,YAAIC,WAAU,GAAG,CAAjB;AAAA,YACEC,UAAS,GAAG,CADd;AAEA,YAAIC,cAAc,GAAG,EAArB;AACA,YAAIC,SAAS,GAAGnG,YAAY,+CACvB,MAAKU,KADkB,GAEvB,MAAKO,KAFkB;AAG1BmF,UAAAA,UAAU,EAAE,MAAK1F,KAAL,CAAWoE,QAAX,CAAoBtD;AAHN,WAA5B;AAKA,YAAI6E,UAAU,GAAGpG,aAAa,+CACzB,MAAKS,KADoB,GAEzB,MAAKO,KAFoB;AAG5BmF,UAAAA,UAAU,EAAE,MAAK1F,KAAL,CAAWoE,QAAX,CAAoBtD;AAHJ,WAA9B;;AAKA,cAAKd,KAAL,CAAWoE,QAAX,CAAoB5B,OAApB,CAA4B,UAAAoD,KAAK,EAAI;AACnCJ,UAAAA,cAAc,CAACtD,IAAf,CAAoB0D,KAAK,CAAC5F,KAAN,CAAYS,KAAZ,CAAkBoF,KAAtC;AACAP,UAAAA,WAAU,IAAIM,KAAK,CAAC5F,KAAN,CAAYS,KAAZ,CAAkBoF,KAAhC;AACD,SAHD;;AAIA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,SAApB,EAA+BK,CAAC,EAAhC,EAAoC;AAClCP,UAAAA,UAAS,IAAIC,cAAc,CAACA,cAAc,CAAC1E,MAAf,GAAwB,CAAxB,GAA4BgF,CAA7B,CAA3B;AACAR,UAAAA,WAAU,IAAIE,cAAc,CAACA,cAAc,CAAC1E,MAAf,GAAwB,CAAxB,GAA4BgF,CAA7B,CAA5B;AACD;;AACD,aAAK,IAAIA,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGH,UAApB,EAAgCG,EAAC,EAAjC,EAAqC;AACnCR,UAAAA,WAAU,IAAIE,cAAc,CAACM,EAAD,CAA5B;AACD;;AACD,aAAK,IAAIA,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,MAAKvF,KAAL,CAAWC,YAA/B,EAA6CsF,GAAC,EAA9C,EAAkD;AAChDP,UAAAA,UAAS,IAAIC,cAAc,CAACM,GAAD,CAA3B;AACD;;AACD,YAAIV,WAAU,GAAG;AACfS,UAAAA,KAAK,EAAEP,WAAU,GAAG,IADL;AAEfH,UAAAA,IAAI,EAAE,CAACI,UAAD,GAAa;AAFJ,SAAjB;;AAIA,YAAI,MAAKvF,KAAL,CAAW+F,UAAf,EAA2B;AACzB,cAAIC,YAAY,aAAMR,cAAc,CAAC,MAAKjF,KAAL,CAAWC,YAAZ,CAApB,OAAhB;AACA4E,UAAAA,WAAU,CAACD,IAAX,kBAA0BC,WAAU,CAACD,IAArC,wBAAuDa,YAAvD;AACD;;AACD,eAAO;AACLZ,UAAAA,UAAU,EAAVA;AADK,SAAP;AAGD;;AACD,UAAIa,aAAa,GAAG1H,KAAK,CAAC2F,QAAN,CAAeC,KAAf,CAAqB,MAAKnE,KAAL,CAAWoE,QAAhC,CAApB;;AACA,UAAMhD,IAAI,iDAAQ,MAAKpB,KAAb,GAAuB,MAAKO,KAA5B;AAAmCmF,QAAAA,UAAU,EAAEO;AAA/C,QAAV;;AACA,UAAIP,UAAU,GAAGpG,YAAY,CAAC8B,IAAD,CAAZ,GAAqB7B,aAAa,CAAC6B,IAAD,CAAlC,GAA2C6E,aAA5D;AACA,UAAIX,UAAU,GAAI,MAAM,MAAKtF,KAAL,CAAWuE,YAAlB,GAAkCmB,UAAnD;AACA,UAAIQ,UAAU,GAAG,MAAMR,UAAvB;AACA,UAAIH,SAAS,GACV,CAACW,UAAD,IAAe5G,YAAY,CAAC8B,IAAD,CAAZ,GAAqB,MAAKb,KAAL,CAAWC,YAA/C,IAA+D8E,UAAhE,GAA8E,GADhF;;AAEA,UAAI,MAAKtF,KAAL,CAAW+F,UAAf,EAA2B;AACzBR,QAAAA,SAAS,IAAI,CAAC,MAAOW,UAAU,GAAGZ,UAAd,GAA4B,GAAnC,IAA0C,CAAvD;AACD;;AACD,UAAIF,UAAU,GAAG;AACfS,QAAAA,KAAK,EAAEP,UAAU,GAAG,GADL;AAEfH,QAAAA,IAAI,EAAEI,SAAS,GAAG;AAFH,OAAjB;AAIA,aAAO;AACLW,QAAAA,UAAU,EAAEA,UAAU,GAAG,GADpB;AAELd,QAAAA,UAAU,EAAEA;AAFP,OAAP;AAID,KA7PkB;;AAAA,sEA8PD,YAAM;AACtB,UAAIe,MAAM,GAAG,MAAKjG,IAAL,CAAUyC,gBAAV,CAA2B,kBAA3B,CAAb;;AACA,UAAIyD,WAAW,GAAGD,MAAM,CAACrF,MAAzB;AAAA,UACEuF,WAAW,GAAG,CADhB;AAEA/D,MAAAA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6B0D,MAA7B,EAAqC,UAAAG,KAAK,EAAI;AAC5C,YAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,iBAAM,EAAEF,WAAF,IAAiBA,WAAW,IAAID,WAAhC,IAA+C,MAAKpE,eAAL,EAArD;AAAA,SAAhB;;AACA,YAAI,CAACsE,KAAK,CAACE,OAAX,EAAoB;AAClBF,UAAAA,KAAK,CAACE,OAAN,GAAgB;AAAA,mBAAMF,KAAK,CAACG,UAAN,CAAiBC,KAAjB,EAAN;AAAA,WAAhB;AACD,SAFD,MAEO;AACL,cAAMC,gBAAgB,GAAGL,KAAK,CAACE,OAA/B;;AACAF,UAAAA,KAAK,CAACE,OAAN,GAAgB,YAAM;AACpBG,YAAAA,gBAAgB;AAChBL,YAAAA,KAAK,CAACG,UAAN,CAAiBC,KAAjB;AACD,WAHD;AAID;;AACD,YAAI,CAACJ,KAAK,CAACM,MAAX,EAAmB;AACjB,cAAI,MAAK5G,KAAL,CAAWY,QAAf,EAAyB;AACvB0F,YAAAA,KAAK,CAACM,MAAN,GAAe,YAAM;AACnB,oBAAKpF,WAAL;;AACA,oBAAKS,cAAL,CAAoBC,IAApB,CAAyBC,UAAU,CAAC,MAAKH,eAAN,EAAuB,MAAKhC,KAAL,CAAWoC,KAAlC,CAAnC;AACD,aAHD;AAID,WALD,MAKO;AACLkE,YAAAA,KAAK,CAACM,MAAN,GAAeL,OAAf;;AACAD,YAAAA,KAAK,CAACO,OAAN,GAAgB,YAAM;AACpBN,cAAAA,OAAO;AACP,oBAAKvG,KAAL,CAAW8G,eAAX,IAA8B,MAAK9G,KAAL,CAAW8G,eAAX,EAA9B;AACD,aAHD;AAID;AACF;AACF,OAzBD;AA0BD,KA5RkB;;AAAA,0EA6RG,YAAM;AAC1B,UAAIjG,YAAY,GAAG,EAAnB;;AACA,UAAMO,IAAI,mCAAQ,MAAKpB,KAAb,GAAuB,MAAKO,KAA5B,CAAV;;AACA,WACE,IAAI+D,KAAK,GAAG,MAAK/D,KAAL,CAAWC,YADzB,EAEE8D,KAAK,GAAG,MAAK/D,KAAL,CAAWmF,UAAX,GAAwBnG,aAAa,CAAC6B,IAAD,CAF/C,EAGEkD,KAAK,EAHP,EAIE;AACA,YAAI,MAAK/D,KAAL,CAAWU,cAAX,CAA0B8F,OAA1B,CAAkCzC,KAAlC,IAA2C,CAA/C,EAAkD;AAChDzD,UAAAA,YAAY,CAACqB,IAAb,CAAkBoC,KAAlB;AACA;AACD;AACF;;AACD,WAAK,IAAIA,MAAK,GAAG,MAAK/D,KAAL,CAAWC,YAAX,GAA0B,CAA3C,EAA8C8D,MAAK,IAAI,CAAChF,YAAY,CAAC8B,IAAD,CAApE,EAA4EkD,MAAK,EAAjF,EAAqF;AACnF,YAAI,MAAK/D,KAAL,CAAWU,cAAX,CAA0B8F,OAA1B,CAAkCzC,MAAlC,IAA2C,CAA/C,EAAkD;AAChDzD,UAAAA,YAAY,CAACqB,IAAb,CAAkBoC,MAAlB;AACA;AACD;AACF;;AACD,UAAIzD,YAAY,CAACC,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,cAAKC,QAAL,CAAc,UAAAR,KAAK;AAAA,iBAAK;AACtBU,YAAAA,cAAc,EAAEV,KAAK,CAACU,cAAN,CAAqBC,MAArB,CAA4BL,YAA5B;AADM,WAAL;AAAA,SAAnB;;AAGA,YAAI,MAAKb,KAAL,CAAWmB,UAAf,EAA2B;AACzB,gBAAKnB,KAAL,CAAWmB,UAAX,CAAsBN,YAAtB;AACD;AACF,OAPD,MAOO;AACL,YAAI,MAAKc,aAAT,EAAwB;AACtB4B,UAAAA,aAAa,CAAC,MAAK5B,aAAN,CAAb;AACA,iBAAO,MAAKA,aAAZ;AACD;AACF;AACF,KA7TkB;;AAAA,mEA8TJ,UAAC2C,KAAD,EAAgC;AAAA,UAAxB0C,WAAwB,uEAAV,KAAU;AAAA,wBACsB,MAAKhH,KAD3B;AAAA,UACrCiH,QADqC,eACrCA,QADqC;AAAA,UAC3BC,YAD2B,eAC3BA,YAD2B;AAAA,UACb/F,UADa,eACbA,UADa;AAAA,UACDiB,KADC,eACDA,KADC;AAAA,UACM+E,WADN,eACMA,WADN,EAE7C;;AACA,UAAM3G,YAAY,GAAG,MAAKD,KAAL,CAAWC,YAAhC;;AAH6C,0BAIlBxB,YAAY;AACrCsF,QAAAA,KAAK,EAALA;AADqC,SAElC,MAAKtE,KAF6B,GAGlC,MAAKO,KAH6B;AAIrCe,QAAAA,QAAQ,EAAE,MAAKnB,KAJsB;AAKrCiH,QAAAA,MAAM,EAAE,MAAKpH,KAAL,CAAWoH,MAAX,IAAqB,CAACJ;AALO,SAJM;AAAA,UAIvCzG,KAJuC,iBAIvCA,KAJuC;AAAA,UAIhC8G,SAJgC,iBAIhCA,SAJgC;;AAW7C,UAAI,CAAC9G,KAAL,EAAY;AACZ2G,MAAAA,YAAY,IAAIA,YAAY,CAAC1G,YAAD,EAAeD,KAAK,CAACC,YAArB,CAA5B;AACA,UAAIK,YAAY,GAAGN,KAAK,CAACU,cAAN,CAAqBqG,MAArB,CACjB,UAAAC,KAAK;AAAA,eAAI,MAAKhH,KAAL,CAAWU,cAAX,CAA0B8F,OAA1B,CAAkCQ,KAAlC,IAA2C,CAA/C;AAAA,OADY,CAAnB;AAGApG,MAAAA,UAAU,IAAIN,YAAY,CAACC,MAAb,GAAsB,CAApC,IAAyCK,UAAU,CAACN,YAAD,CAAnD;;AACA,UAAI,CAAC,MAAKb,KAAL,CAAWwH,cAAZ,IAA8B,MAAKnE,oBAAvC,EAA6D;AAC3DC,QAAAA,YAAY,CAAC,MAAKD,oBAAN,CAAZ;AACA8D,QAAAA,WAAW,IAAIA,WAAW,CAAC3G,YAAD,CAA1B;AACA,eAAO,MAAK6C,oBAAZ;AACD;;AACD,YAAKtC,QAAL,CAAcR,KAAd,EAAqB,YAAM;AACzB;AACA,YAAI0G,QAAQ,IAAI,MAAKQ,aAAL,KAAuBnD,KAAvC,EAA8C;AAC5C,gBAAKmD,aAAL,GAAqBnD,KAArB;AACA2C,UAAAA,QAAQ,CAACS,WAAT,CAAqB1I,YAArB,CAAkCsF,KAAlC;AACD;;AACD,YAAI,CAAC+C,SAAL,EAAgB;AAChB,cAAKhE,oBAAL,GAA4BlB,UAAU,CAAC,YAAM;AAAA,cACnCJ,SADmC,GACNsF,SADM,CACnCtF,SADmC;AAAA,cACrB4F,UADqB,4BACNN,SADM;;AAE3C,gBAAKtG,QAAL,CAAc4G,UAAd,EAA0B,YAAM;AAC9B,kBAAK1F,cAAL,CAAoBC,IAApB,CAAyBC,UAAU,CAAC;AAAA,qBAAM,MAAKpB,QAAL,CAAc;AAAEgB,gBAAAA,SAAS,EAATA;AAAF,eAAd,CAAN;AAAA,aAAD,EAAqC,EAArC,CAAnC;;AACAoF,YAAAA,WAAW,IAAIA,WAAW,CAAC5G,KAAK,CAACC,YAAP,CAA1B;AACA,mBAAO,MAAK6C,oBAAZ;AACD,WAJD;AAKD,SAPqC,EAOnCjB,KAPmC,CAAtC;AAQD,OAfD;AAgBD,KApWkB;;AAAA,kEAqWL,UAACwF,OAAD,EAAkC;AAAA,UAAxBZ,WAAwB,uEAAV,KAAU;;AAC9C,UAAM5F,IAAI,mCAAQ,MAAKpB,KAAb,GAAuB,MAAKO,KAA5B,CAAV;;AACA,UAAIsH,WAAW,GAAG5I,WAAW,CAACmC,IAAD,EAAOwG,OAAP,CAA7B;AACA,UAAIC,WAAW,KAAK,CAAhB,IAAqB,CAACA,WAA1B,EAAuC;;AACvC,UAAIb,WAAW,KAAK,IAApB,EAA0B;AACxB,cAAKhI,YAAL,CAAkB6I,WAAlB,EAA+Bb,WAA/B;AACD,OAFD,MAEO;AACL,cAAKhI,YAAL,CAAkB6I,WAAlB;AACD;;AACD,YAAK7H,KAAL,CAAWyB,QAAX,IAAuB,MAAKC,QAAL,CAAc,QAAd,CAAvB;;AACA,UAAI,MAAK1B,KAAL,CAAW8H,aAAf,EAA8B;AAC5B,YAAMC,KAAK,GAAG,MAAK7H,IAAL,CAAUyC,gBAAV,CAA2B,gBAA3B,CAAd;;AACAoF,QAAAA,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAL,CAASrB,KAAT,EAAZ;AACD;AACF,KAnXkB;;AAAA,mEAoXJ,UAAAsB,CAAC,EAAI;AAClB,UAAI,MAAKC,SAAL,KAAmB,KAAvB,EAA8B;AAC5BD,QAAAA,CAAC,CAACE,eAAF;AACAF,QAAAA,CAAC,CAACG,cAAF;AACD;;AACD,YAAKF,SAAL,GAAiB,IAAjB;AACD,KA1XkB;;AAAA,iEA2XN,UAAAD,CAAC,EAAI;AAChB,UAAII,GAAG,GAAGlJ,UAAU,CAAC8I,CAAD,EAAI,MAAKhI,KAAL,CAAWqI,aAAf,EAA8B,MAAKrI,KAAL,CAAWsI,GAAzC,CAApB;AACAF,MAAAA,GAAG,KAAK,EAAR,IAAc,MAAKnJ,WAAL,CAAiB;AAAEoF,QAAAA,OAAO,EAAE+D;AAAX,OAAjB,CAAd;AACD,KA9XkB;;AAAA,oEA+XH,UAAAR,OAAO,EAAI;AACzB,YAAK3I,WAAL,CAAiB2I,OAAjB;AACD,KAjYkB;;AAAA,wEAkYC,YAAM;AACxB,UAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAAAH,CAAC,EAAI;AAC1BA,QAAAA,CAAC,GAAGA,CAAC,IAAI9E,MAAM,CAACqF,KAAhB;AACA,YAAIP,CAAC,CAACG,cAAN,EAAsBH,CAAC,CAACG,cAAF;AACtBH,QAAAA,CAAC,CAACQ,WAAF,GAAgB,KAAhB;AACD,OAJD;;AAKAtF,MAAAA,MAAM,CAACuF,WAAP,GAAqBN,cAArB;AACD,KAzYkB;;AAAA,uEA0YA,YAAM;AACvBjF,MAAAA,MAAM,CAACuF,WAAP,GAAqB,IAArB;AACD,KA5YkB;;AAAA,iEA6YN,UAAAT,CAAC,EAAI;AAChB,UAAI,MAAKhI,KAAL,CAAW0I,eAAf,EAAgC;AAC9B,cAAKC,iBAAL;AACD;;AACD,UAAIpI,KAAK,GAAGpB,UAAU,CAAC6I,CAAD,EAAI,MAAKhI,KAAL,CAAW4I,KAAf,EAAsB,MAAK5I,KAAL,CAAW6I,SAAjC,CAAtB;AACAtI,MAAAA,KAAK,KAAK,EAAV,IAAgB,MAAKQ,QAAL,CAAcR,KAAd,CAAhB;AACD,KAnZkB;;AAAA,gEAoZP,UAAAyH,CAAC,EAAI;AACf,UAAIzH,KAAK,GAAGnB,SAAS,CAAC4I,CAAD,gDAChB,MAAKhI,KADW,GAEhB,MAAKO,KAFW;AAGnBe,QAAAA,QAAQ,EAAE,MAAKnB,KAHI;AAInBkB,QAAAA,OAAO,EAAE,MAAKnB,IAJK;AAKnB+E,QAAAA,UAAU,EAAE,MAAK1E,KAAL,CAAWC;AALJ,SAArB;AAOA,UAAI,CAACD,KAAL,EAAY;;AACZ,UAAIA,KAAK,CAAC,SAAD,CAAT,EAAsB;AACpB,cAAK0H,SAAL,GAAiB,KAAjB;AACD;;AACD,YAAKlH,QAAL,CAAcR,KAAd;AACD,KAjakB;;AAAA,+DAkaR,UAAAyH,CAAC,EAAI;AACd,UAAIzH,KAAK,GAAGlB,QAAQ,CAAC2I,CAAD,gDACf,MAAKhI,KADU,GAEf,MAAKO,KAFU;AAGlBe,QAAAA,QAAQ,EAAE,MAAKnB,KAHG;AAIlBkB,QAAAA,OAAO,EAAE,MAAKnB,IAJI;AAKlB+E,QAAAA,UAAU,EAAE,MAAK1E,KAAL,CAAWC;AALL,SAApB;AAOA,UAAI,CAACD,KAAL,EAAY;AACZ,UAAIuI,mBAAmB,GAAGvI,KAAK,CAAC,qBAAD,CAA/B;AACA,aAAOA,KAAK,CAAC,qBAAD,CAAZ;;AACA,YAAKQ,QAAL,CAAcR,KAAd;;AACA,UAAIuI,mBAAmB,KAAKC,SAA5B,EAAuC;;AACvC,YAAK/J,YAAL,CAAkB8J,mBAAlB;;AACA,UAAI,MAAK9I,KAAL,CAAW0I,eAAf,EAAgC;AAC9B,cAAKM,gBAAL;AACD;AACF,KAnbkB;;AAAA,+DAobR,UAAAhB,CAAC,EAAI;AACd,YAAK3I,QAAL,CAAc2I,CAAd;;AACA,YAAKC,SAAL,GAAiB,IAAjB;AACD,KAvbkB;;AAAA,gEAwbP,YAAM;AAChB;AACA;AACA;AACA,YAAKhG,cAAL,CAAoBC,IAApB,CAAyBC,UAAU,CAAC;AAAA,eAAM,MAAKlD,WAAL,CAAiB;AAAEoF,UAAAA,OAAO,EAAE;AAAX,SAAjB,CAAN;AAAA,OAAD,EAAkD,CAAlD,CAAnC;AACD,KA7bkB;;AAAA,gEA8bP,YAAM;AAChB,YAAKpC,cAAL,CAAoBC,IAApB,CAAyBC,UAAU,CAAC;AAAA,eAAM,MAAKlD,WAAL,CAAiB;AAAEoF,UAAAA,OAAO,EAAE;AAAX,SAAjB,CAAN;AAAA,OAAD,EAA8C,CAA9C,CAAnC;AACD,KAhckB;;AAAA,gEAicP,UAACzB,KAAD,EAAgC;AAAA,UAAxBoE,WAAwB,uEAAV,KAAU;AAC1CpE,MAAAA,KAAK,GAAGqG,MAAM,CAACrG,KAAD,CAAd;AACA,UAAIsG,KAAK,CAACtG,KAAD,CAAT,EAAkB,OAAO,EAAP;;AAClB,YAAKX,cAAL,CAAoBC,IAApB,CACEC,UAAU,CACR;AAAA,eACE,MAAKlD,WAAL,CACE;AACEoF,UAAAA,OAAO,EAAE,OADX;AAEEC,UAAAA,KAAK,EAAE1B,KAFT;AAGEpC,UAAAA,YAAY,EAAE,MAAKD,KAAL,CAAWC;AAH3B,SADF,EAMEwG,WANF,CADF;AAAA,OADQ,EAUR,CAVQ,CADZ;AAcD,KAldkB;;AAAA,2DAmdZ,YAAM;AACX,UAAImC,SAAJ;;AACA,UAAI,MAAKnJ,KAAL,CAAWsI,GAAf,EAAoB;AAClBa,QAAAA,SAAS,GAAG,MAAK5I,KAAL,CAAWC,YAAX,GAA0B,MAAKR,KAAL,CAAWoJ,cAAjD;AACD,OAFD,MAEO;AACL,YAAIrK,SAAS,iCAAM,MAAKiB,KAAX,GAAqB,MAAKO,KAA1B,EAAb,EAAiD;AAC/C4I,UAAAA,SAAS,GAAG,MAAK5I,KAAL,CAAWC,YAAX,GAA0B,MAAKR,KAAL,CAAWoJ,cAAjD;AACD,SAFD,MAEO;AACL,iBAAO,KAAP;AACD;AACF;;AAED,YAAKpK,YAAL,CAAkBmK,SAAlB;AACD,KAhekB;;AAAA,+DAkeR,UAAAE,QAAQ,EAAI;AACrB,UAAI,MAAK1F,aAAT,EAAwB;AACtBJ,QAAAA,aAAa,CAAC,MAAKI,aAAN,CAAb;AACD;;AACD,UAAM2F,WAAW,GAAG,MAAK/I,KAAL,CAAW+I,WAA/B;;AACA,UAAID,QAAQ,KAAK,QAAjB,EAA2B;AACzB,YAAIC,WAAW,KAAK,SAAhB,IAA6BA,WAAW,KAAK,SAA7C,IAA0DA,WAAW,KAAK,QAA9E,EAAwF;AACtF;AACD;AACF,OAJD,MAIO,IAAID,QAAQ,KAAK,OAAjB,EAA0B;AAC/B,YAAIC,WAAW,KAAK,QAAhB,IAA4BA,WAAW,KAAK,SAAhD,EAA2D;AACzD;AACD;AACF,OAJM,MAIA,IAAID,QAAQ,KAAK,MAAjB,EAAyB;AAC9B,YAAIC,WAAW,KAAK,QAAhB,IAA4BA,WAAW,KAAK,SAAhD,EAA2D;AACzD;AACD;AACF;;AACD,YAAK3F,aAAL,GAAqB/B,WAAW,CAAC,MAAK2H,IAAN,EAAY,MAAKvJ,KAAL,CAAWwJ,aAAX,GAA2B,EAAvC,CAAhC;;AACA,YAAKzI,QAAL,CAAc;AAAEuI,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KAtfkB;;AAAA,4DAufX,UAAAG,SAAS,EAAI;AACnB,UAAI,MAAK9F,aAAT,EAAwB;AACtBJ,QAAAA,aAAa,CAAC,MAAKI,aAAN,CAAb;AACA,cAAKA,aAAL,GAAqB,IAArB;AACD;;AACD,UAAM2F,WAAW,GAAG,MAAK/I,KAAL,CAAW+I,WAA/B;;AACA,UAAIG,SAAS,KAAK,QAAlB,EAA4B;AAC1B,cAAK1I,QAAL,CAAc;AAAEuI,UAAAA,WAAW,EAAE;AAAf,SAAd;AACD,OAFD,MAEO,IAAIG,SAAS,KAAK,SAAlB,EAA6B;AAClC,YAAIH,WAAW,KAAK,SAAhB,IAA6BA,WAAW,KAAK,SAAjD,EAA4D;AAC1D,gBAAKvI,QAAL,CAAc;AAAEuI,YAAAA,WAAW,EAAE;AAAf,WAAd;AACD;AACF,OAJM,MAIA;AACL;AACA,YAAIA,WAAW,KAAK,SAApB,EAA+B;AAC7B,gBAAKvI,QAAL,CAAc;AAAEuI,YAAAA,WAAW,EAAE;AAAf,WAAd;AACD;AACF;AACF,KAzgBkB;;AAAA,iEA0gBN;AAAA,aAAM,MAAKtJ,KAAL,CAAWyB,QAAX,IAAuB,MAAK+C,KAAL,CAAW,SAAX,CAA7B;AAAA,KA1gBM;;AAAA,kEA2gBL;AAAA,aACZ,MAAKxE,KAAL,CAAWyB,QAAX,IAAuB,MAAKlB,KAAL,CAAW+I,WAAX,KAA2B,SAAlD,IAA+D,MAAK5H,QAAL,CAAc,OAAd,CADnD;AAAA,KA3gBK;;AAAA,kEA6gBL;AAAA,aAAM,MAAK1B,KAAL,CAAWyB,QAAX,IAAuB,MAAK+C,KAAL,CAAW,SAAX,CAA7B;AAAA,KA7gBK;;AAAA,mEA8gBJ;AAAA,aACb,MAAKxE,KAAL,CAAWyB,QAAX,IAAuB,MAAKlB,KAAL,CAAW+I,WAAX,KAA2B,SAAlD,IAA+D,MAAK5H,QAAL,CAAc,OAAd,CADlD;AAAA,KA9gBI;;AAAA,mEAghBJ;AAAA,aAAM,MAAK1B,KAAL,CAAWyB,QAAX,IAAuB,MAAK+C,KAAL,CAAW,SAAX,CAA7B;AAAA,KAhhBI;;AAAA,kEAihBL;AAAA,aACZ,MAAKxE,KAAL,CAAWyB,QAAX,IAAuB,MAAKlB,KAAL,CAAW+I,WAAX,KAA2B,SAAlD,IAA+D,MAAK5H,QAAL,CAAc,MAAd,CADnD;AAAA,KAjhBK;;AAAA,6DAohBV,YAAM;AACb,UAAIgI,SAAS,GAAGhL,UAAU,CAAC,cAAD,EAAiB,UAAjB,EAA6B,MAAKsB,KAAL,CAAW0J,SAAxC,EAAmD;AAC3E,2BAAmB,MAAK1J,KAAL,CAAW+F,UAD6C;AAE3E,0BAAkB,MAAK/F,KAAL,CAAW2J,QAF8C;AAG3E,6BAAqB;AAHsD,OAAnD,CAA1B;;AAKA,UAAIvI,IAAI,mCAAQ,MAAKpB,KAAb,GAAuB,MAAKO,KAA5B,CAAR;;AACA,UAAIqJ,UAAU,GAAGhL,aAAa,CAACwC,IAAD,EAAO,CACnC,MADmC,EAEnC,SAFmC,EAGnC,OAHmC,EAInC,UAJmC,EAKnC,YALmC,EAMnC,eANmC,EAOnC,cAPmC,EAQnC,UARmC,EASnC,gBATmC,EAUnC,KAVmC,EAWnC,YAXmC,EAYnC,aAZmC,EAanC,YAbmC,EAcnC,UAdmC,EAenC,cAfmC,EAgBnC,gBAhBmC,EAiBnC,YAjBmC,EAkBnC,YAlBmC,EAmBnC,eAnBmC,EAoBnC,SApBmC,EAqBnC,eArBmC,EAsBnC,aAtBmC,EAuBnC,QAvBmC,CAAP,CAA9B;AAPa,UAgCLyI,YAhCK,GAgCY,MAAK7J,KAhCjB,CAgCL6J,YAhCK;AAiCbD,MAAAA,UAAU,mCACLA,UADK;AAERE,QAAAA,YAAY,EAAED,YAAY,GAAG,MAAKE,WAAR,GAAsB,IAFxC;AAGRC,QAAAA,YAAY,EAAEH,YAAY,GAAG,MAAKI,YAAR,GAAuB,IAHzC;AAIRC,QAAAA,WAAW,EAAEL,YAAY,GAAG,MAAKE,WAAR,GAAsB,IAJvC;AAKRjC,QAAAA,aAAa,EAAE,MAAK9H,KAAL,CAAW8H,aAAX,IAA4B,MAAKG,SAAjC,GAA6C,MAAKkC,aAAlD,GAAkE;AALzE,QAAV;AAQA,UAAIC,IAAJ;;AACA,UAAI,MAAKpK,KAAL,CAAWoK,IAAX,KAAoB,IAApB,IAA4B,MAAK7J,KAAL,CAAWmF,UAAX,IAAyB,MAAK1F,KAAL,CAAWuE,YAApE,EAAkF;AAChF,YAAI8F,QAAQ,GAAGzL,aAAa,CAACwC,IAAD,EAAO,CACjC,WADiC,EAEjC,YAFiC,EAGjC,cAHiC,EAIjC,cAJiC,EAKjC,gBALiC,EAMjC,cANiC,EAOjC,UAPiC,EAQjC,cARiC,EASjC,UATiC,EAUjC,YAViC,CAAP,CAA5B;AADgF,YAaxEkJ,gBAbwE,GAanD,MAAKtK,KAb8C,CAaxEsK,gBAbwE;AAchFD,QAAAA,QAAQ,mCACHA,QADG;AAENE,UAAAA,YAAY,EAAE,MAAKtL,WAFb;AAGN6K,UAAAA,YAAY,EAAEQ,gBAAgB,GAAG,MAAKE,WAAR,GAAsB,IAH9C;AAINN,UAAAA,WAAW,EAAEI,gBAAgB,GAAG,MAAKG,UAAR,GAAqB,IAJ5C;AAKNT,UAAAA,YAAY,EAAEM,gBAAgB,GAAG,MAAKE,WAAR,GAAsB;AAL9C,UAAR;AAOAJ,QAAAA,IAAI,GAAG,MAAC,IAAD,eAAUC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;;AAED,UAAIK,SAAJ,EAAeC,SAAf;AACA,UAAIC,UAAU,GAAGhM,aAAa,CAACwC,IAAD,EAAO,CACnC,UADmC,EAEnC,YAFmC,EAGnC,cAHmC,EAInC,YAJmC,EAKnC,cALmC,EAMnC,WANmC,EAOnC,WAPmC,CAAP,CAA9B;AASAwJ,MAAAA,UAAU,CAACL,YAAX,GAA0B,MAAKtL,WAA/B;;AAEA,UAAI,MAAKe,KAAL,CAAW6K,MAAf,EAAuB;AACrBH,QAAAA,SAAS,GAAG,MAAC,SAAD,eAAeE,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAZ;AACAD,QAAAA,SAAS,GAAG,MAAC,SAAD,eAAeC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAZ;AACD;;AAED,UAAIE,mBAAmB,GAAG,IAA1B;;AAEA,UAAI,MAAK9K,KAAL,CAAW2J,QAAf,EAAyB;AACvBmB,QAAAA,mBAAmB,GAAG;AACpBpK,UAAAA,MAAM,EAAE,MAAKH,KAAL,CAAWwK;AADC,SAAtB;AAGD;;AAED,UAAIC,kBAAkB,GAAG,IAAzB;;AAEA,UAAI,MAAKhL,KAAL,CAAW2J,QAAX,KAAwB,KAA5B,EAAmC;AACjC,YAAI,MAAK3J,KAAL,CAAW+F,UAAX,KAA0B,IAA9B,EAAoC;AAClCiF,UAAAA,kBAAkB,GAAG;AACnBC,YAAAA,OAAO,EAAE,SAAS,MAAKjL,KAAL,CAAWkL;AADV,WAArB;AAGD;AACF,OAND,MAMO;AACL,YAAI,MAAKlL,KAAL,CAAW+F,UAAX,KAA0B,IAA9B,EAAoC;AAClCiF,UAAAA,kBAAkB,GAAG;AACnBC,YAAAA,OAAO,EAAE,MAAKjL,KAAL,CAAWkL,aAAX,GAA2B;AADjB,WAArB;AAGD;AACF;;AAED,UAAMC,SAAS,mCAAQL,mBAAR,GAAgCE,kBAAhC,CAAf;;AACA,UAAMI,SAAS,GAAG,MAAKpL,KAAL,CAAWoL,SAA7B;AACA,UAAIC,SAAS,GAAG;AACd3B,QAAAA,SAAS,EAAE,YADG;AAEdjJ,QAAAA,KAAK,EAAE0K,SAFO;AAGdG,QAAAA,OAAO,EAAE,MAAKf,YAHA;AAIdgB,QAAAA,WAAW,EAAEH,SAAS,GAAG,MAAKjM,UAAR,GAAqB,IAJ7B;AAKdqM,QAAAA,WAAW,EAAE,MAAKjL,KAAL,CAAWkL,QAAX,IAAuBL,SAAvB,GAAmC,MAAKhM,SAAxC,GAAoD,IALnD;AAMdsM,QAAAA,SAAS,EAAEN,SAAS,GAAG,MAAK/L,QAAR,GAAmB,IANzB;AAOd2K,QAAAA,YAAY,EAAE,MAAKzJ,KAAL,CAAWkL,QAAX,IAAuBL,SAAvB,GAAmC,MAAK/L,QAAxC,GAAmD,IAPnD;AAQdsM,QAAAA,YAAY,EAAEP,SAAS,GAAG,MAAKjM,UAAR,GAAqB,IAR9B;AASdyM,QAAAA,WAAW,EAAE,MAAKrL,KAAL,CAAWkL,QAAX,IAAuBL,SAAvB,GAAmC,MAAKhM,SAAxC,GAAoD,IATnD;AAUdyM,QAAAA,UAAU,EAAET,SAAS,GAAG,MAAKU,QAAR,GAAmB,IAV1B;AAWdC,QAAAA,aAAa,EAAE,MAAKxL,KAAL,CAAWkL,QAAX,IAAuBL,SAAvB,GAAmC,MAAK/L,QAAxC,GAAmD,IAXpD;AAYd2M,QAAAA,SAAS,EAAE,MAAKhM,KAAL,CAAWqI,aAAX,GAA2B,MAAKnJ,UAAhC,GAA6C;AAZ1C,OAAhB;AAeA,UAAI+M,gBAAgB,GAAG;AACrBvC,QAAAA,SAAS,EAAEA,SADU;AAErBtB,QAAAA,GAAG,EAAE,KAFgB;AAGrB3H,QAAAA,KAAK,EAAE,MAAKT,KAAL,CAAWS;AAHG,OAAvB;;AAMA,UAAI,MAAKT,KAAL,CAAWkM,OAAf,EAAwB;AACtBb,QAAAA,SAAS,GAAG;AAAE3B,UAAAA,SAAS,EAAE;AAAb,SAAZ;AACAuC,QAAAA,gBAAgB,GAAG;AAAEvC,UAAAA,SAAS,EAATA;AAAF,SAAnB;AACD;;AACD,aACE,0BAASuC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACG,CAAC,MAAKjM,KAAL,CAAWkM,OAAZ,GAAsBxB,SAAtB,GAAkC,EADrC,EAEE;AAAK,QAAA,GAAG,EAAE,MAAKyB;AAAf,SAAmCd,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,MAAC,KAAD;AAAO,QAAA,GAAG,EAAE,MAAKe;AAAjB,SAAsCxC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACG,MAAK5J,KAAL,CAAWoE,QADd,CADF,CAFF,EAOG,CAAC,MAAKpE,KAAL,CAAWkM,OAAZ,GAAsBvB,SAAtB,GAAkC,EAPrC,EAQG,CAAC,MAAK3K,KAAL,CAAWkM,OAAZ,GAAsB9B,IAAtB,GAA6B,EARhC,CADF;AAYD,KAtqBkB;;AAEjB,UAAKlK,IAAL,GAAY,IAAZ;AACA,UAAKC,KAAL,GAAa,IAAb;AACA,UAAKI,KAAL,mCACK/B,YADL;AAEEgC,MAAAA,YAAY,EAAE,MAAKR,KAAL,CAAWqM,YAF3B;AAGE3G,MAAAA,UAAU,EAAEnH,KAAK,CAAC2F,QAAN,CAAeC,KAAf,CAAqB,MAAKnE,KAAL,CAAWoE,QAAhC;AAHd;AAKA,UAAKnC,cAAL,GAAsB,EAAtB;AACA,UAAKgG,SAAL,GAAiB,IAAjB;AACA,UAAKxD,eAAL,GAAuB,IAAvB;;AACA,QAAM6H,QAAQ,GAAG,MAAKC,OAAL,EAAjB;;AACA,UAAKhM,KAAL,mCAAkB,MAAKA,KAAvB,GAAiC+L,QAAjC;AAbiB;AAclB;;AAfH;AAAA;AAAA,mCAyFiBzI,SAzFjB,EAyF4B;AACxB,UAAIG,aAAa,GAAG,KAApB;;AACA,uCAAgBwI,MAAM,CAACC,IAAP,CAAY,KAAKzM,KAAjB,CAAhB,oCAAyC;AAApC,YAAI0M,GAAG,oBAAP;;AACH,YAAI,CAAC7I,SAAS,CAAC8I,cAAV,CAAyBD,GAAzB,CAAL,EAAoC;AAClC1I,UAAAA,aAAa,GAAG,IAAhB;AACA;AACD;;AACD,YAAI,OAAOH,SAAS,CAAC6I,GAAD,CAAhB,KAA0B,QAA1B,IAAsC,OAAO7I,SAAS,CAAC6I,GAAD,CAAhB,KAA0B,UAApE,EAAgF;AAC9E;AACD;;AACD,YAAI7I,SAAS,CAAC6I,GAAD,CAAT,KAAmB,KAAK1M,KAAL,CAAW0M,GAAX,CAAvB,EAAwC;AACtC1I,UAAAA,aAAa,GAAG,IAAhB;AACA;AACD;AACF;;AACD,aACEA,aAAa,IACbzF,KAAK,CAAC2F,QAAN,CAAeC,KAAf,CAAqB,KAAKnE,KAAL,CAAWoE,QAAhC,MAA8C7F,KAAK,CAAC2F,QAAN,CAAeC,KAAf,CAAqBN,SAAS,CAACO,QAA/B,CAFhD;AAID;AA5GH;;AAAA;AAAA,EAAiC7F,KAAK,CAACqO,SAAvC","sourcesContent":["import React from \"react\"\nimport initialState from \"./initial-state\"\nimport debounce from \"lodash.debounce\"\nimport classnames from \"classnames\"\nimport {\n  getOnDemandLazySlides,\n  extractObject,\n  initializedState,\n  getHeight,\n  canGoNext,\n  slideHandler,\n  changeSlide,\n  keyHandler,\n  swipeStart,\n  swipeMove,\n  swipeEnd,\n  getPreClones,\n  getPostClones,\n  getTrackLeft,\n  getTrackCSS\n} from \"./utils/innerSliderUtils\"\n\nimport { Track } from \"./track\"\nimport { Dots } from \"./dots\"\nimport { PrevArrow, NextArrow } from \"./arrows\"\nimport ResizeObserver from \"resize-observer-polyfill\"\n\nexport class InnerSlider extends React.Component {\n  constructor(props) {\n    super(props)\n    this.list = null\n    this.track = null\n    this.state = {\n      ...initialState,\n      currentSlide: this.props.initialSlide,\n      slideCount: React.Children.count(this.props.children)\n    }\n    this.callbackTimers = []\n    this.clickable = true\n    this.debouncedResize = null\n    const ssrState = this.ssrInit()\n    this.state = { ...this.state, ...ssrState }\n  }\n  listRefHandler = ref => (this.list = ref)\n  trackRefHandler = ref => (this.track = ref)\n  adaptHeight = () => {\n    if (this.props.adaptiveHeight && this.list) {\n      const elem = this.list.querySelector(`[data-index=\"${this.state.currentSlide}\"]`)\n      this.list.style.height = getHeight(elem) + \"px\"\n    }\n  }\n  componentDidMount = () => {\n    this.props.onInit && this.props.onInit()\n    if (this.props.lazyLoad) {\n      let slidesToLoad = getOnDemandLazySlides({\n        ...this.props,\n        ...this.state\n      })\n      if (slidesToLoad.length > 0) {\n        this.setState(prevState => ({\n          lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)\n        }))\n        if (this.props.onLazyLoad) {\n          this.props.onLazyLoad(slidesToLoad)\n        }\n      }\n    }\n    let spec = { listRef: this.list, trackRef: this.track, ...this.props }\n    this.updateState(spec, true, () => {\n      this.adaptHeight()\n      this.props.autoplay && this.autoPlay(\"update\")\n    })\n    if (this.props.lazyLoad === \"progressive\") {\n      this.lazyLoadTimer = setInterval(this.progressiveLazyLoad, 1000)\n    }\n    this.ro = new ResizeObserver(() => {\n      if (this.state.animating) {\n        this.onWindowResized(false) // don't set trackStyle hence don't break animation\n        this.callbackTimers.push(setTimeout(() => this.onWindowResized(), this.props.speed))\n      } else {\n        this.onWindowResized()\n      }\n    })\n    this.ro.observe(this.list)\n    Array.prototype.forEach.call(document.querySelectorAll(\".slick-slide\"), slide => {\n      slide.onfocus = this.props.pauseOnFocus ? this.onSlideFocus : null\n      slide.onblur = this.props.pauseOnFocus ? this.onSlideBlur : null\n    })\n    if (window.addEventListener) {\n      window.addEventListener(\"resize\", this.onWindowResized)\n    } else {\n      window.attachEvent(\"onresize\", this.onWindowResized)\n    }\n  }\n  componentWillUnmount = () => {\n    if (this.animationEndCallback) {\n      clearTimeout(this.animationEndCallback)\n    }\n    if (this.lazyLoadTimer) {\n      clearInterval(this.lazyLoadTimer)\n    }\n    if (this.callbackTimers.length) {\n      this.callbackTimers.forEach(timer => clearTimeout(timer))\n      this.callbackTimers = []\n    }\n    if (window.addEventListener) {\n      window.removeEventListener(\"resize\", this.onWindowResized)\n    } else {\n      window.detachEvent(\"onresize\", this.onWindowResized)\n    }\n    if (this.autoplayTimer) {\n      clearInterval(this.autoplayTimer)\n    }\n    this.ro.disconnect()\n  }\n\n  didPropsChange(prevProps) {\n    let setTrackStyle = false\n    for (let key of Object.keys(this.props)) {\n      if (!prevProps.hasOwnProperty(key)) {\n        setTrackStyle = true\n        break\n      }\n      if (typeof prevProps[key] === \"object\" || typeof prevProps[key] === \"function\") {\n        continue\n      }\n      if (prevProps[key] !== this.props[key]) {\n        setTrackStyle = true\n        break\n      }\n    }\n    return (\n      setTrackStyle ||\n      React.Children.count(this.props.children) !== React.Children.count(prevProps.children)\n    )\n  }\n\n  componentDidUpdate = prevProps => {\n    this.checkImagesLoad()\n    this.props.onReInit && this.props.onReInit()\n    if (this.props.lazyLoad) {\n      let slidesToLoad = getOnDemandLazySlides({\n        ...this.props,\n        ...this.state\n      })\n      if (slidesToLoad.length > 0) {\n        this.setState(prevState => ({\n          lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)\n        }))\n        if (this.props.onLazyLoad) {\n          this.props.onLazyLoad(slidesToLoad)\n        }\n      }\n    }\n    // if (this.props.onLazyLoad) {\n    //   this.props.onLazyLoad([leftMostSlide])\n    // }\n    this.adaptHeight()\n    let spec = {\n      listRef: this.list,\n      trackRef: this.track,\n      ...this.props,\n      ...this.state\n    }\n    const setTrackStyle = this.didPropsChange(prevProps)\n    setTrackStyle &&\n      this.updateState(spec, setTrackStyle, () => {\n        if (this.state.currentSlide >= React.Children.count(this.props.children)) {\n          this.changeSlide({\n            message: \"index\",\n            index: React.Children.count(this.props.children) - this.props.slidesToShow,\n            currentSlide: this.state.currentSlide\n          })\n        }\n        if (this.props.autoplay) {\n          this.autoPlay(\"update\")\n        } else {\n          this.pause(\"paused\")\n        }\n      })\n  }\n  onWindowResized = setTrackStyle => {\n    if (this.debouncedResize) this.debouncedResize.cancel()\n    this.debouncedResize = debounce(() => this.resizeWindow(setTrackStyle), 50)\n    this.debouncedResize()\n  }\n  resizeWindow = (setTrackStyle = true) => {\n    const isTrackMounted = Boolean(this.track && this.track.node)\n    // prevent warning: setting state on unmounted component (server side rendering)\n    if (!isTrackMounted) return\n    let spec = {\n      listRef: this.list,\n      trackRef: this.track,\n      ...this.props,\n      ...this.state\n    }\n    this.updateState(spec, setTrackStyle, () => {\n      if (this.props.autoplay) this.autoPlay(\"update\")\n      else this.pause(\"paused\")\n    })\n    // animating state should be cleared while resizing, otherwise autoplay stops working\n    this.setState({\n      animating: false\n    })\n    clearTimeout(this.animationEndCallback)\n    delete this.animationEndCallback\n  }\n  updateState = (spec, setTrackStyle, callback) => {\n    let updatedState = initializedState(spec)\n    spec = { ...spec, ...updatedState, slideIndex: updatedState.currentSlide }\n    let targetLeft = getTrackLeft(spec)\n    spec = { ...spec, left: targetLeft }\n    let trackStyle = getTrackCSS(spec)\n    if (\n      setTrackStyle ||\n      React.Children.count(this.props.children) !== React.Children.count(spec.children)\n    ) {\n      updatedState[\"trackStyle\"] = trackStyle\n    }\n    this.setState(updatedState, callback)\n  }\n\n  ssrInit = () => {\n    if (this.props.variableWidth) {\n      let trackWidth = 0,\n        trackLeft = 0\n      let childrenWidths = []\n      let preClones = getPreClones({\n        ...this.props,\n        ...this.state,\n        slideCount: this.props.children.length\n      })\n      let postClones = getPostClones({\n        ...this.props,\n        ...this.state,\n        slideCount: this.props.children.length\n      })\n      this.props.children.forEach(child => {\n        childrenWidths.push(child.props.style.width)\n        trackWidth += child.props.style.width\n      })\n      for (let i = 0; i < preClones; i++) {\n        trackLeft += childrenWidths[childrenWidths.length - 1 - i]\n        trackWidth += childrenWidths[childrenWidths.length - 1 - i]\n      }\n      for (let i = 0; i < postClones; i++) {\n        trackWidth += childrenWidths[i]\n      }\n      for (let i = 0; i < this.state.currentSlide; i++) {\n        trackLeft += childrenWidths[i]\n      }\n      let trackStyle = {\n        width: trackWidth + \"px\",\n        left: -trackLeft + \"px\"\n      }\n      if (this.props.centerMode) {\n        let currentWidth = `${childrenWidths[this.state.currentSlide]}px`\n        trackStyle.left = `calc(${trackStyle.left} + (100% - ${currentWidth}) / 2 ) `\n      }\n      return {\n        trackStyle\n      }\n    }\n    let childrenCount = React.Children.count(this.props.children)\n    const spec = { ...this.props, ...this.state, slideCount: childrenCount }\n    let slideCount = getPreClones(spec) + getPostClones(spec) + childrenCount\n    let trackWidth = (100 / this.props.slidesToShow) * slideCount\n    let slideWidth = 100 / slideCount\n    let trackLeft =\n      (-slideWidth * (getPreClones(spec) + this.state.currentSlide) * trackWidth) / 100\n    if (this.props.centerMode) {\n      trackLeft += (100 - (slideWidth * trackWidth) / 100) / 2\n    }\n    let trackStyle = {\n      width: trackWidth + \"%\",\n      left: trackLeft + \"%\"\n    }\n    return {\n      slideWidth: slideWidth + \"%\",\n      trackStyle: trackStyle\n    }\n  }\n  checkImagesLoad = () => {\n    let images = this.list.querySelectorAll(\".slick-slide img\")\n    let imagesCount = images.length,\n      loadedCount = 0\n    Array.prototype.forEach.call(images, image => {\n      const handler = () => ++loadedCount && loadedCount >= imagesCount && this.onWindowResized()\n      if (!image.onclick) {\n        image.onclick = () => image.parentNode.focus()\n      } else {\n        const prevClickHandler = image.onclick\n        image.onclick = () => {\n          prevClickHandler()\n          image.parentNode.focus()\n        }\n      }\n      if (!image.onload) {\n        if (this.props.lazyLoad) {\n          image.onload = () => {\n            this.adaptHeight()\n            this.callbackTimers.push(setTimeout(this.onWindowResized, this.props.speed))\n          }\n        } else {\n          image.onload = handler\n          image.onerror = () => {\n            handler()\n            this.props.onLazyLoadError && this.props.onLazyLoadError()\n          }\n        }\n      }\n    })\n  }\n  progressiveLazyLoad = () => {\n    let slidesToLoad = []\n    const spec = { ...this.props, ...this.state }\n    for (\n      let index = this.state.currentSlide;\n      index < this.state.slideCount + getPostClones(spec);\n      index++\n    ) {\n      if (this.state.lazyLoadedList.indexOf(index) < 0) {\n        slidesToLoad.push(index)\n        break\n      }\n    }\n    for (let index = this.state.currentSlide - 1; index >= -getPreClones(spec); index--) {\n      if (this.state.lazyLoadedList.indexOf(index) < 0) {\n        slidesToLoad.push(index)\n        break\n      }\n    }\n    if (slidesToLoad.length > 0) {\n      this.setState(state => ({\n        lazyLoadedList: state.lazyLoadedList.concat(slidesToLoad)\n      }))\n      if (this.props.onLazyLoad) {\n        this.props.onLazyLoad(slidesToLoad)\n      }\n    } else {\n      if (this.lazyLoadTimer) {\n        clearInterval(this.lazyLoadTimer)\n        delete this.lazyLoadTimer\n      }\n    }\n  }\n  slideHandler = (index, dontAnimate = false) => {\n    const { asNavFor, beforeChange, onLazyLoad, speed, afterChange } = this.props\n    // capture currentslide before state is updated\n    const currentSlide = this.state.currentSlide\n    let { state, nextState } = slideHandler({\n      index,\n      ...this.props,\n      ...this.state,\n      trackRef: this.track,\n      useCSS: this.props.useCSS && !dontAnimate\n    })\n    if (!state) return\n    beforeChange && beforeChange(currentSlide, state.currentSlide)\n    let slidesToLoad = state.lazyLoadedList.filter(\n      value => this.state.lazyLoadedList.indexOf(value) < 0\n    )\n    onLazyLoad && slidesToLoad.length > 0 && onLazyLoad(slidesToLoad)\n    if (!this.props.waitForAnimate && this.animationEndCallback) {\n      clearTimeout(this.animationEndCallback)\n      afterChange && afterChange(currentSlide)\n      delete this.animationEndCallback\n    }\n    this.setState(state, () => {\n      // asNavForIndex check is to avoid recursive calls of slideHandler in waitForAnimate=false mode\n      if (asNavFor && this.asNavForIndex !== index) {\n        this.asNavForIndex = index\n        asNavFor.innerSlider.slideHandler(index)\n      }\n      if (!nextState) return\n      this.animationEndCallback = setTimeout(() => {\n        const { animating, ...firstBatch } = nextState\n        this.setState(firstBatch, () => {\n          this.callbackTimers.push(setTimeout(() => this.setState({ animating }), 10))\n          afterChange && afterChange(state.currentSlide)\n          delete this.animationEndCallback\n        })\n      }, speed)\n    })\n  }\n  changeSlide = (options, dontAnimate = false) => {\n    const spec = { ...this.props, ...this.state }\n    let targetSlide = changeSlide(spec, options)\n    if (targetSlide !== 0 && !targetSlide) return\n    if (dontAnimate === true) {\n      this.slideHandler(targetSlide, dontAnimate)\n    } else {\n      this.slideHandler(targetSlide)\n    }\n    this.props.autoplay && this.autoPlay(\"update\")\n    if (this.props.focusOnSelect) {\n      const nodes = this.list.querySelectorAll(\".slick-current\")\n      nodes[0] && nodes[0].focus()\n    }\n  }\n  clickHandler = e => {\n    if (this.clickable === false) {\n      e.stopPropagation()\n      e.preventDefault()\n    }\n    this.clickable = true\n  }\n  keyHandler = e => {\n    let dir = keyHandler(e, this.props.accessibility, this.props.rtl)\n    dir !== \"\" && this.changeSlide({ message: dir })\n  }\n  selectHandler = options => {\n    this.changeSlide(options)\n  }\n  disableBodyScroll = () => {\n    const preventDefault = e => {\n      e = e || window.event\n      if (e.preventDefault) e.preventDefault()\n      e.returnValue = false\n    }\n    window.ontouchmove = preventDefault\n  }\n  enableBodyScroll = () => {\n    window.ontouchmove = null\n  }\n  swipeStart = e => {\n    if (this.props.verticalSwiping) {\n      this.disableBodyScroll()\n    }\n    let state = swipeStart(e, this.props.swipe, this.props.draggable)\n    state !== \"\" && this.setState(state)\n  }\n  swipeMove = e => {\n    let state = swipeMove(e, {\n      ...this.props,\n      ...this.state,\n      trackRef: this.track,\n      listRef: this.list,\n      slideIndex: this.state.currentSlide\n    })\n    if (!state) return\n    if (state[\"swiping\"]) {\n      this.clickable = false\n    }\n    this.setState(state)\n  }\n  swipeEnd = e => {\n    let state = swipeEnd(e, {\n      ...this.props,\n      ...this.state,\n      trackRef: this.track,\n      listRef: this.list,\n      slideIndex: this.state.currentSlide\n    })\n    if (!state) return\n    let triggerSlideHandler = state[\"triggerSlideHandler\"]\n    delete state[\"triggerSlideHandler\"]\n    this.setState(state)\n    if (triggerSlideHandler === undefined) return\n    this.slideHandler(triggerSlideHandler)\n    if (this.props.verticalSwiping) {\n      this.enableBodyScroll()\n    }\n  }\n  touchEnd = e => {\n    this.swipeEnd(e)\n    this.clickable = true\n  }\n  slickPrev = () => {\n    // this and fellow methods are wrapped in setTimeout\n    // to make sure initialize setState has happened before\n    // any of such methods are called\n    this.callbackTimers.push(setTimeout(() => this.changeSlide({ message: \"previous\" }), 0))\n  }\n  slickNext = () => {\n    this.callbackTimers.push(setTimeout(() => this.changeSlide({ message: \"next\" }), 0))\n  }\n  slickGoTo = (slide, dontAnimate = false) => {\n    slide = Number(slide)\n    if (isNaN(slide)) return \"\"\n    this.callbackTimers.push(\n      setTimeout(\n        () =>\n          this.changeSlide(\n            {\n              message: \"index\",\n              index: slide,\n              currentSlide: this.state.currentSlide\n            },\n            dontAnimate\n          ),\n        0\n      )\n    )\n  }\n  play = () => {\n    var nextIndex\n    if (this.props.rtl) {\n      nextIndex = this.state.currentSlide - this.props.slidesToScroll\n    } else {\n      if (canGoNext({ ...this.props, ...this.state })) {\n        nextIndex = this.state.currentSlide + this.props.slidesToScroll\n      } else {\n        return false\n      }\n    }\n\n    this.slideHandler(nextIndex)\n  }\n\n  autoPlay = playType => {\n    if (this.autoplayTimer) {\n      clearInterval(this.autoplayTimer)\n    }\n    const autoplaying = this.state.autoplaying\n    if (playType === \"update\") {\n      if (autoplaying === \"hovered\" || autoplaying === \"focused\" || autoplaying === \"paused\") {\n        return\n      }\n    } else if (playType === \"leave\") {\n      if (autoplaying === \"paused\" || autoplaying === \"focused\") {\n        return\n      }\n    } else if (playType === \"blur\") {\n      if (autoplaying === \"paused\" || autoplaying === \"hovered\") {\n        return\n      }\n    }\n    this.autoplayTimer = setInterval(this.play, this.props.autoplaySpeed + 50)\n    this.setState({ autoplaying: \"playing\" })\n  }\n  pause = pauseType => {\n    if (this.autoplayTimer) {\n      clearInterval(this.autoplayTimer)\n      this.autoplayTimer = null\n    }\n    const autoplaying = this.state.autoplaying\n    if (pauseType === \"paused\") {\n      this.setState({ autoplaying: \"paused\" })\n    } else if (pauseType === \"focused\") {\n      if (autoplaying === \"hovered\" || autoplaying === \"playing\") {\n        this.setState({ autoplaying: \"focused\" })\n      }\n    } else {\n      // pauseType  is 'hovered'\n      if (autoplaying === \"playing\") {\n        this.setState({ autoplaying: \"hovered\" })\n      }\n    }\n  }\n  onDotsOver = () => this.props.autoplay && this.pause(\"hovered\")\n  onDotsLeave = () =>\n    this.props.autoplay && this.state.autoplaying === \"hovered\" && this.autoPlay(\"leave\")\n  onTrackOver = () => this.props.autoplay && this.pause(\"hovered\")\n  onTrackLeave = () =>\n    this.props.autoplay && this.state.autoplaying === \"hovered\" && this.autoPlay(\"leave\")\n  onSlideFocus = () => this.props.autoplay && this.pause(\"focused\")\n  onSlideBlur = () =>\n    this.props.autoplay && this.state.autoplaying === \"focused\" && this.autoPlay(\"blur\")\n\n  render = () => {\n    var className = classnames(\"slick-slider\", \"carousel\", this.props.className, {\n      \"carousel-center\": this.props.centerMode,\n      \"slick-vertical\": this.props.vertical,\n      \"slick-initialized\": true\n    })\n    let spec = { ...this.props, ...this.state }\n    let trackProps = extractObject(spec, [\n      \"fade\",\n      \"cssEase\",\n      \"speed\",\n      \"infinite\",\n      \"centerMode\",\n      \"focusOnSelect\",\n      \"currentSlide\",\n      \"lazyLoad\",\n      \"lazyLoadedList\",\n      \"rtl\",\n      \"slideWidth\",\n      \"slideHeight\",\n      \"listHeight\",\n      \"vertical\",\n      \"slidesToShow\",\n      \"slidesToScroll\",\n      \"slideCount\",\n      \"trackStyle\",\n      \"variableWidth\",\n      \"unslick\",\n      \"centerPadding\",\n      \"targetSlide\",\n      \"useCSS\"\n    ])\n    const { pauseOnHover } = this.props\n    trackProps = {\n      ...trackProps,\n      onMouseEnter: pauseOnHover ? this.onTrackOver : null,\n      onMouseLeave: pauseOnHover ? this.onTrackLeave : null,\n      onMouseOver: pauseOnHover ? this.onTrackOver : null,\n      focusOnSelect: this.props.focusOnSelect && this.clickable ? this.selectHandler : null\n    }\n\n    var dots\n    if (this.props.dots === true && this.state.slideCount >= this.props.slidesToShow) {\n      let dotProps = extractObject(spec, [\n        \"dotsClass\",\n        \"slideCount\",\n        \"slidesToShow\",\n        \"currentSlide\",\n        \"slidesToScroll\",\n        \"clickHandler\",\n        \"children\",\n        \"customPaging\",\n        \"infinite\",\n        \"appendDots\"\n      ])\n      const { pauseOnDotsHover } = this.props\n      dotProps = {\n        ...dotProps,\n        clickHandler: this.changeSlide,\n        onMouseEnter: pauseOnDotsHover ? this.onDotsLeave : null,\n        onMouseOver: pauseOnDotsHover ? this.onDotsOver : null,\n        onMouseLeave: pauseOnDotsHover ? this.onDotsLeave : null\n      }\n      dots = <Dots {...dotProps} />\n    }\n\n    var prevArrow, nextArrow\n    let arrowProps = extractObject(spec, [\n      \"infinite\",\n      \"centerMode\",\n      \"currentSlide\",\n      \"slideCount\",\n      \"slidesToShow\",\n      \"prevArrow\",\n      \"nextArrow\"\n    ])\n    arrowProps.clickHandler = this.changeSlide\n\n    if (this.props.arrows) {\n      prevArrow = <PrevArrow {...arrowProps} />\n      nextArrow = <NextArrow {...arrowProps} />\n    }\n\n    var verticalHeightStyle = null\n\n    if (this.props.vertical) {\n      verticalHeightStyle = {\n        height: this.state.listHeight\n      }\n    }\n\n    var centerPaddingStyle = null\n\n    if (this.props.vertical === false) {\n      if (this.props.centerMode === true) {\n        centerPaddingStyle = {\n          padding: \"0px \" + this.props.centerPadding\n        }\n      }\n    } else {\n      if (this.props.centerMode === true) {\n        centerPaddingStyle = {\n          padding: this.props.centerPadding + \" 0px\"\n        }\n      }\n    }\n\n    const listStyle = { ...verticalHeightStyle, ...centerPaddingStyle }\n    const touchMove = this.props.touchMove\n    let listProps = {\n      className: \"slick-list\",\n      style: listStyle,\n      onClick: this.clickHandler,\n      onMouseDown: touchMove ? this.swipeStart : null,\n      onMouseMove: this.state.dragging && touchMove ? this.swipeMove : null,\n      onMouseUp: touchMove ? this.swipeEnd : null,\n      onMouseLeave: this.state.dragging && touchMove ? this.swipeEnd : null,\n      onTouchStart: touchMove ? this.swipeStart : null,\n      onTouchMove: this.state.dragging && touchMove ? this.swipeMove : null,\n      onTouchEnd: touchMove ? this.touchEnd : null,\n      onTouchCancel: this.state.dragging && touchMove ? this.swipeEnd : null,\n      onKeyDown: this.props.accessibility ? this.keyHandler : null\n    }\n\n    let innerSliderProps = {\n      className: className,\n      dir: \"ltr\",\n      style: this.props.style\n    }\n\n    if (this.props.unslick) {\n      listProps = { className: \"slick-list\" }\n      innerSliderProps = { className }\n    }\n    return (\n      <div {...innerSliderProps}>\n        {!this.props.unslick ? prevArrow : \"\"}\n        <div ref={this.listRefHandler} {...listProps}>\n          <Track ref={this.trackRefHandler} {...trackProps}>\n            {this.props.children}\n          </Track>\n        </div>\n        {!this.props.unslick ? nextArrow : \"\"}\n        {!this.props.unslick ? dots : \"\"}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}