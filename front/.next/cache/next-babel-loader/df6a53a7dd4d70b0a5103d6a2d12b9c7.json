{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\pages\\\\elements\\\\base\\\\popover.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Row, Col, Form, Label, Button, Popover, Portlet, Container, DemoWrapper } from \"@panely/components\";\nimport { pageChangeHeaderTitle, breadcrumbChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport withLayout from \"components/layout/withLayout\"; //import withAuth from \"components/firebase/firebaseWithAuth\"\n\nimport Head from \"next/head\";\n\nvar PopoverPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(PopoverPage, _React$Component);\n\n  var _super = _createSuper(PopoverPage);\n\n  function PopoverPage() {\n    _classCallCheck(this, PopoverPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PopoverPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Set header title\n      this.props.pageChangeHeaderTitle(\"Popover\"); // Set breadcrumb data\n\n      this.props.breadcrumbChange([{\n        text: \"Dashboard\",\n        link: \"/\"\n      }, {\n        text: \"Elements\"\n      }, {\n        text: \"Base\"\n      }, {\n        text: \"Popover\",\n        link: \"/elements/base/popover\"\n      }]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, \"Popover | Panely\")), __jsx(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, __jsx(Col, {\n        xs: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, __jsx(Portlet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, __jsx(Portlet.Header, {\n        bordered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, __jsx(Portlet.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }\n      }, \"Popover examples\")), __jsx(Portlet.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, __jsx(Form.Group, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }\n      }, __jsx(Label, {\n        sm: \"4\",\n        lg: \"3\",\n        className: \"text-muted text-sm-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, \"Basic popover\"), __jsx(Col, {\n        sm: \"8\",\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, __jsx(DemoWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }\n      }, __jsx(PopoverControlled, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }), __jsx(Button, {\n        id: \"popover2\",\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }, \"Uncontrolled\"), __jsx(Popover.Uncontrolled, {\n        target: \"popover2\",\n        title: \"Popover title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, \"And here's some amazing content. It's very engaging. Right?\")))), __jsx(Form.Group, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      }, __jsx(Label, {\n        sm: \"4\",\n        lg: \"3\",\n        className: \"text-muted text-sm-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, \"Positions\"), __jsx(Col, {\n        sm: \"8\",\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, __jsx(DemoWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 23\n        }\n      }, __jsx(Button, {\n        id: \"popover3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, \"Top\"), \" \", __jsx(Button, {\n        id: \"popover4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, \"Bottom\"), \" \", __jsx(Button, {\n        id: \"popover5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, \"Left\"), \" \", __jsx(Button, {\n        id: \"popover6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, \"Right\"), __jsx(Popover.Uncontrolled, {\n        placement: \"top\",\n        target: \"popover3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\"), __jsx(Popover.Uncontrolled, {\n        placement: \"bottom\",\n        target: \"popover4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\"), __jsx(Popover.Uncontrolled, {\n        placement: \"left\",\n        target: \"popover5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\"), __jsx(Popover.Uncontrolled, {\n        placement: \"right\",\n        target: \"popover6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }, \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\")), __jsx(\"p\", {\n        className: \"mb-0 mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }\n      }, \"Change popover placement by setting \", __jsx(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 61\n        }\n      }, \"placement\"), \" property with\", \" \", __jsx(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, \"top|bottom|right|left\")))), __jsx(Form.Group, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      }, __jsx(Label, {\n        sm: \"4\",\n        lg: \"3\",\n        className: \"text-muted text-sm-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, \"Dismiss on next click\"), __jsx(Col, {\n        sm: \"8\",\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }, __jsx(Button, {\n        id: \"popover7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }\n      }, \"Click me\"), __jsx(Popover.Uncontrolled, {\n        trigger: \"focus\",\n        target: \"popover7\",\n        title: \"Dismissible popover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }\n      }, \"And here's some amazing content. It's very engaging. Right?\"), __jsx(\"p\", {\n        className: \"mb-0 mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 23\n        }\n      }, \"Use the \", __jsx(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 33\n        }\n      }, \"trigger=\\\"focus\\\"\"), \" property to dismiss popovers on the user\\u2019s next click of a different element than the toggle element\"))), __jsx(Form.Group, {\n        row: true,\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }\n      }, __jsx(Label, {\n        sm: \"4\",\n        lg: \"3\",\n        className: \"text-muted text-sm-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, \"HTML content\"), __jsx(Col, {\n        sm: \"8\",\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, __jsx(Button, {\n        id: \"popover8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 23\n        }\n      }, \"Click me\"), __jsx(Popover.Uncontrolled, {\n        trigger: \"focus\",\n        target: \"popover8\",\n        title: \"Popover title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 23\n        }\n      }, \"And here's some amazing \", __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 49\n        }\n      }, \"HTML\"), \" content. It's very \", __jsx(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 80\n        }\n      }, \"engaging\"), \". Right?\"), __jsx(\"p\", {\n        className: \"mb-0 mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 23\n        }\n      }, \"You can put popover html content inside popover body\")))))))));\n    }\n  }]);\n\n  return PopoverPage;\n}(React.Component); // Controlled popover example\n\n\nvar PopoverControlled = /*#__PURE__*/function (_React$Component2) {\n  _inherits(PopoverControlled, _React$Component2);\n\n  var _super2 = _createSuper(PopoverControlled);\n\n  function PopoverControlled() {\n    var _this;\n\n    _classCallCheck(this, PopoverControlled);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super2.call.apply(_super2, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isOpen: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function () {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(PopoverControlled, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }\n      }, __jsx(Button, {\n        id: \"popover1\",\n        onClick: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, \"Controlled\"), __jsx(Popover, _extends({\n        target: \"popover1\",\n        title: \"Popover title\",\n        isOpen: this.state.isOpen,\n        toggle: this.toggle\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      }), \"And here's some amazing content. It's very engaging. Right?\"));\n    }\n  }]);\n\n  return PopoverControlled;\n}(React.Component);\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle: pageChangeHeaderTitle,\n    breadcrumbChange: breadcrumbChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withLayout(PopoverPage));","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/pages/elements/base/popover.jsx"],"names":["Row","Col","Form","Label","Button","Popover","Portlet","Container","DemoWrapper","pageChangeHeaderTitle","breadcrumbChange","bindActionCreators","connect","withLayout","Head","PopoverPage","props","text","link","React","Component","PopoverControlled","isOpen","setState","state","toggle","mapDispathToProps","dispatch"],"mappings":"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","sourcesContent":["import { Row, Col, Form, Label, Button, Popover, Portlet, Container, DemoWrapper } from \"@panely/components\"\nimport { pageChangeHeaderTitle, breadcrumbChange } from \"store/actions\"\nimport { bindActionCreators } from \"redux\"\nimport { connect } from \"react-redux\"\nimport withLayout from \"components/layout/withLayout\"\n//import withAuth from \"components/firebase/firebaseWithAuth\"\nimport Head from \"next/head\"\n\nclass PopoverPage extends React.Component {\n  componentDidMount() {\n    // Set header title\n    this.props.pageChangeHeaderTitle(\"Popover\")\n    // Set breadcrumb data\n    this.props.breadcrumbChange([\n      { text: \"Dashboard\", link: \"/\" },\n      { text: \"Elements\" },\n      { text: \"Base\" },\n      { text: \"Popover\", link: \"/elements/base/popover\" }\n    ])\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Head>\n          <title>Popover | Panely</title>\n        </Head>\n        <Container fluid>\n          <Row>\n            <Col xs=\"12\">\n              {/* BEGIN Portlet */}\n              <Portlet>\n                <Portlet.Header bordered>\n                  <Portlet.Title>Popover examples</Portlet.Title>\n                </Portlet.Header>\n                <Portlet.Body>\n                  {/* BEGIN Form Group */}\n                  <Form.Group row>\n                    <Label sm=\"4\" lg=\"3\" className=\"text-muted text-sm-right\">\n                      Basic popover\n                    </Label>\n                    <Col sm=\"8\" lg=\"9\">\n                      <DemoWrapper>\n                        <PopoverControlled />\n                        <Button id=\"popover2\" className=\"ml-2\">\n                          Uncontrolled\n                        </Button>\n                        <Popover.Uncontrolled target=\"popover2\" title=\"Popover title\">\n                          And here's some amazing content. It's very engaging. Right?\n                        </Popover.Uncontrolled>\n                      </DemoWrapper>\n                    </Col>\n                  </Form.Group>\n                  {/* END Form Group */}\n                  {/* BEGIN Form Group */}\n                  <Form.Group row>\n                    <Label sm=\"4\" lg=\"3\" className=\"text-muted text-sm-right\">\n                      Positions\n                    </Label>\n                    <Col sm=\"8\" lg=\"9\">\n                      <DemoWrapper>\n                        <Button id=\"popover3\">Top</Button>{\" \"}\n                        <Button id=\"popover4\">Bottom</Button>{\" \"}\n                        <Button id=\"popover5\">Left</Button>{\" \"}\n                        <Button id=\"popover6\">Right</Button>\n                        <Popover.Uncontrolled placement=\"top\" target=\"popover3\">\n                          Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\n                        </Popover.Uncontrolled>\n                        <Popover.Uncontrolled placement=\"bottom\" target=\"popover4\">\n                          Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\n                        </Popover.Uncontrolled>\n                        <Popover.Uncontrolled placement=\"left\" target=\"popover5\">\n                          Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\n                        </Popover.Uncontrolled>\n                        <Popover.Uncontrolled placement=\"right\" target=\"popover6\">\n                          Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\n                        </Popover.Uncontrolled>\n                      </DemoWrapper>\n                      <p className=\"mb-0 mt-2\">\n                        Change popover placement by setting <code>placement</code> property with{\" \"}\n                        <code>top|bottom|right|left</code>\n                      </p>\n                    </Col>\n                  </Form.Group>\n                  {/* END Form Group */}\n                  {/* BEGIN Form Group */}\n                  <Form.Group row>\n                    <Label sm=\"4\" lg=\"3\" className=\"text-muted text-sm-right\">\n                      Dismiss on next click\n                    </Label>\n                    <Col sm=\"8\" lg=\"9\">\n                      <Button id=\"popover7\">Click me</Button>\n                      <Popover.Uncontrolled\n                        trigger=\"focus\"\n                        target=\"popover7\"\n                        title=\"Dismissible popover\"\n                      >\n                        And here's some amazing content. It's very engaging. Right?\n                      </Popover.Uncontrolled>\n                      <p className=\"mb-0 mt-2\">\n                        Use the <code>trigger=\"focus\"</code> property to dismiss popovers on the\n                        user’s next click of a different element than the toggle element\n                      </p>\n                    </Col>\n                  </Form.Group>\n                  {/* END Form Group */}\n                  {/* BEGIN Form Group */}\n                  <Form.Group row className=\"mb-0\">\n                    <Label sm=\"4\" lg=\"3\" className=\"text-muted text-sm-right\">\n                      HTML content\n                    </Label>\n                    <Col sm=\"8\" lg=\"9\">\n                      <Button id=\"popover8\">Click me</Button>\n                      <Popover.Uncontrolled trigger=\"focus\" target=\"popover8\" title=\"Popover title\">\n                        And here's some amazing <b>HTML</b> content. It's very <code>engaging</code>\n                        . Right?\n                      </Popover.Uncontrolled>\n                      <p className=\"mb-0 mt-2\">\n                        You can put popover html content inside popover body\n                      </p>\n                    </Col>\n                  </Form.Group>\n                  {/* END Form Group */}\n                </Portlet.Body>\n              </Portlet>\n              {/* END Portlet */}\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n    )\n  }\n}\n\n// Controlled popover example\nclass PopoverControlled extends React.Component {\n  // Default states\n  state = { isOpen: false }\n\n  // Handle popover toggle event\n  toggle = () => {\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Button id=\"popover1\" onClick={this.toggle}>\n          Controlled\n        </Button>\n        <Popover\n          target=\"popover1\"\n          title=\"Popover title\"\n          isOpen={this.state.isOpen}\n          toggle={this.toggle}\n          {...this.props}\n        >\n          And here's some amazing content. It's very engaging. Right?\n        </Popover>\n      </React.Fragment>\n    )\n  }\n}\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({ pageChangeHeaderTitle, breadcrumbChange }, dispatch)\n}\n\nexport default connect(null, mapDispathToProps)(withLayout(PopoverPage))\n"]},"metadata":{},"sourceType":"module"}