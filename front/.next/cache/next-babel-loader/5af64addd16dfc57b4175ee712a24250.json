{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Badge, Button, Avatar, GridNav, Portlet, Dropdown, RichList, Widget13 } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { bindActionCreators } from \"redux\";\nimport { firebaseClient } from \"components/firebase/firebaseClient\";\nimport { firebaseChange } from \"store/actions\";\nimport { connect } from \"react-redux\";\nimport * as RegularIcon from \"@fortawesome/free-regular-svg-icons\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport verifyCookie from \"components/firebase/firebaseVerifyCookie\";\nimport swalContent from \"sweetalert2-react-content\";\nimport SimpleBar from \"simplebar\";\nimport Router from \"next/router\";\nimport Swal from \"@panely/sweetalert2\";\nimport PAGE from \"config/page.config\"; // Use SweetAlert React Content library\n\nvar ReactSwal = swalContent(Swal); // Set SweetAlert options\n\nvar swal = ReactSwal.mixin({\n  customClass: {\n    confirmButton: \"btn btn-label-success btn-wide mx-1\",\n    cancelButton: \"btn btn-label-danger btn-wide mx-1\"\n  },\n  buttonsStyling: false\n});\n\nvar HeaderUser = /*#__PURE__*/function (_React$Component) {\n  _inherits(HeaderUser, _React$Component);\n\n  var _super = _createSuper(HeaderUser);\n\n  function HeaderUser() {\n    var _this;\n\n    _classCallCheck(this, HeaderUser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      avatar: function avatar() {\n        return __jsx(Avatar, {\n          variant: \"label-light\",\n          display: true,\n          circle: true\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faUserAlt\n        }));\n      },\n      name: \"Guest\",\n      email: \"No email\",\n      count: 6,\n      navs: [[{\n        icon: function icon() {\n          return __jsx(FontAwesomeIcon, {\n            icon: RegularIcon.faAddressCard\n          });\n        },\n        title: \"Profile\"\n      }, {\n        icon: function icon() {\n          return __jsx(FontAwesomeIcon, {\n            icon: RegularIcon.faComments\n          });\n        },\n        title: \"Messages\"\n      }, {\n        icon: function icon() {\n          return __jsx(FontAwesomeIcon, {\n            icon: RegularIcon.faClone\n          });\n        },\n        title: \"Activities\"\n      }], [{\n        icon: function icon() {\n          return __jsx(FontAwesomeIcon, {\n            icon: RegularIcon.faCalendarCheck\n          });\n        },\n        title: \"Tasks\"\n      }, {\n        icon: function icon() {\n          return __jsx(FontAwesomeIcon, {\n            icon: RegularIcon.faStickyNote\n          });\n        },\n        title: \"Notes\"\n      }, {\n        icon: function icon() {\n          return __jsx(FontAwesomeIcon, {\n            icon: RegularIcon.faBell\n          });\n        },\n        title: \"Notification\"\n      }]]\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSignOut\", function () {\n      // Try to signing out\n      firebaseClient.auth().signOut().then(function () {\n        // Redirect to login page and remove firebase data from state management\n        _this.props.firebaseChange(null);\n\n        Router.push(PAGE.loginPagePath);\n      })[\"catch\"](function (err) {\n        // Show error message with SweetAlert\n        swal.fire({\n          text: err.message,\n          icon: \"error\"\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(HeaderUser, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.firebase !== prevProps.firebase) {\n        // Check whether user has logged in\n        if (this.props.firebase) {\n          var _this$props$firebase = this.props.firebase,\n              name = _this$props$firebase.name,\n              email = _this$props$firebase.email; // Set the component state\n\n          this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n            name: name,\n            email: email\n          }));\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          WidgetAvatar = _this$state.avatar,\n          name = _this$state.name,\n          email = _this$state.email,\n          count = _this$state.count,\n          navs = _this$state.navs;\n\n      var _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          firebase = _this$props.firebase,\n          firebaseChange = _this$props.firebaseChange,\n          attributes = _objectWithoutProperties(_this$props, [\"dispatch\", \"firebase\", \"firebaseChange\"]);\n\n      return __jsx(Dropdown.Uncontrolled, attributes, __jsx(Widget13, {\n        dropdown: true,\n        variant: \"flat-primary\"\n      }, __jsx(Widget13.Text, null, \"Hi \", __jsx(\"strong\", null, \"User\")), __jsx(Widget13.Avatar, {\n        variant: \"info\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faUserAlt\n      }))), __jsx(Dropdown.Menu, {\n        wide: true,\n        right: true,\n        animated: true,\n        className: \"overflow-hidden py-0\"\n      }, __jsx(Portlet, {\n        scroll: true,\n        className: \"border-0\"\n      }, __jsx(Portlet.Header, {\n        className: \"bg-primary rounded-0\"\n      }, __jsx(RichList.Item, {\n        className: \"w-100 p-0\"\n      }, __jsx(RichList.Addon, {\n        addonType: \"prepend\"\n      }, __jsx(WidgetAvatar, null)), __jsx(RichList.Content, null, __jsx(RichList.Title, {\n        className: \"text-white\",\n        children: name\n      }), __jsx(RichList.Subtitle, {\n        className: \"text-white\",\n        children: email\n      })), __jsx(RichList.Addon, {\n        addonType: \"append\"\n      }, __jsx(Badge, {\n        variant: \"warning\",\n        shape: \"square\",\n        size: \"lg\",\n        children: count\n      })))), __jsx(Portlet.Body, {\n        className: \"p-0\"\n      }, __jsx(GridNav, {\n        flush: true,\n        action: true,\n        noRounded: true\n      }, navs.map(function (nav, index) {\n        return __jsx(GridNav.Row, {\n          key: index\n        }, nav.map(function (data, index) {\n          var Icon = data.icon,\n              title = data.title;\n          return __jsx(GridNav.Item, {\n            key: index,\n            icon: __jsx(Icon, null),\n            children: title\n          });\n        }));\n      }))), __jsx(Portlet.Footer, {\n        bordered: true,\n        className: \"rounded-0\"\n      }, __jsx(Button, {\n        variant: \"label-danger\",\n        onClick: this.handleSignOut\n      }, \"Sign out\")))));\n    }\n  }]);\n\n  return HeaderUser;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    firebase: state.firebase\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    firebaseChange: firebaseChange\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderUser);","map":null,"metadata":{},"sourceType":"module"}