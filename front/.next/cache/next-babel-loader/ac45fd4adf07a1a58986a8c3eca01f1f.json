{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\modules\\\\components\\\\Input.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, warnOnce, tagPropType, refPropType } from \"./utils\";\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  innerRef: refPropType,\n  plainText: PropTypes.bool,\n  invalid: PropTypes.bool,\n  valid: PropTypes.bool,\n  addon: PropTypes.bool,\n  size: PropTypes.oneOf([\"lg\", \"sm\"]),\n  type: PropTypes.string,\n  tag: tagPropType\n};\nconst defaultProps = {\n  type: \"text\"\n};\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getRef = this.getRef.bind(this);\n    this.focus = this.focus.bind(this);\n  }\n\n  getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  }\n\n  focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  }\n\n  render() {\n    let _this$props = this.props,\n        {\n      className,\n      cssModule,\n      plainText,\n      innerRef,\n      invalid,\n      valid,\n      addon,\n      size,\n      type,\n      tag\n    } = _this$props,\n        attributes = _objectWithoutProperties(_this$props, [\"className\", \"cssModule\", \"plainText\", \"innerRef\", \"invalid\", \"valid\", \"addon\", \"size\", \"type\", \"tag\"]);\n\n    const checkInput = [\"radio\", \"checkbox\"].indexOf(type) > -1;\n    const isNotaNumber = new RegExp(\"\\\\D\", \"g\");\n    const fileInput = type === \"file\";\n    const textareaInput = type === \"textarea\";\n    const selectInput = type === \"select\";\n    const rangeInput = type === \"range\";\n    let Tag = tag || (selectInput || textareaInput ? type : \"input\");\n    let formControlClass = \"form-control\";\n\n    if (plainText) {\n      formControlClass = `${formControlClass}-plaintext`;\n      Tag = tag || \"input\";\n    } else if (fileInput) {\n      formControlClass = `${formControlClass}-file`;\n    } else if (rangeInput) {\n      formControlClass = `${formControlClass}-range`;\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = \"form-check-input\";\n      }\n    }\n\n    const classes = mapToCssModules(classNames(formControlClass, size ? `form-control-${size}` : false, invalid && \"is-invalid\", valid && \"is-valid\", className), cssModule);\n\n    if (Tag === \"input\" || tag && typeof tag === \"function\") {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plainText || type === \"select\" || typeof Tag !== \"string\" || Tag === \"select\")) {\n      warnOnce(`Input with a type of \"${type}\" cannot have children. Please use \"value\"/\"defaultValue\" instead.`);\n      delete attributes.children;\n    }\n\n    return __jsx(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 12\n      }\n    }));\n  }\n\n}\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/modules/components/Input.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","warnOnce","tagPropType","refPropType","propTypes","className","string","cssModule","object","children","node","innerRef","plainText","bool","invalid","valid","addon","size","oneOf","type","tag","defaultProps","Input","Component","constructor","props","getRef","bind","focus","ref","render","attributes","checkInput","indexOf","isNotaNumber","RegExp","fileInput","textareaInput","selectInput","rangeInput","Tag","formControlClass","classes"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, warnOnce, tagPropType, refPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  innerRef: refPropType,\n  plainText: PropTypes.bool,\n  invalid: PropTypes.bool,\n  valid: PropTypes.bool,\n  addon: PropTypes.bool,\n  size: PropTypes.oneOf([\"lg\", \"sm\"]),\n  type: PropTypes.string,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  type: \"text\"\n}\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props)\n    this.getRef = this.getRef.bind(this)\n    this.focus = this.focus.bind(this)\n  }\n\n  getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref)\n    }\n    this.ref = ref\n  }\n\n  focus() {\n    if (this.ref) {\n      this.ref.focus()\n    }\n  }\n\n  render() {\n    let {\n      className,\n      cssModule,\n      plainText,\n      innerRef,\n      invalid,\n      valid,\n      addon,\n      size,\n      type,\n      tag,\n      ...attributes\n    } = this.props\n\n    const checkInput = [\"radio\", \"checkbox\"].indexOf(type) > -1\n    const isNotaNumber = new RegExp(\"\\\\D\", \"g\")\n\n    const fileInput = type === \"file\"\n    const textareaInput = type === \"textarea\"\n    const selectInput = type === \"select\"\n    const rangeInput = type === \"range\"\n    let Tag = tag || (selectInput || textareaInput ? type : \"input\")\n\n    let formControlClass = \"form-control\"\n\n    if (plainText) {\n      formControlClass = `${formControlClass}-plaintext`\n      Tag = tag || \"input\"\n    } else if (fileInput) {\n      formControlClass = `${formControlClass}-file`\n    } else if (rangeInput) {\n      formControlClass = `${formControlClass}-range`\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null\n      } else {\n        formControlClass = \"form-check-input\"\n      }\n    }\n\n    const classes = mapToCssModules(\n      classNames(\n        formControlClass,\n        size ? `form-control-${size}` : false,\n        invalid && \"is-invalid\",\n        valid && \"is-valid\",\n        className\n      ),\n      cssModule\n    )\n\n    if (Tag === \"input\" || (tag && typeof tag === \"function\")) {\n      attributes.type = type\n    }\n\n    if (\n      attributes.children &&\n      !(plainText || type === \"select\" || typeof Tag !== \"string\" || Tag === \"select\")\n    ) {\n      warnOnce(\n        `Input with a type of \"${type}\" cannot have children. Please use \"value\"/\"defaultValue\" instead.`\n      )\n      delete attributes.children\n    }\n\n    return <Tag {...attributes} ref={innerRef} className={classes} aria-invalid={invalid} />\n  }\n}\n\nInput.propTypes = propTypes\nInput.defaultProps = defaultProps\n\nexport default Input\n"]},"metadata":{},"sourceType":"module"}