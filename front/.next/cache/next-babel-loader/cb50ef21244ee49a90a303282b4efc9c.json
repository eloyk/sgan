{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { Popper } from \"react-popper\";\nimport { DropdownContext } from \"./DropdownContext\";\nimport { mapToCssModules, tagPropType } from \"./utils\";\nconst defaultProps = {\n  flip: true,\n  tag: \"div\"\n};\nconst noFlipModifier = {\n  flip: {\n    enabled: false\n  }\n};\nconst directionPositionMap = {\n  up: \"top\",\n  left: \"left\",\n  right: \"right\",\n  down: \"bottom\"\n};\n\nclass DropdownMenu extends React.Component {\n  render() {\n    const _this$props = this.props,\n          {\n      positionFixed,\n      className,\n      cssModule,\n      modifiers,\n      animated,\n      persist,\n      right,\n      flip,\n      wide,\n      tag\n    } = _this$props,\n          attrs = _objectWithoutProperties(_this$props, [\"positionFixed\", \"className\", \"cssModule\", \"modifiers\", \"animated\", \"persist\", \"right\", \"flip\", \"wide\", \"tag\"]);\n\n    const classes = mapToCssModules(classNames(\"dropdown-menu\", {\n      \"dropdown-menu-animated\": animated,\n      \"dropdown-menu-right\": right,\n      \"dropdown-menu-wide\": wide,\n      show: this.context.isOpen\n    }, className), cssModule);\n    const Tag = tag;\n\n    if (persist || this.context.isOpen) {\n      const position1 = directionPositionMap[this.context.direction] || \"bottom\";\n      const position2 = right ? \"end\" : \"start\";\n      const poperPlacement = `${position1}-${position2}`;\n      const poperModifiers = !flip ? _objectSpread(_objectSpread({}, modifiers), noFlipModifier) : modifiers;\n      const popperPositionFixed = !!positionFixed;\n      return __jsx(Popper, {\n        placement: poperPlacement,\n        modifiers: poperModifiers,\n        positionFixed: popperPositionFixed\n      }, ({\n        ref,\n        style,\n        placement\n      }) => __jsx(Tag, _extends({\n        tabIndex: \"-1\",\n        role: \"menu\",\n        ref: ref,\n        style: style\n      }, attrs, {\n        \"aria-hidden\": !this.context.isOpen,\n        className: classes,\n        \"x-placement\": placement\n      })));\n    }\n\n    return __jsx(Tag, _extends({\n      tabIndex: \"-1\",\n      role: \"menu\"\n    }, attrs, {\n      \"aria-hidden\": !this.context.isOpen,\n      className: classes,\n      \"x-placement\": attrs.placement\n    }));\n  }\n\n}\n\nDropdownMenu.defaultProps = defaultProps;\nDropdownMenu.contextType = DropdownContext;\nexport default DropdownMenu;","map":null,"metadata":{},"sourceType":"module"}