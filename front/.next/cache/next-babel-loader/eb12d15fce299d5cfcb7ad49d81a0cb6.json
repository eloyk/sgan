{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Button, Tooltip, ButtonGroup } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\n\nfunction HeaderAction() {\n  return __jsx(React.Fragment, null, __jsx(HeaderActionRadio, null), __jsx(HeaderActionFullscreen, {\n    className: \"ml-2\"\n  }));\n}\n\nvar HeaderActionRadio = /*#__PURE__*/function (_React$Component) {\n  _inherits(HeaderActionRadio, _React$Component);\n\n  var _super = _createSuper(HeaderActionRadio);\n\n  function HeaderActionRadio() {\n    var _this;\n\n    _classCallCheck(this, HeaderActionRadio);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      // Default active button\n      buttonActive: \"today\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (id) {\n      _this.setState({\n        buttonActive: id\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(HeaderActionRadio, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(ButtonGroup, this.props, __jsx(Button, {\n        active: this.state.buttonActive === \"today\",\n        onClick: function onClick() {\n          return _this2.handleClick(\"today\");\n        },\n        variant: \"flat-primary\"\n      }, \"Today\"), __jsx(Button, {\n        active: this.state.buttonActive === \"week\",\n        onClick: function onClick() {\n          return _this2.handleClick(\"week\");\n        },\n        variant: \"flat-primary\"\n      }, \"Week\"), __jsx(Button, {\n        active: this.state.buttonActive === \"month\",\n        onClick: function onClick() {\n          return _this2.handleClick(\"month\");\n        },\n        variant: \"flat-primary\"\n      }, \"Month\"));\n    }\n  }]);\n\n  return HeaderActionRadio;\n}(React.Component);\n\nvar HeaderActionFullscreen = /*#__PURE__*/function (_React$Component2) {\n  _inherits(HeaderActionFullscreen, _React$Component2);\n\n  var _super2 = _createSuper(HeaderActionFullscreen);\n\n  function HeaderActionFullscreen() {\n    var _this3;\n\n    _classCallCheck(this, HeaderActionFullscreen);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _super2.call.apply(_super2, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this3), \"state\", {\n      fullscreenActive: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this3), \"handleClick\", function () {\n      if (_this3.state.fullscreenActive) {\n        // Exit from fullscreen mode\n        document.exitFullscreen();\n      } else {\n        // Activating fullscreen mode\n        document.documentElement.requestFullscreen();\n      }\n    });\n\n    return _this3;\n  }\n\n  _createClass(HeaderActionFullscreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      var fullscreenClass = \"fullscreen-active\";\n\n      document.onfullscreenchange = function () {\n        // Check whether fullscreen mode is activated\n        if (document.fullscreenElement) {\n          // Set the state and add the class to the body element\n          _this4.setState({\n            fullscreenActive: true\n          }, function () {\n            document.body.classList.add(fullscreenClass);\n          });\n        } else {\n          // Set the state and remove the class to the body element\n          _this4.setState({\n            fullscreenActive: false\n          }, function () {\n            document.body.classList.remove(fullscreenClass);\n          });\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Button, _extends({\n        icon: true,\n        id: \"fullscreenTrigger\",\n        variant: \"label-info\",\n        onClick: this.handleClick\n      }, this.props), __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faExpand,\n        className: \"fullscreen-icon-expand\"\n      }), __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faCompress,\n        className: \"fullscreen-icon-compress\"\n      })), __jsx(Tooltip.Uncontrolled, {\n        placement: \"left\",\n        target: \"fullscreenTrigger\"\n      }, \"Toggle fullscreen\"));\n    }\n  }]);\n\n  return HeaderActionFullscreen;\n}(React.Component);\n\nexport default HeaderAction;","map":null,"metadata":{},"sourceType":"module"}