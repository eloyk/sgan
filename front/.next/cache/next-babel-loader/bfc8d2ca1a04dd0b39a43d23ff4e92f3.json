{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\modules\\\\components\\\\CustomFileInput.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, refPropType } from \"./utils\";\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: refPropType,\n  onChange: PropTypes.func,\n  invalid: PropTypes.bool,\n  htmlFor: PropTypes.string,\n  valid: PropTypes.bool,\n  label: PropTypes.node,\n  size: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\n\nclass CustomFileInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: null\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    let input = e.target;\n    let {\n      onChange\n    } = this.props;\n    let files = this.getSelectedFiles(input);\n\n    if (typeof onChange === \"function\") {\n      onChange(...arguments);\n    }\n\n    this.setState({\n      files\n    });\n  }\n\n  getSelectedFiles(input) {\n    let {\n      multiple\n    } = this.props;\n\n    if (multiple && input.files) {\n      let files = [].slice.call(input.files);\n      return files.map(file => file.name).join(\", \");\n    }\n\n    if (input.value.indexOf(\"fakepath\") !== -1) {\n      let parts = input.value.split(\"\\\\\");\n      return parts[parts.length - 1];\n    }\n\n    return input.value;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      dataBrowse,\n      cssModule,\n      className,\n      innerRef,\n      onChange,\n      children,\n      invalid,\n      htmlFor,\n      hidden,\n      label,\n      size,\n      valid,\n      type\n    } = _this$props,\n          attributes = _objectWithoutProperties(_this$props, [\"dataBrowse\", \"cssModule\", \"className\", \"innerRef\", \"onChange\", \"children\", \"invalid\", \"htmlFor\", \"hidden\", \"label\", \"size\", \"valid\", \"type\"]);\n\n    const customClass = mapToCssModules(classNames(className, \"custom-file\"), cssModule);\n    const validationClassNames = mapToCssModules(classNames(invalid && \"is-invalid\", valid && \"is-valid\"), cssModule);\n    const labelHtmlFor = htmlFor || attributes.id;\n    const {\n      files\n    } = this.state;\n    return __jsx(\"div\", {\n      className: customClass,\n      hidden: hidden || false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, __jsx(\"input\", _extends({\n      type: \"file\"\n    }, attributes, {\n      ref: innerRef,\n      \"aria-invalid\": invalid,\n      className: classNames(validationClassNames, mapToCssModules(\"custom-file-input\", cssModule)),\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    })), __jsx(\"label\", {\n      className: mapToCssModules(\"custom-file-label\", cssModule),\n      htmlFor: labelHtmlFor,\n      \"data-browse\": dataBrowse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, files || label || \"Choose file\"), children);\n  }\n\n}\n\nCustomFileInput.propTypes = propTypes;\nexport default CustomFileInput;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/modules/components/CustomFileInput.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","refPropType","propTypes","className","string","cssModule","object","children","oneOfType","node","array","func","innerRef","onChange","invalid","bool","htmlFor","valid","label","size","id","number","isRequired","CustomFileInput","Component","constructor","props","state","files","bind","e","input","target","getSelectedFiles","arguments","setState","multiple","slice","call","map","file","name","join","value","indexOf","parts","split","length","render","dataBrowse","hidden","type","attributes","customClass","validationClassNames","labelHtmlFor"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, refPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: refPropType,\n  onChange: PropTypes.func,\n  invalid: PropTypes.bool,\n  htmlFor: PropTypes.string,\n  valid: PropTypes.bool,\n  label: PropTypes.node,\n  size: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n}\n\nclass CustomFileInput extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      files: null\n    }\n\n    this.onChange = this.onChange.bind(this)\n  }\n\n  onChange(e) {\n    let input = e.target\n    let { onChange } = this.props\n    let files = this.getSelectedFiles(input)\n\n    if (typeof onChange === \"function\") {\n      onChange(...arguments)\n    }\n\n    this.setState({ files })\n  }\n\n  getSelectedFiles(input) {\n    let { multiple } = this.props\n\n    if (multiple && input.files) {\n      let files = [].slice.call(input.files)\n\n      return files.map(file => file.name).join(\", \")\n    }\n\n    if (input.value.indexOf(\"fakepath\") !== -1) {\n      let parts = input.value.split(\"\\\\\")\n\n      return parts[parts.length - 1]\n    }\n\n    return input.value\n  }\n\n  render() {\n    const {\n      dataBrowse,\n      cssModule,\n      className,\n      innerRef,\n      onChange,\n      children,\n      invalid,\n      htmlFor,\n      hidden,\n      label,\n      size,\n      valid,\n      type,\n      ...attributes\n    } = this.props\n\n    const customClass = mapToCssModules(classNames(className, \"custom-file\"), cssModule)\n\n    const validationClassNames = mapToCssModules(\n      classNames(invalid && \"is-invalid\", valid && \"is-valid\"),\n      cssModule\n    )\n\n    const labelHtmlFor = htmlFor || attributes.id\n    const { files } = this.state\n\n    return (\n      <div className={customClass} hidden={hidden || false}>\n        <input\n          type=\"file\"\n          {...attributes}\n          ref={innerRef}\n          aria-invalid={invalid}\n          className={classNames(\n            validationClassNames,\n            mapToCssModules(\"custom-file-input\", cssModule)\n          )}\n          onChange={this.onChange}\n        />\n        <label\n          className={mapToCssModules(\"custom-file-label\", cssModule)}\n          htmlFor={labelHtmlFor}\n          data-browse={dataBrowse}\n        >\n          {files || label || \"Choose file\"}\n        </label>\n        {children}\n      </div>\n    )\n  }\n}\n\nCustomFileInput.propTypes = propTypes\n\nexport default CustomFileInput\n"]},"metadata":{},"sourceType":"module"}