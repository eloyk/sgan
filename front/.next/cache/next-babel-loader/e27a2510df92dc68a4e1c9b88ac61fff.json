{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\components\\\\layout\\\\part\\\\HeaderChat.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Chat, Input, Avatar, Button, Marker, Portlet, Dropdown, RichList, InputGroup } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as RegularIcon from \"@fortawesome/free-regular-svg-icons\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport SimpleBar from \"simplebar\";\n\nclass HeaderChat extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"bodyRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"state\", {\n      name: \"Garrett Winters\",\n      title: \"UX Designer\",\n      avatar: () => __jsx(Avatar, {\n        display: true,\n        circle: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, __jsx(\"img\", {\n        src: \"/images/avatar/blank.webp\",\n        alt: \"Avatar image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      })),\n      conversation: [{\n        align: \"left\",\n        time: \"3 min ago\",\n        bubbles: [{\n          variant: \"primary\",\n          content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n        }, {\n          variant: \"primary\",\n          content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n        }]\n      }, {\n        align: \"right\",\n        time: \"2 min ago\",\n        bubbles: [{\n          variant: false,\n          content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n        }]\n      }, {\n        align: \"left\",\n        time: \"1 min ago\",\n        bubbles: [{\n          variant: \"primary\",\n          content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n        }]\n      }]\n    });\n\n    _defineProperty(this, \"onToggle\", (e, opened) => {\n      // Initialize custom scrollbar\n      if (opened) {\n        new SimpleBar(this.bodyRef.current);\n      }\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      variant\n    } = _this$props,\n          attributes = _objectWithoutProperties(_this$props, [\"variant\"]);\n\n    const {\n      name,\n      title,\n      avatar: UserAvatar\n    } = this.state;\n    const count = this.state.conversation.length;\n    return __jsx(Dropdown.Uncontrolled, _extends({\n      onToggle: this.onToggle\n    }, attributes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }), __jsx(Dropdown.Toggle, {\n      icon: true,\n      variant: variant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: RegularIcon.faComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), count > 0 ? __jsx(Button.Marker, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, __jsx(Marker, {\n      type: \"dot\",\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    })) : null), __jsx(Dropdown.Menu, {\n      right: true,\n      wide: true,\n      animated: true,\n      className: \"overflow-hidden py-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, __jsx(Portlet, {\n      scroll: true,\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, __jsx(Portlet.Header, {\n      bordered: true,\n      className: \"rounded-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, __jsx(RichList.Item, {\n      className: \"w-100 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, __jsx(RichList.Addon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, __jsx(UserAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    })), __jsx(RichList.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, __jsx(RichList.Title, {\n      children: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }), __jsx(RichList.Subtitle, {\n      children: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    })))), __jsx(Portlet.Body, {\n      innerRef: this.bodyRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, __jsx(Chat, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, this.state.conversation.map((conversation, index) => __jsx(Chat.Item, {\n      key: index,\n      align: conversation.align,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, __jsx(Chat.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, conversation.bubbles.map((bubble, index) => bubble.variant ? __jsx(Chat.Bubble, {\n      key: index,\n      variant: bubble.variant,\n      children: bubble.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 27\n      }\n    }) : __jsx(Chat.Bubble, {\n      key: index,\n      children: bubble.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 27\n      }\n    })), __jsx(Chat.Time, {\n      children: conversation.time,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }\n    })))))), __jsx(Portlet.Footer, {\n      bordered: true,\n      className: \"rounded-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      type: \"text\",\n      placeholder: \"Type...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }), __jsx(InputGroup.Addon, {\n      addonType: \"append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      icon: true,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faPaperPlane,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }))))))));\n  }\n\n}\n\nexport default HeaderChat;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/components/layout/part/HeaderChat.jsx"],"names":["Chat","Input","Avatar","Button","Marker","Portlet","Dropdown","RichList","InputGroup","FontAwesomeIcon","RegularIcon","SolidIcon","SimpleBar","HeaderChat","React","Component","createRef","name","title","avatar","conversation","align","time","bubbles","variant","content","e","opened","bodyRef","current","render","props","attributes","UserAvatar","state","count","length","onToggle","faComments","map","index","bubble","faPaperPlane"],"mappings":"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","sourcesContent":["import {\n  Chat,\n  Input,\n  Avatar,\n  Button,\n  Marker,\n  Portlet,\n  Dropdown,\n  RichList,\n  InputGroup\n} from \"@panely/components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport * as RegularIcon from \"@fortawesome/free-regular-svg-icons\"\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\"\nimport SimpleBar from \"simplebar\"\n\nclass HeaderChat extends React.Component {\n  bodyRef = React.createRef()\n\n  state = {\n    name: \"Garrett Winters\",\n    title: \"UX Designer\",\n    avatar: () => (\n      <Avatar display circle>\n        <img src=\"/images/avatar/blank.webp\" alt=\"Avatar image\" />\n      </Avatar>\n    ),\n    conversation: [\n      {\n        align: \"left\",\n        time: \"3 min ago\",\n        bubbles: [\n          {\n            variant: \"primary\",\n            content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n          },\n          {\n            variant: \"primary\",\n            content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n          }\n        ]\n      },\n      {\n        align: \"right\",\n        time: \"2 min ago\",\n        bubbles: [\n          {\n            variant: false,\n            content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n          }\n        ]\n      },\n      {\n        align: \"left\",\n        time: \"1 min ago\",\n        bubbles: [\n          {\n            variant: \"primary\",\n            content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n          }\n        ]\n      }\n    ]\n  }\n\n  onToggle = (e, opened) => {\n    // Initialize custom scrollbar\n    if (opened) {\n      new SimpleBar(this.bodyRef.current)\n    }\n  }\n\n  render() {\n    const { variant, ...attributes } = this.props\n    const { name, title, avatar: UserAvatar } = this.state\n    const count = this.state.conversation.length\n\n    return (\n      <Dropdown.Uncontrolled onToggle={this.onToggle} {...attributes}>\n        <Dropdown.Toggle icon variant={variant}>\n          <FontAwesomeIcon icon={RegularIcon.faComments} />\n          {count > 0 ? (\n            <Button.Marker>\n              <Marker type=\"dot\" variant=\"success\" />\n            </Button.Marker>\n          ) : null}\n        </Dropdown.Toggle>\n        <Dropdown.Menu right wide animated className=\"overflow-hidden py-0\">\n          {/* BEGIN Portlet */}\n          <Portlet scroll className=\"border-0\">\n            <Portlet.Header bordered className=\"rounded-0\">\n              {/* BEGIN Rich List */}\n              <RichList.Item className=\"w-100 p-0\">\n                <RichList.Addon addonType=\"prepend\">\n                  <UserAvatar />\n                </RichList.Addon>\n                <RichList.Content>\n                  <RichList.Title children={name} />\n                  <RichList.Subtitle children={title} />\n                </RichList.Content>\n              </RichList.Item>\n              {/* END Rich List */}\n            </Portlet.Header>\n            <Portlet.Body innerRef={this.bodyRef}>\n              {/* BEGIN Chat */}\n              <Chat>\n                {this.state.conversation.map((conversation, index) => (\n                  <Chat.Item key={index} align={conversation.align}>\n                    <Chat.Content>\n                      {conversation.bubbles.map((bubble, index) =>\n                        bubble.variant ? (\n                          <Chat.Bubble\n                            key={index}\n                            variant={bubble.variant}\n                            children={bubble.content}\n                          />\n                        ) : (\n                          <Chat.Bubble key={index} children={bubble.content} />\n                        )\n                      )}\n                      <Chat.Time children={conversation.time} />\n                    </Chat.Content>\n                  </Chat.Item>\n                ))}\n              </Chat>\n              {/* END Chat */}\n            </Portlet.Body>\n            <Portlet.Footer bordered className=\"rounded-0\">\n              {/* BEGIN Input Group */}\n              <InputGroup>\n                <Input type=\"text\" placeholder=\"Type...\" />\n                <InputGroup.Addon addonType=\"append\">\n                  <Button icon variant=\"primary\">\n                    <FontAwesomeIcon icon={SolidIcon.faPaperPlane} />\n                  </Button>\n                </InputGroup.Addon>\n              </InputGroup>\n              {/* END Input Group */}\n            </Portlet.Footer>\n          </Portlet>\n          {/* END Portlet */}\n        </Dropdown.Menu>\n      </Dropdown.Uncontrolled>\n    )\n  }\n}\n\nexport default HeaderChat\n"]},"metadata":{},"sourceType":"module"}