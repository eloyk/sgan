{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\Spinner.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType } from \"./utils\";\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string,\n  variant: PropTypes.string,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  tag: tagPropType\n};\nconst defaultProps = {\n  children: \"Loading...\",\n  type: \"border\",\n  tag: \"span\"\n};\n\nconst Spinner = props => {\n  const {\n    className,\n    cssModule,\n    children,\n    variant,\n    type,\n    size,\n    tag: Tag\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"children\", \"variant\", \"type\", \"size\", \"tag\"]);\n\n  const classes = mapToCssModules(classNames(`spinner-${type}`, {\n    [`spinner-${type}-${size}`]: size,\n    [`text-${variant}`]: variant\n  }, className), cssModule);\n  const contentClasses = mapToCssModules(\"sr-only\", cssModule);\n  return __jsx(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), children && __jsx(\"span\", {\n    className: contentClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 20\n    }\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/Spinner.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","propTypes","className","string","cssModule","object","children","variant","type","size","tag","defaultProps","Spinner","props","Tag","attributes","classes","contentClasses"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,SAA7C;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEL,SAAS,CAACM,MADL;AAEhBC,EAAAA,SAAS,EAAEP,SAAS,CAACQ,MAFL;AAGhBC,EAAAA,QAAQ,EAAET,SAAS,CAACM,MAHJ;AAIhBI,EAAAA,OAAO,EAAEV,SAAS,CAACM,MAJH;AAKhBK,EAAAA,IAAI,EAAEX,SAAS,CAACM,MALA;AAMhBM,EAAAA,IAAI,EAAEZ,SAAS,CAACM,MANA;AAOhBO,EAAAA,GAAG,EAAEV;AAPW,CAAlB;AAUA,MAAMW,YAAY,GAAG;AACnBL,EAAAA,QAAQ,EAAE,YADS;AAEnBE,EAAAA,IAAI,EAAE,QAFa;AAGnBE,EAAAA,GAAG,EAAE;AAHc,CAArB;;AAMA,MAAME,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAM;AAAEX,IAAAA,SAAF;AAAaE,IAAAA,SAAb;AAAwBE,IAAAA,QAAxB;AAAkCC,IAAAA,OAAlC;AAA2CC,IAAAA,IAA3C;AAAiDC,IAAAA,IAAjD;AAAuDC,IAAAA,GAAG,EAAEI;AAA5D,MAAmFD,KAAzF;AAAA,QAA0EE,UAA1E,4BAAyFF,KAAzF;;AAEA,QAAMG,OAAO,GAAGjB,eAAe,CAC7BD,UAAU,CACP,WAAUU,IAAK,EADR,EAER;AACE,KAAE,WAAUA,IAAK,IAAGC,IAAK,EAAzB,GAA6BA,IAD/B;AAEE,KAAE,QAAOF,OAAQ,EAAjB,GAAqBA;AAFvB,GAFQ,EAMRL,SANQ,CADmB,EAS7BE,SAT6B,CAA/B;AAWA,QAAMa,cAAc,GAAGlB,eAAe,CAAC,SAAD,EAAYK,SAAZ,CAAtC;AAEA,SACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAC;AAAV,KAAuBW,UAAvB;AAAmC,IAAA,SAAS,EAAEC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGV,QAAQ,IAAI;AAAM,IAAA,SAAS,EAAEW,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCX,QAAlC,CADf,CADF;AAKD,CArBD;;AAuBAM,OAAO,CAACX,SAAR,GAAoBA,SAApB;AACAW,OAAO,CAACD,YAAR,GAAuBA,YAAvB;AAEA,eAAeC,OAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string,\n  variant: PropTypes.string,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  children: \"Loading...\",\n  type: \"border\",\n  tag: \"span\"\n}\n\nconst Spinner = props => {\n  const { className, cssModule, children, variant, type, size, tag: Tag, ...attributes } = props\n\n  const classes = mapToCssModules(\n    classNames(\n      `spinner-${type}`,\n      {\n        [`spinner-${type}-${size}`]: size,\n        [`text-${variant}`]: variant\n      },\n      className\n    ),\n    cssModule\n  )\n  const contentClasses = mapToCssModules(\"sr-only\", cssModule)\n\n  return (\n    <Tag role=\"status\" {...attributes} className={classes}>\n      {children && <span className={contentClasses}>{children}</span>}\n    </Tag>\n  )\n}\n\nSpinner.propTypes = propTypes\nSpinner.defaultProps = defaultProps\n\nexport default Spinner\n"]},"metadata":{},"sourceType":"module"}