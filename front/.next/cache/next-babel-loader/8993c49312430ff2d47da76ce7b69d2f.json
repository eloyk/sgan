{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\InputGroupAddon.jsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType } from \"./utils\";\nimport InputGroupText from \"./InputGroupText\";\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  addonType: PropTypes.oneOf([\"prepend\", \"append\"]).isRequired,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: \"div\"\n};\n\nvar InputGroupAddon = function InputGroupAddon(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      addonType = props.addonType,\n      Tag = props.tag,\n      attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"children\", \"addonType\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(\"input-group-\".concat(addonType), className), cssModule); // Convenience to assist with transition\n\n  if (typeof children === \"string\") {\n    return __jsx(Tag, _extends({}, attributes, {\n      className: classes,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }), __jsx(InputGroupText, {\n      children: children,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return __jsx(Tag, _extends({}, attributes, {\n    className: classes,\n    children: children,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }));\n};\n\n_c = InputGroupAddon;\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\nexport default InputGroupAddon;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputGroupAddon\");","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/InputGroupAddon.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","InputGroupText","propTypes","className","string","cssModule","object","children","node","addonType","oneOf","isRequired","tag","defaultProps","InputGroupAddon","props","Tag","attributes","classes"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,SAA7C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEN,SAAS,CAACO,MADL;AAEhBC,EAAAA,SAAS,EAAER,SAAS,CAACS,MAFL;AAGhBC,EAAAA,QAAQ,EAAEV,SAAS,CAACW,IAHJ;AAIhBC,EAAAA,SAAS,EAAEZ,SAAS,CAACa,KAAV,CAAgB,CAAC,SAAD,EAAY,QAAZ,CAAhB,EAAuCC,UAJlC;AAKhBC,EAAAA,GAAG,EAAEZ;AALW,CAAlB;AAQA,IAAMa,YAAY,GAAG;AACnBD,EAAAA,GAAG,EAAE;AADc,CAArB;;AAIA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAAA,MACvBZ,SADuB,GACgDY,KADhD,CACvBZ,SADuB;AAAA,MACZE,SADY,GACgDU,KADhD,CACZV,SADY;AAAA,MACDE,QADC,GACgDQ,KADhD,CACDR,QADC;AAAA,MACSE,SADT,GACgDM,KADhD,CACSN,SADT;AAAA,MACyBO,GADzB,GACgDD,KADhD,CACoBH,GADpB;AAAA,MACiCK,UADjC,4BACgDF,KADhD;;AAG/B,MAAMG,OAAO,GAAGnB,eAAe,CAACD,UAAU,uBAAgBW,SAAhB,GAA6BN,SAA7B,CAAX,EAAoDE,SAApD,CAA/B,CAH+B,CAK/B;;AACA,MAAI,OAAOE,QAAP,KAAoB,QAAxB,EAAkC;AAChC,WACE,MAAC,GAAD,eAASU,UAAT;AAAqB,MAAA,SAAS,EAAEC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,MAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEX,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,SAAO,MAAC,GAAD,eAASU,UAAT;AAAqB,IAAA,SAAS,EAAEC,OAAhC;AAAyC,IAAA,QAAQ,EAAEX,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAfD;;KAAMO,e;AAiBNA,eAAe,CAACZ,SAAhB,GAA4BA,SAA5B;AACAY,eAAe,CAACD,YAAhB,GAA+BA,YAA/B;AAEA,eAAeC,eAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType } from \"./utils\"\nimport InputGroupText from \"./InputGroupText\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  addonType: PropTypes.oneOf([\"prepend\", \"append\"]).isRequired,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  tag: \"div\"\n}\n\nconst InputGroupAddon = props => {\n  const { className, cssModule, children, addonType, tag: Tag, ...attributes } = props\n\n  const classes = mapToCssModules(classNames(`input-group-${addonType}`, className), cssModule)\n\n  // Convenience to assist with transition\n  if (typeof children === \"string\") {\n    return (\n      <Tag {...attributes} className={classes}>\n        <InputGroupText children={children} />\n      </Tag>\n    )\n  }\n\n  return <Tag {...attributes} className={classes} children={children} />\n}\n\nInputGroupAddon.propTypes = propTypes\nInputGroupAddon.defaultProps = defaultProps\n\nexport default InputGroupAddon\n"]},"metadata":{},"sourceType":"module"}