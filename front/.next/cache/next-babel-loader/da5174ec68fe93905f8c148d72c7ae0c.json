{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Row, Col, Form, Label, Button, Tooltip, Portlet, Container, DemoWrapper } from \"@panely/components\";\nimport { pageChangeHeaderTitle, breadcrumbChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport withLayout from \"components/layout/withLayout\"; //import withAuth from \"components/firebase/firebaseWithAuth\"\n\nimport Head from \"next/head\";\n\nclass TooltipPage extends React.Component {\n  componentDidMount() {\n    // Set header title\n    this.props.pageChangeHeaderTitle(\"Tooltip\"); // Set breadcrumb data\n\n    this.props.breadcrumbChange([{\n      text: \"Dashboard\",\n      link: \"/\"\n    }, {\n      text: \"Elements\"\n    }, {\n      text: \"Base\"\n    }, {\n      text: \"Tooltip\",\n      link: \"/elements/base/tooltip\"\n    }]);\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Tooltip | Panely\")), __jsx(Container, {\n      fluid: true\n    }, __jsx(Row, null, __jsx(Col, {\n      xs: \"12\"\n    }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Tooltip examples\")), __jsx(Portlet.Body, null, __jsx(Form.Group, {\n      row: true\n    }, __jsx(Label, {\n      sm: \"4\",\n      lg: \"3\",\n      className: \"text-muted text-sm-right\"\n    }, \"Basic tooltip\"), __jsx(Col, {\n      sm: \"8\",\n      lg: \"9\"\n    }, __jsx(DemoWrapper, null, __jsx(TooltipControlled, null), __jsx(Button, {\n      id: \"tooltip2\",\n      className: \"ml-2\"\n    }, \"Uncontrolled\"), __jsx(Tooltip.Uncontrolled, {\n      target: \"tooltip2\"\n    }, \"Tooltip content\")))), __jsx(Form.Group, {\n      row: true\n    }, __jsx(Label, {\n      sm: \"4\",\n      lg: \"3\",\n      className: \"text-muted text-sm-right\"\n    }, \"Placements\"), __jsx(Col, {\n      sm: \"8\",\n      lg: \"9\"\n    }, __jsx(DemoWrapper, null, __jsx(Button, {\n      id: \"tooltip3\"\n    }, \"Top\"), \" \", __jsx(Button, {\n      id: \"tooltip4\"\n    }, \"Bottom\"), \" \", __jsx(Button, {\n      id: \"tooltip5\"\n    }, \"Right\"), \" \", __jsx(Button, {\n      id: \"tooltip6\"\n    }, \"Left\"), __jsx(Tooltip.Uncontrolled, {\n      placement: \"top\",\n      target: \"tooltip3\"\n    }, \"Top\"), __jsx(Tooltip.Uncontrolled, {\n      placement: \"bottom\",\n      target: \"tooltip4\"\n    }, \"Bottom\"), __jsx(Tooltip.Uncontrolled, {\n      placement: \"right\",\n      target: \"tooltip5\"\n    }, \"Right\"), __jsx(Tooltip.Uncontrolled, {\n      placement: \"left\",\n      target: \"tooltip6\"\n    }, \"Left\")), __jsx(\"p\", {\n      className: \"mb-0 mt-2\"\n    }, \"Set \", __jsx(\"code\", null, \"placement\"), \" property with \", __jsx(\"code\", null, \"top|bottom|right|left\"), \" \", \"to change tooltip placement\"))), __jsx(Form.Group, {\n      row: true\n    }, __jsx(Label, {\n      sm: \"4\",\n      lg: \"3\",\n      className: \"text-muted text-sm-right\"\n    }, \"HTML Content\"), __jsx(Col, {\n      sm: \"8\",\n      lg: \"9\"\n    }, __jsx(Button, {\n      id: \"tooltip7\"\n    }, \"Hover me\"), __jsx(Tooltip.Uncontrolled, {\n      target: \"tooltip7\"\n    }, \"content \", __jsx(\"b\", null, \"bold\"), \" and \", __jsx(\"em\", null, \"italic\")), __jsx(\"p\", {\n      className: \"mb-0 mt-2\"\n    }, \"You can put HTML content inside tooltip elements\"))), __jsx(Form.Group, {\n      row: true,\n      className: \"mb-0\"\n    }, __jsx(Label, {\n      sm: \"4\",\n      lg: \"3\",\n      className: \"text-muted text-sm-right\"\n    }, \"Trigger on click\"), __jsx(Col, {\n      sm: \"8\",\n      lg: \"9\"\n    }, __jsx(Button, {\n      id: \"tooltip8\"\n    }, \"Click me\"), __jsx(Tooltip.Uncontrolled, {\n      trigger: \"click\",\n      target: \"tooltip8\"\n    }, \"Tooltip content\"), __jsx(\"p\", {\n      className: \"mb-0 mt-2\"\n    }, \"Change tooltip trigger to focus\")))))))));\n  }\n\n} // Controlled tooltip example\n\n\nclass TooltipControlled extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isOpen: false\n    });\n\n    _defineProperty(this, \"toggle\", () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Button, {\n      id: \"tooltip1\"\n    }, \"Controlled\"), __jsx(Tooltip, {\n      target: \"tooltip1\",\n      isOpen: this.state.isOpen,\n      toggle: this.toggle\n    }, \"Tooltip content\"));\n  }\n\n}\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle,\n    breadcrumbChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withLayout(TooltipPage));","map":null,"metadata":{},"sourceType":"module"}