{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\";\nconst defaultProps = {\n  responsiveTag: \"div\",\n  tag: \"table\"\n};\n\nconst Table = props => {\n  const {\n    responsiveTag: ResponsiveTag,\n    responsive,\n    className,\n    cssModule,\n    borderless,\n    bordered,\n    innerRef,\n    variant,\n    striped,\n    hover,\n    small,\n    dark,\n    tag: Tag\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"responsiveTag\", \"responsive\", \"className\", \"cssModule\", \"borderless\", \"bordered\", \"innerRef\", \"variant\", \"striped\", \"hover\", \"small\", \"dark\", \"tag\"]);\n\n  const classes = mapToCssModules(classNames(\"table\", {\n    [`table-${variant}`]: variant,\n    \"table-borderless\": borderless,\n    \"table-bordered\": bordered,\n    \"table-striped\": striped,\n    \"table-hover\": hover,\n    \"table-dark\": dark,\n    \"table-sm\": small\n  }, className), cssModule);\n\n  const table = __jsx(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    const responsiveClassName = mapToCssModules(responsive === true ? \"table-responsive\" : `table-responsive-${responsive}`, cssModule);\n    return __jsx(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.defaultProps = defaultProps;\nexport default Table;","map":null,"metadata":{},"sourceType":"module"}