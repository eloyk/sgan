{"ast":null,"code":"import absoluteUrl from \"next-absolute-url\";\nimport nookies from \"nookies\";\nimport fetch from \"isomorphic-unfetch\";\n\nasync function firebaseVerifyCookie(ctx) {\n  // Get cookies\n  const cookies = nookies.get(ctx); // Get absolute origin url\n\n  const {\n    origin\n  } = absoluteUrl(ctx.req); // Try to verify firebase token via API\n\n  return await fetch(origin + \"/api/auth\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      token: cookies.token\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return false;\n    }\n  });\n}\n\nexport default firebaseVerifyCookie;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/components/firebase/firebaseVerifyCookie.jsx"],"names":["absoluteUrl","nookies","fetch","firebaseVerifyCookie","ctx","cookies","get","origin","req","method","headers","body","JSON","stringify","token","then","res","ok","json"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,eAAeC,oBAAf,CAAoCC,GAApC,EAAyC;AACvC;AACA,QAAMC,OAAO,GAAGJ,OAAO,CAACK,GAAR,CAAYF,GAAZ,CAAhB,CAFuC,CAGvC;;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAaP,WAAW,CAACI,GAAG,CAACI,GAAL,CAA9B,CAJuC,CAMvC;;AACA,SAAO,MAAMN,KAAK,CAACK,MAAM,GAAG,WAAV,EAAuB;AACvCE,IAAAA,MAAM,EAAE,MAD+B;AAEvCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF8B;AAKvCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,KAAK,EAAET,OAAO,CAACS;AAAjB,KAAf;AALiC,GAAvB,CAAL,CAMVC,IANU,CAMLC,GAAG,IAAI;AACb,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF,GAZY,CAAb;AAaD;;AAED,eAAef,oBAAf","sourcesContent":["import absoluteUrl from \"next-absolute-url\"\nimport nookies from \"nookies\"\nimport fetch from \"isomorphic-unfetch\"\n\nasync function firebaseVerifyCookie(ctx) {\n  // Get cookies\n  const cookies = nookies.get(ctx)\n  // Get absolute origin url\n  const { origin } = absoluteUrl(ctx.req)\n\n  // Try to verify firebase token via API\n  return await fetch(origin + \"/api/auth\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ token: cookies.token })\n  }).then(res => {\n    if (res.ok) {\n      return res.json()\n    } else {\n      return false\n    }\n  })\n}\n\nexport default firebaseVerifyCookie\n"]},"metadata":{},"sourceType":"module"}