{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Chat, Input, Avatar, Button, Marker, Portlet, Dropdown, RichList, InputGroup } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as RegularIcon from \"@fortawesome/free-regular-svg-icons\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport SimpleBar from \"simplebar\";\n\nclass HeaderChat extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"bodyRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"state\", {\n      name: \"Garrett Winters\",\n      title: \"UX Designer\",\n      avatar: () => __jsx(Avatar, {\n        display: true,\n        circle: true\n      }, __jsx(\"img\", {\n        src: \"/images/avatar/blank.webp\",\n        alt: \"Avatar image\"\n      })),\n      conversation: [{\n        align: \"left\",\n        time: \"3 min ago\",\n        bubbles: [{\n          variant: \"primary\",\n          content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n        }, {\n          variant: \"primary\",\n          content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n        }]\n      }, {\n        align: \"right\",\n        time: \"2 min ago\",\n        bubbles: [{\n          variant: false,\n          content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n        }]\n      }, {\n        align: \"left\",\n        time: \"1 min ago\",\n        bubbles: [{\n          variant: \"primary\",\n          content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n        }]\n      }]\n    });\n\n    _defineProperty(this, \"onToggle\", (e, opened) => {\n      // Initialize custom scrollbar\n      if (opened) {\n        new SimpleBar(this.bodyRef.current);\n      }\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      variant\n    } = _this$props,\n          attributes = _objectWithoutProperties(_this$props, [\"variant\"]);\n\n    const {\n      name,\n      title,\n      avatar: UserAvatar\n    } = this.state;\n    const count = this.state.conversation.length;\n    return __jsx(Dropdown.Uncontrolled, _extends({\n      onToggle: this.onToggle\n    }, attributes), __jsx(Dropdown.Toggle, {\n      icon: true,\n      variant: variant\n    }, __jsx(FontAwesomeIcon, {\n      icon: RegularIcon.faComments\n    }), count > 0 ? __jsx(Button.Marker, null, __jsx(Marker, {\n      type: \"dot\",\n      variant: \"success\"\n    })) : null), __jsx(Dropdown.Menu, {\n      right: true,\n      wide: true,\n      animated: true,\n      className: \"overflow-hidden py-0\"\n    }, __jsx(Portlet, {\n      scroll: true,\n      className: \"border-0\"\n    }, __jsx(Portlet.Header, {\n      bordered: true,\n      className: \"rounded-0\"\n    }, __jsx(RichList.Item, {\n      className: \"w-100 p-0\"\n    }, __jsx(RichList.Addon, {\n      addonType: \"prepend\"\n    }, __jsx(UserAvatar, null)), __jsx(RichList.Content, null, __jsx(RichList.Title, {\n      children: name\n    }), __jsx(RichList.Subtitle, {\n      children: title\n    })))), __jsx(Portlet.Body, {\n      innerRef: this.bodyRef\n    }, __jsx(Chat, null, this.state.conversation.map((conversation, index) => __jsx(Chat.Item, {\n      key: index,\n      align: conversation.align\n    }, __jsx(Chat.Content, null, conversation.bubbles.map((bubble, index) => bubble.variant ? __jsx(Chat.Bubble, {\n      key: index,\n      variant: bubble.variant,\n      children: bubble.content\n    }) : __jsx(Chat.Bubble, {\n      key: index,\n      children: bubble.content\n    })), __jsx(Chat.Time, {\n      children: conversation.time\n    })))))), __jsx(Portlet.Footer, {\n      bordered: true,\n      className: \"rounded-0\"\n    }, __jsx(InputGroup, null, __jsx(Input, {\n      type: \"text\",\n      placeholder: \"Type...\"\n    }), __jsx(InputGroup.Addon, {\n      addonType: \"append\"\n    }, __jsx(Button, {\n      icon: true,\n      variant: \"primary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faPaperPlane\n    }))))))));\n  }\n\n}\n\nexport default HeaderChat;","map":null,"metadata":{},"sourceType":"module"}