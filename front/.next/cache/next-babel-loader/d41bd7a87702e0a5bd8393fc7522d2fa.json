{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\Container.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType } from \"./utils\";\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType\n};\nconst defaultProps = {\n  tag: \"div\"\n};\n\nconst Container = props => {\n  const {\n    className,\n    cssModule,\n    fluid,\n    tag: Tag\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"fluid\", \"tag\"]);\n\n  let containerClass = \"container\";\n\n  if (fluid === true) {\n    containerClass = \"container-fluid\";\n  } else if (fluid) {\n    containerClass = `container-${fluid}`;\n  }\n\n  const classes = mapToCssModules(classNames(className, containerClass), cssModule);\n  return __jsx(Tag, _extends({}, attributes, {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }));\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\nexport default Container;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/Container.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","propTypes","className","string","cssModule","object","fluid","oneOfType","bool","tag","defaultProps","Container","props","Tag","attributes","containerClass","classes"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,SAA7C;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEL,SAAS,CAACM,MADL;AAEhBC,EAAAA,SAAS,EAAEP,SAAS,CAACQ,MAFL;AAGhBC,EAAAA,KAAK,EAAET,SAAS,CAACU,SAAV,CAAoB,CAACV,SAAS,CAACW,IAAX,EAAiBX,SAAS,CAACM,MAA3B,CAApB,CAHS;AAIhBM,EAAAA,GAAG,EAAET;AAJW,CAAlB;AAOA,MAAMU,YAAY,GAAG;AACnBD,EAAAA,GAAG,EAAE;AADc,CAArB;;AAIA,MAAME,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAEV,IAAAA,SAAF;AAAaE,IAAAA,SAAb;AAAwBE,IAAAA,KAAxB;AAA+BG,IAAAA,GAAG,EAAEI;AAApC,MAA2DD,KAAjE;AAAA,QAAkDE,UAAlD,4BAAiEF,KAAjE;;AAEA,MAAIG,cAAc,GAAG,WAArB;;AAEA,MAAIT,KAAK,KAAK,IAAd,EAAoB;AAClBS,IAAAA,cAAc,GAAG,iBAAjB;AACD,GAFD,MAEO,IAAIT,KAAJ,EAAW;AAChBS,IAAAA,cAAc,GAAI,aAAYT,KAAM,EAApC;AACD;;AAED,QAAMU,OAAO,GAAGjB,eAAe,CAACD,UAAU,CAACI,SAAD,EAAYa,cAAZ,CAAX,EAAwCX,SAAxC,CAA/B;AAEA,SAAO,MAAC,GAAD,eAASU,UAAT;AAAqB,IAAA,SAAS,EAAEE,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAdD;;AAgBAL,SAAS,CAACV,SAAV,GAAsBA,SAAtB;AACAU,SAAS,CAACD,YAAV,GAAyBA,YAAzB;AAEA,eAAeC,SAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  tag: \"div\"\n}\n\nconst Container = props => {\n  const { className, cssModule, fluid, tag: Tag, ...attributes } = props\n\n  let containerClass = \"container\"\n\n  if (fluid === true) {\n    containerClass = \"container-fluid\"\n  } else if (fluid) {\n    containerClass = `container-${fluid}`\n  }\n\n  const classes = mapToCssModules(classNames(className, containerClass), cssModule)\n\n  return <Tag {...attributes} className={classes} />\n}\n\nContainer.propTypes = propTypes\nContainer.defaultProps = defaultProps\n\nexport default Container\n"]},"metadata":{},"sourceType":"module"}