{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\modules\\\\components\\\\InputGroupAddon.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType } from \"./utils\";\nimport InputGroupText from \"./InputGroupText\";\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  addonType: PropTypes.oneOf([\"prepend\", \"append\"]).isRequired,\n  tag: tagPropType\n};\nconst defaultProps = {\n  tag: \"div\"\n};\n\nconst InputGroupAddon = props => {\n  const {\n    className,\n    cssModule,\n    children,\n    addonType,\n    tag: Tag\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"children\", \"addonType\", \"tag\"]);\n\n  const classes = mapToCssModules(classNames(`input-group-${addonType}`, className), cssModule); // Convenience to assist with transition\n\n  if (typeof children === \"string\") {\n    return __jsx(Tag, _extends({}, attributes, {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }), __jsx(InputGroupText, {\n      children: children,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return __jsx(Tag, _extends({}, attributes, {\n    className: classes,\n    children: children,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }));\n};\n\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\nexport default InputGroupAddon;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/modules/components/InputGroupAddon.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","InputGroupText","propTypes","className","string","cssModule","object","children","node","addonType","oneOf","isRequired","tag","defaultProps","InputGroupAddon","props","Tag","attributes","classes"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,SAA7C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEN,SAAS,CAACO,MADL;AAEhBC,EAAAA,SAAS,EAAER,SAAS,CAACS,MAFL;AAGhBC,EAAAA,QAAQ,EAAEV,SAAS,CAACW,IAHJ;AAIhBC,EAAAA,SAAS,EAAEZ,SAAS,CAACa,KAAV,CAAgB,CAAC,SAAD,EAAY,QAAZ,CAAhB,EAAuCC,UAJlC;AAKhBC,EAAAA,GAAG,EAAEZ;AALW,CAAlB;AAQA,MAAMa,YAAY,GAAG;AACnBD,EAAAA,GAAG,EAAE;AADc,CAArB;;AAIA,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAM;AAAEZ,IAAAA,SAAF;AAAaE,IAAAA,SAAb;AAAwBE,IAAAA,QAAxB;AAAkCE,IAAAA,SAAlC;AAA6CG,IAAAA,GAAG,EAAEI;AAAlD,MAAyED,KAA/E;AAAA,QAAgEE,UAAhE,4BAA+EF,KAA/E;;AAEA,QAAMG,OAAO,GAAGnB,eAAe,CAACD,UAAU,CAAE,eAAcW,SAAU,EAA1B,EAA6BN,SAA7B,CAAX,EAAoDE,SAApD,CAA/B,CAH+B,CAK/B;;AACA,MAAI,OAAOE,QAAP,KAAoB,QAAxB,EAAkC;AAChC,WACE,MAAC,GAAD,eAASU,UAAT;AAAqB,MAAA,SAAS,EAAEC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,MAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEX,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,SAAO,MAAC,GAAD,eAASU,UAAT;AAAqB,IAAA,SAAS,EAAEC,OAAhC;AAAyC,IAAA,QAAQ,EAAEX,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAfD;;AAiBAO,eAAe,CAACZ,SAAhB,GAA4BA,SAA5B;AACAY,eAAe,CAACD,YAAhB,GAA+BA,YAA/B;AAEA,eAAeC,eAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType } from \"./utils\"\nimport InputGroupText from \"./InputGroupText\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  addonType: PropTypes.oneOf([\"prepend\", \"append\"]).isRequired,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  tag: \"div\"\n}\n\nconst InputGroupAddon = props => {\n  const { className, cssModule, children, addonType, tag: Tag, ...attributes } = props\n\n  const classes = mapToCssModules(classNames(`input-group-${addonType}`, className), cssModule)\n\n  // Convenience to assist with transition\n  if (typeof children === \"string\") {\n    return (\n      <Tag {...attributes} className={classes}>\n        <InputGroupText children={children} />\n      </Tag>\n    )\n  }\n\n  return <Tag {...attributes} className={classes} children={children} />\n}\n\nInputGroupAddon.propTypes = propTypes\nInputGroupAddon.defaultProps = defaultProps\n\nexport default InputGroupAddon\n"]},"metadata":{},"sourceType":"module"}