{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType, toNumber } from \"./utils\";\nconst defaultProps = {\n  value: 0,\n  style: {},\n  tag: \"div\",\n  min: 0,\n  max: 100\n};\n\nconst Progress = props => {\n  const {\n    barAriaValueText,\n    barAriaLabelledBy,\n    barClassName,\n    className,\n    cssModule,\n    children,\n    animated,\n    striped,\n    variant,\n    multi,\n    value,\n    style,\n    size,\n    min,\n    max,\n    bar,\n    tag: Tag\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"barAriaValueText\", \"barAriaLabelledBy\", \"barClassName\", \"className\", \"cssModule\", \"children\", \"animated\", \"striped\", \"variant\", \"multi\", \"value\", \"style\", \"size\", \"min\", \"max\", \"bar\", \"tag\"]);\n\n  const percent = toNumber(value) / toNumber(max) * 100;\n  const progressClasses = mapToCssModules(classNames(\"progress\", size ? `progress-${size}` : false, className), cssModule);\n  const progressBarClasses = mapToCssModules(classNames(\"progress-bar\", bar ? className || barClassName : barClassName, animated ? \"progress-bar-animated\" : false, variant ? `bg-${variant}` : false, striped || animated ? \"progress-bar-striped\" : false), cssModule);\n  const ProgressBar = multi ? children : __jsx(\"div\", {\n    style: {\n      width: `${percent}%`\n    },\n    className: progressBarClasses,\n    role: \"progressbar\",\n    \"aria-valuenow\": value,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuetext\": barAriaValueText,\n    \"aria-labelledby\": barAriaLabelledBy,\n    children: children\n  });\n\n  if (bar) {\n    return ProgressBar;\n  }\n\n  return __jsx(Tag, _extends({\n    style: style\n  }, attributes, {\n    className: progressClasses,\n    children: ProgressBar\n  }));\n};\n\nProgress.defaultProps = defaultProps;\nexport default Progress;","map":null,"metadata":{},"sourceType":"module"}