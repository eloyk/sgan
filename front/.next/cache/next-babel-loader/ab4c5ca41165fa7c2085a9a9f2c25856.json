{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\slick\\\\arrows.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport { canGoNext } from \"./utils/innerSliderUtils\";\nexport class PrevArrow extends React.PureComponent {\n  clickHandler(options, e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    this.props.clickHandler(options, e);\n  }\n\n  render() {\n    let prevClasses = {\n      \"slick-prev\": true,\n      btn: true,\n      \"btn-flat-primary\": true\n    };\n    let prevHandler = this.clickHandler.bind(this, {\n      message: \"previous\"\n    });\n\n    if (!this.props.infinite && (this.props.currentSlide === 0 || this.props.slideCount <= this.props.slidesToShow)) {\n      prevClasses[\"slick-disabled\"] = true;\n      prevHandler = null;\n    }\n\n    let prevArrowProps = {\n      key: \"0\",\n      \"data-role\": \"none\",\n      className: classnames(prevClasses),\n      style: {\n        display: \"block\"\n      },\n      onClick: prevHandler\n    };\n    let customProps = {\n      currentSlide: this.props.currentSlide,\n      slideCount: this.props.slideCount\n    };\n    let prevArrow;\n\n    if (this.props.prevArrow) {\n      prevArrow = /*#__PURE__*/React.cloneElement(this.props.prevArrow, _objectSpread(_objectSpread({}, prevArrowProps), customProps));\n    } else {\n      prevArrow = __jsx(\"button\", _extends({\n        key: \"0\",\n        type: \"button\"\n      }, prevArrowProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }), \" \", \"Previous\");\n    }\n\n    return prevArrow;\n  }\n\n}\nexport class NextArrow extends React.PureComponent {\n  clickHandler(options, e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    this.props.clickHandler(options, e);\n  }\n\n  render() {\n    let nextClasses = {\n      \"slick-next\": true,\n      btn: true,\n      \"btn-flat-primary\": true\n    };\n    let nextHandler = this.clickHandler.bind(this, {\n      message: \"next\"\n    });\n\n    if (!canGoNext(this.props)) {\n      nextClasses[\"slick-disabled\"] = true;\n      nextHandler = null;\n    }\n\n    let nextArrowProps = {\n      key: \"1\",\n      \"data-role\": \"none\",\n      className: classnames(nextClasses),\n      style: {\n        display: \"block\"\n      },\n      onClick: nextHandler\n    };\n    let customProps = {\n      currentSlide: this.props.currentSlide,\n      slideCount: this.props.slideCount\n    };\n    let nextArrow;\n\n    if (this.props.nextArrow) {\n      nextArrow = /*#__PURE__*/React.cloneElement(this.props.nextArrow, _objectSpread(_objectSpread({}, nextArrowProps), customProps));\n    } else {\n      nextArrow = __jsx(\"button\", _extends({\n        key: \"1\",\n        type: \"button\"\n      }, nextArrowProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }), \" \", \"Next\");\n    }\n\n    return nextArrow;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/slick/arrows.jsx"],"names":["React","classnames","canGoNext","PrevArrow","PureComponent","clickHandler","options","e","preventDefault","props","render","prevClasses","btn","prevHandler","bind","message","infinite","currentSlide","slideCount","slidesToShow","prevArrowProps","key","className","style","display","onClick","customProps","prevArrow","cloneElement","NextArrow","nextClasses","nextHandler","nextArrowProps","nextArrow"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport classnames from \"classnames\"\nimport { canGoNext } from \"./utils/innerSliderUtils\"\n\nexport class PrevArrow extends React.PureComponent {\n  clickHandler(options, e) {\n    if (e) {\n      e.preventDefault()\n    }\n    this.props.clickHandler(options, e)\n  }\n  render() {\n    let prevClasses = { \"slick-prev\": true, btn: true, \"btn-flat-primary\": true }\n    let prevHandler = this.clickHandler.bind(this, { message: \"previous\" })\n\n    if (\n      !this.props.infinite &&\n      (this.props.currentSlide === 0 || this.props.slideCount <= this.props.slidesToShow)\n    ) {\n      prevClasses[\"slick-disabled\"] = true\n      prevHandler = null\n    }\n\n    let prevArrowProps = {\n      key: \"0\",\n      \"data-role\": \"none\",\n      className: classnames(prevClasses),\n      style: { display: \"block\" },\n      onClick: prevHandler\n    }\n    let customProps = {\n      currentSlide: this.props.currentSlide,\n      slideCount: this.props.slideCount\n    }\n    let prevArrow\n\n    if (this.props.prevArrow) {\n      prevArrow = React.cloneElement(this.props.prevArrow, {\n        ...prevArrowProps,\n        ...customProps\n      })\n    } else {\n      prevArrow = (\n        <button key=\"0\" type=\"button\" {...prevArrowProps}>\n          {\" \"}\n          Previous\n        </button>\n      )\n    }\n\n    return prevArrow\n  }\n}\n\nexport class NextArrow extends React.PureComponent {\n  clickHandler(options, e) {\n    if (e) {\n      e.preventDefault()\n    }\n    this.props.clickHandler(options, e)\n  }\n  render() {\n    let nextClasses = { \"slick-next\": true, btn: true, \"btn-flat-primary\": true }\n    let nextHandler = this.clickHandler.bind(this, { message: \"next\" })\n\n    if (!canGoNext(this.props)) {\n      nextClasses[\"slick-disabled\"] = true\n      nextHandler = null\n    }\n\n    let nextArrowProps = {\n      key: \"1\",\n      \"data-role\": \"none\",\n      className: classnames(nextClasses),\n      style: { display: \"block\" },\n      onClick: nextHandler\n    }\n    let customProps = {\n      currentSlide: this.props.currentSlide,\n      slideCount: this.props.slideCount\n    }\n    let nextArrow\n\n    if (this.props.nextArrow) {\n      nextArrow = React.cloneElement(this.props.nextArrow, {\n        ...nextArrowProps,\n        ...customProps\n      })\n    } else {\n      nextArrow = (\n        <button key=\"1\" type=\"button\" {...nextArrowProps}>\n          {\" \"}\n          Next\n        </button>\n      )\n    }\n\n    return nextArrow\n  }\n}\n"]},"metadata":{},"sourceType":"module"}