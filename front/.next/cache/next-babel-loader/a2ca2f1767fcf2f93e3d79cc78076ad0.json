{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\CustomFileInput.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, refPropType } from \"./utils\";\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: refPropType,\n  onChange: PropTypes.func,\n  invalid: PropTypes.bool,\n  htmlFor: PropTypes.string,\n  valid: PropTypes.bool,\n  label: PropTypes.node,\n  size: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\n\nvar CustomFileInput = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomFileInput, _React$Component);\n\n  var _super = _createSuper(CustomFileInput);\n\n  function CustomFileInput(props) {\n    var _this;\n\n    _classCallCheck(this, CustomFileInput);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      files: null\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CustomFileInput, [{\n    key: \"onChange\",\n    value: function onChange(e) {\n      var input = e.target;\n      var onChange = this.props.onChange;\n      var files = this.getSelectedFiles(input);\n\n      if (typeof onChange === \"function\") {\n        onChange.apply(void 0, arguments);\n      }\n\n      this.setState({\n        files: files\n      });\n    }\n  }, {\n    key: \"getSelectedFiles\",\n    value: function getSelectedFiles(input) {\n      var multiple = this.props.multiple;\n\n      if (multiple && input.files) {\n        var files = [].slice.call(input.files);\n        return files.map(function (file) {\n          return file.name;\n        }).join(\", \");\n      }\n\n      if (input.value.indexOf(\"fakepath\") !== -1) {\n        var parts = input.value.split(\"\\\\\");\n        return parts[parts.length - 1];\n      }\n\n      return input.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          dataBrowse = _this$props.dataBrowse,\n          cssModule = _this$props.cssModule,\n          className = _this$props.className,\n          innerRef = _this$props.innerRef,\n          onChange = _this$props.onChange,\n          children = _this$props.children,\n          invalid = _this$props.invalid,\n          htmlFor = _this$props.htmlFor,\n          hidden = _this$props.hidden,\n          label = _this$props.label,\n          size = _this$props.size,\n          valid = _this$props.valid,\n          type = _this$props.type,\n          attributes = _objectWithoutProperties(_this$props, [\"dataBrowse\", \"cssModule\", \"className\", \"innerRef\", \"onChange\", \"children\", \"invalid\", \"htmlFor\", \"hidden\", \"label\", \"size\", \"valid\", \"type\"]);\n\n      var customClass = mapToCssModules(classNames(className, \"custom-file\"), cssModule);\n      var validationClassNames = mapToCssModules(classNames(invalid && \"is-invalid\", valid && \"is-valid\"), cssModule);\n      var labelHtmlFor = htmlFor || attributes.id;\n      var files = this.state.files;\n      return __jsx(\"div\", {\n        className: customClass,\n        hidden: hidden || false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }\n      }, __jsx(\"input\", _extends({\n        type: \"file\"\n      }, attributes, {\n        ref: innerRef,\n        \"aria-invalid\": invalid,\n        className: classNames(validationClassNames, mapToCssModules(\"custom-file-input\", cssModule)),\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      })), __jsx(\"label\", {\n        className: mapToCssModules(\"custom-file-label\", cssModule),\n        htmlFor: labelHtmlFor,\n        \"data-browse\": dataBrowse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, files || label || \"Choose file\"), children);\n    }\n  }]);\n\n  return CustomFileInput;\n}(React.Component);\n\nCustomFileInput.propTypes = propTypes;\nexport default CustomFileInput;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/CustomFileInput.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","refPropType","propTypes","className","string","cssModule","object","children","oneOfType","node","array","func","innerRef","onChange","invalid","bool","htmlFor","valid","label","size","id","number","isRequired","CustomFileInput","props","state","files","bind","e","input","target","getSelectedFiles","arguments","setState","multiple","slice","call","map","file","name","join","value","indexOf","parts","split","length","dataBrowse","hidden","type","attributes","customClass","validationClassNames","labelHtmlFor","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, refPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: refPropType,\n  onChange: PropTypes.func,\n  invalid: PropTypes.bool,\n  htmlFor: PropTypes.string,\n  valid: PropTypes.bool,\n  label: PropTypes.node,\n  size: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n}\n\nclass CustomFileInput extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      files: null\n    }\n\n    this.onChange = this.onChange.bind(this)\n  }\n\n  onChange(e) {\n    let input = e.target\n    let { onChange } = this.props\n    let files = this.getSelectedFiles(input)\n\n    if (typeof onChange === \"function\") {\n      onChange(...arguments)\n    }\n\n    this.setState({ files })\n  }\n\n  getSelectedFiles(input) {\n    let { multiple } = this.props\n\n    if (multiple && input.files) {\n      let files = [].slice.call(input.files)\n\n      return files.map(file => file.name).join(\", \")\n    }\n\n    if (input.value.indexOf(\"fakepath\") !== -1) {\n      let parts = input.value.split(\"\\\\\")\n\n      return parts[parts.length - 1]\n    }\n\n    return input.value\n  }\n\n  render() {\n    const {\n      dataBrowse,\n      cssModule,\n      className,\n      innerRef,\n      onChange,\n      children,\n      invalid,\n      htmlFor,\n      hidden,\n      label,\n      size,\n      valid,\n      type,\n      ...attributes\n    } = this.props\n\n    const customClass = mapToCssModules(classNames(className, \"custom-file\"), cssModule)\n\n    const validationClassNames = mapToCssModules(\n      classNames(invalid && \"is-invalid\", valid && \"is-valid\"),\n      cssModule\n    )\n\n    const labelHtmlFor = htmlFor || attributes.id\n    const { files } = this.state\n\n    return (\n      <div className={customClass} hidden={hidden || false}>\n        <input\n          type=\"file\"\n          {...attributes}\n          ref={innerRef}\n          aria-invalid={invalid}\n          className={classNames(\n            validationClassNames,\n            mapToCssModules(\"custom-file-input\", cssModule)\n          )}\n          onChange={this.onChange}\n        />\n        <label\n          className={mapToCssModules(\"custom-file-label\", cssModule)}\n          htmlFor={labelHtmlFor}\n          data-browse={dataBrowse}\n        >\n          {files || label || \"Choose file\"}\n        </label>\n        {children}\n      </div>\n    )\n  }\n}\n\nCustomFileInput.propTypes = propTypes\n\nexport default CustomFileInput\n"]},"metadata":{},"sourceType":"module"}