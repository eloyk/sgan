{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\components\\\\widgets\\\\Widget29.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Avatar, Portlet, Widget8, Widget10, Widget11 } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport Chart from \"@panely/apexcharts\";\n\nclass Widget29Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      highlight: \"87,123\",\n      title: \"Order received\",\n      avatar: () => __jsx(Widget8.Avatar, {\n        display: true,\n        circle: true,\n        variant: \"label-success\",\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 7\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faDollyFlatbed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      }))\n    });\n  }\n\n  render() {\n    const {\n      highlight,\n      title,\n      avatar: WidgetAvatar\n    } = this.state;\n    return __jsx(Portlet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, __jsx(Portlet.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, __jsx(Widget10.Item, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, __jsx(Widget10.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, __jsx(Widget10.Title, {\n      children: highlight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }), __jsx(Widget10.Subtitle, {\n      children: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    })), __jsx(Widget10.Addon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, __jsx(WidgetAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    })))), __jsx(Widget29Chart, {\n      theme: this.props.theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nclass Widget29Chart extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      // Chart options\n      options: {\n        theme: {\n          mode: this.props.theme,\n          palette: \"palette1\"\n        },\n        chart: {\n          sparkline: {\n            enabled: true\n          }\n        },\n        fill: {\n          type: \"solid\",\n          colors: [\"#4caf50\"],\n          opacity: 0.1\n        },\n        stroke: {\n          show: true,\n          colors: [\"#4caf50\"]\n        },\n        markers: {\n          colors: this.props.theme === \"dark\" ? \"#424242\" : \"#fff\",\n          strokeWidth: 4,\n          strokeColors: [\"#4caf50\"]\n        },\n        tooltip: {\n          marker: {\n            show: false\n          }\n        },\n        xaxis: {\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n          crosshairs: {\n            show: false\n          }\n        }\n      },\n      // Chart series data\n      series: [{\n        name: \"Order\",\n        data: [2000, 4000, 3600, 6200, 2800, 6400]\n      }]\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.theme !== prevProps.theme) {\n      let newState = this.state; // Change chart options\n\n      newState.options.theme = {\n        mode: this.props.theme,\n        palette: \"palette1\"\n      };\n      newState.options.markers.colors = this.props.theme === \"dark\" ? \"#424242\" : \"#fff\";\n      this.setState(newState);\n    }\n  }\n\n  render() {\n    const {\n      options,\n      series\n    } = this.state;\n    return __jsx(Widget11, {\n      bottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, __jsx(Chart, {\n      type: \"area\",\n      options: options,\n      series: series,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.page.theme\n  };\n}\n\nexport default connect(mapStateToProps)(Widget29Component);","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/components/widgets/Widget29.jsx"],"names":["Avatar","Portlet","Widget8","Widget10","Widget11","FontAwesomeIcon","connect","SolidIcon","Chart","Widget29Component","React","Component","highlight","title","avatar","faDollyFlatbed","render","WidgetAvatar","state","props","theme","Widget29Chart","options","mode","palette","chart","sparkline","enabled","fill","type","colors","opacity","stroke","show","markers","strokeWidth","strokeColors","tooltip","marker","xaxis","categories","crosshairs","series","name","data","componentDidUpdate","prevProps","newState","setState","mapStateToProps","page"],"mappings":"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","sourcesContent":["import { Avatar, Portlet, Widget8, Widget10, Widget11 } from \"@panely/components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { connect } from \"react-redux\"\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\"\nimport Chart from \"@panely/apexcharts\"\n\nclass Widget29Component extends React.Component {\n  state = {\n    highlight: \"87,123\",\n    title: \"Order received\",\n    avatar: () => (\n      <Widget8.Avatar display circle variant=\"label-success\" className=\"m-0\">\n        <FontAwesomeIcon icon={SolidIcon.faDollyFlatbed} />\n      </Widget8.Avatar>\n    )\n  }\n\n  render() {\n    const { highlight, title, avatar: WidgetAvatar } = this.state\n\n    return (\n      <Portlet>\n        <Portlet.Body>\n          {/* BEGIN Widget */}\n          <Widget10.Item className=\"p-0\">\n            <Widget10.Content>\n              <Widget10.Title children={highlight} />\n              <Widget10.Subtitle children={title} />\n            </Widget10.Content>\n            <Widget10.Addon>\n              <WidgetAvatar />\n            </Widget10.Addon>\n          </Widget10.Item>\n          {/* END Widget */}\n        </Portlet.Body>\n        <Widget29Chart theme={this.props.theme} />\n      </Portlet>\n    )\n  }\n}\n\nclass Widget29Chart extends React.Component {\n  state = {\n    // Chart options\n    options: {\n      theme: {\n        mode: this.props.theme,\n        palette: \"palette1\"\n      },\n      chart: {\n        sparkline: {\n          enabled: true\n        }\n      },\n      fill: {\n        type: \"solid\",\n        colors: [\"#4caf50\"],\n        opacity: 0.1\n      },\n      stroke: {\n        show: true,\n        colors: [\"#4caf50\"]\n      },\n      markers: {\n        colors: this.props.theme === \"dark\" ? \"#424242\" : \"#fff\",\n        strokeWidth: 4,\n        strokeColors: [\"#4caf50\"]\n      },\n      tooltip: {\n        marker: {\n          show: false\n        }\n      },\n      xaxis: {\n        categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n        crosshairs: {\n          show: false\n        }\n      }\n    },\n    // Chart series data\n    series: [\n      {\n        name: \"Order\",\n        data: [2000, 4000, 3600, 6200, 2800, 6400]\n      }\n    ]\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.theme !== prevProps.theme) {\n      let newState = this.state\n\n      // Change chart options\n      newState.options.theme = {\n        mode: this.props.theme,\n        palette: \"palette1\"\n      }\n      newState.options.markers.colors = this.props.theme === \"dark\" ? \"#424242\" : \"#fff\"\n\n      this.setState(newState)\n    }\n  }\n\n  render() {\n    const { options, series } = this.state\n\n    return (\n      <Widget11 bottom>\n        <Chart type=\"area\" options={options} series={series} height={200} />\n      </Widget11>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.page.theme\n  }\n}\n\nexport default connect(mapStateToProps)(Widget29Component)\n"]},"metadata":{},"sourceType":"module"}