{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType } from \"./utils\";\nconst defaultProps = {\n  children: \"Loading...\",\n  type: \"border\",\n  tag: \"span\"\n};\n\nconst Spinner = props => {\n  const {\n    className,\n    cssModule,\n    children,\n    variant,\n    type,\n    size,\n    tag: Tag\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"children\", \"variant\", \"type\", \"size\", \"tag\"]);\n\n  const classes = mapToCssModules(classNames(`spinner-${type}`, {\n    [`spinner-${type}-${size}`]: size,\n    [`text-${variant}`]: variant\n  }, className), cssModule);\n  const contentClasses = mapToCssModules(\"sr-only\", cssModule);\n  return __jsx(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && __jsx(\"span\", {\n    className: contentClasses\n  }, children));\n};\n\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","map":null,"metadata":{},"sourceType":"module"}