{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType } from \"./utils\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst defaultProps = {\n  tag: \"h5\",\n  wrapTag: \"div\",\n  closeAriaLabel: \"Close\"\n};\n\nconst ModalHeader = props => {\n  let closeButton;\n\n  const {\n    closeAriaLabel,\n    cssModule,\n    className,\n    children,\n    bordered,\n    wrapTag: WrapTag,\n    toggle,\n    close,\n    tag: Tag\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"closeAriaLabel\", \"cssModule\", \"className\", \"children\", \"bordered\", \"wrapTag\", \"toggle\", \"close\", \"tag\"]);\n\n  const classes = mapToCssModules(classNames(\"modal-header\", {\n    \"modal-header-bordered\": bordered\n  }, className), cssModule);\n  const closeButtonClasses = mapToCssModules(classNames(\"btn\", \"btn-icon\", \"btn-label-danger\"), cssModule);\n  const titleClasses = mapToCssModules(classNames(\"modal-title\"), cssModule);\n\n  if (!close && toggle) {\n    closeButton = __jsx(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: closeButtonClasses,\n      \"aria-label\": closeAriaLabel\n    }, __jsx(FontAwesomeIcon, {\n      icon: faTimes\n    }));\n  }\n\n  return __jsx(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), __jsx(Tag, {\n    className: titleClasses\n  }, children), close || closeButton);\n};\n\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","map":null,"metadata":{},"sourceType":"module"}