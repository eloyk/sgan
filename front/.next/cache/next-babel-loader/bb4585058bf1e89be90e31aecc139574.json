{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Row, Col, Button, Marker, Portlet, Container, DemoWrapper } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { pageChangeHeaderTitle, breadcrumbChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport withLayout from \"components/layout/withLayout\";\nimport withAuth from \"components/firebase/firebaseWithAuth\";\nimport Head from \"next/head\";\n\nvar MarkerPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(MarkerPage, _React$Component);\n\n  var _super = _createSuper(MarkerPage);\n\n  function MarkerPage() {\n    _classCallCheck(this, MarkerPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MarkerPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Set header title\n      this.props.pageChangeHeaderTitle(\"Marker\"); // Set breadcrumb data\n\n      this.props.breadcrumbChange([{\n        text: \"Dashboard\",\n        link: \"/\"\n      }, {\n        text: \"Elements\"\n      }, {\n        text: \"Base\"\n      }, {\n        text: \"Marker\",\n        link: \"/elements/base/marker\"\n      }]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Marker | Panely\")), __jsx(Container, {\n        fluid: true\n      }, __jsx(Row, null, __jsx(Col, {\n        xs: \"12\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Basic\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, __jsx(\"strong\", null, \"Marker\"), \" is component that you can use for marking something with shape and color, you can combine it with many components. Marker by default has 3 different shapes, like the example below. Change marker color by applying\", \" \", __jsx(\"code\", null, \"variant\"), \" property\"), __jsx(Row, null, __jsx(Col, {\n        md: \"4\"\n      }, __jsx(Portlet, {\n        className: \"mb-md-0\"\n      }, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Dot\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Apply \", __jsx(\"code\", null, \"type=\\\"dot\\\"\"), \" property for this shape\"), __jsx(DemoWrapper, null, __jsx(Marker, {\n        type: \"dot\",\n        variant: \"primary\"\n      }), \" \", __jsx(Marker, {\n        type: \"dot\",\n        variant: \"secondary\"\n      }), \" \", __jsx(Marker, {\n        type: \"dot\",\n        variant: \"info\"\n      }), \" \", __jsx(Marker, {\n        type: \"dot\",\n        variant: \"success\"\n      }), \" \", __jsx(Marker, {\n        type: \"dot\",\n        variant: \"warning\"\n      }), \" \", __jsx(Marker, {\n        type: \"dot\",\n        variant: \"danger\"\n      }), \" \", __jsx(Marker, {\n        type: \"dot\",\n        variant: \"dark\"\n      }), \" \", __jsx(Marker, {\n        type: \"dot\",\n        variant: \"light\"\n      }))))), __jsx(Col, {\n        md: \"4\"\n      }, __jsx(Portlet, {\n        className: \"mb-md-0\"\n      }, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Circle\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Apply \", __jsx(\"code\", null, \"type=\\\"circle\\\"\"), \" property for this shape\"), __jsx(DemoWrapper, null, __jsx(Marker, {\n        type: \"circle\",\n        variant: \"primary\"\n      }), \" \", __jsx(Marker, {\n        type: \"circle\",\n        variant: \"secondary\"\n      }), \" \", __jsx(Marker, {\n        type: \"circle\",\n        variant: \"info\"\n      }), \" \", __jsx(Marker, {\n        type: \"circle\",\n        variant: \"success\"\n      }), \" \", __jsx(Marker, {\n        type: \"circle\",\n        variant: \"warning\"\n      }), \" \", __jsx(Marker, {\n        type: \"circle\",\n        variant: \"danger\"\n      }), \" \", __jsx(Marker, {\n        type: \"circle\",\n        variant: \"dark\"\n      }), \" \", __jsx(Marker, {\n        type: \"circle\",\n        variant: \"light\"\n      }))))), __jsx(Col, {\n        md: \"4\"\n      }, __jsx(Portlet, {\n        className: \"mb-0\"\n      }, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Pill\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Apply \", __jsx(\"code\", null, \"type=\\\"pill\\\"\"), \" property for this shape\"), __jsx(DemoWrapper, null, __jsx(Marker, {\n        type: \"pill\",\n        variant: \"primary\"\n      }), \" \", __jsx(Marker, {\n        type: \"pill\",\n        variant: \"secondary\"\n      }), \" \", __jsx(Marker, {\n        type: \"pill\",\n        variant: \"info\"\n      }), \" \", __jsx(Marker, {\n        type: \"pill\",\n        variant: \"success\"\n      }), \" \", __jsx(Marker, {\n        type: \"pill\",\n        variant: \"warning\"\n      }), \" \", __jsx(Marker, {\n        type: \"pill\",\n        variant: \"danger\"\n      }), \" \", __jsx(Marker, {\n        type: \"pill\",\n        variant: \"dark\"\n      }), \" \", __jsx(Marker, {\n        type: \"pill\",\n        variant: \"light\"\n      })))))))))), __jsx(Row, null, __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, {\n        className: \"mb-md-0\"\n      }, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Sizing\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Change marker size to smaller or larger by setting \", __jsx(\"code\", null, \"size\"), \" property with \", __jsx(\"code\", null, \"sm|lg\")), __jsx(DemoWrapper, null, __jsx(Marker, {\n        type: \"dot\",\n        variant: \"primary\",\n        size: \"sm\"\n      }), \" \", __jsx(Marker, {\n        type: \"dot\",\n        variant: \"success\"\n      }), \" \", __jsx(Marker, {\n        type: \"dot\",\n        variant: \"danger\",\n        size: \"lg\"\n      }), \" \", __jsx(Marker, {\n        type: \"circle\",\n        variant: \"primary\",\n        size: \"sm\"\n      }), \" \", __jsx(Marker, {\n        type: \"circle\",\n        variant: \"success\"\n      }), \" \", __jsx(Marker, {\n        type: \"circle\",\n        variant: \"danger\",\n        size: \"lg\"\n      }), \" \", __jsx(Marker, {\n        type: \"pill\",\n        variant: \"primary\",\n        size: \"sm\"\n      }), \" \", __jsx(Marker, {\n        type: \"pill\",\n        variant: \"success\"\n      }), \" \", __jsx(Marker, {\n        type: \"pill\",\n        variant: \"danger\",\n        size: \"lg\"\n      }))))), __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, {\n        className: \"mb-md-0\"\n      }, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Usage\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"You can use marker element together with several elements.\"), __jsx(Button, {\n        variant: \"primary\"\n      }, \"Button\", __jsx(Button.Marker, null, __jsx(Marker, {\n        type: \"dot\",\n        variant: \"success\"\n      }))), \" \", __jsx(Button, {\n        icon: true,\n        variant: \"primary\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faStar\n      }), __jsx(Button.Marker, null, __jsx(Marker, {\n        type: \"dot\",\n        variant: \"success\"\n      })))))))));\n    }\n  }]);\n\n  return MarkerPage;\n}(React.Component);\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle: pageChangeHeaderTitle,\n    breadcrumbChange: breadcrumbChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withAuth(withLayout(MarkerPage)));","map":null,"metadata":{},"sourceType":"module"}