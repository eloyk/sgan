{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\NavItem.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\";\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: refPropType,\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n  onClick: PropTypes.func,\n  href: PropTypes.any,\n  tag: tagPropType\n};\nconst defaultProps = {\n  href: \"#\",\n  tag: \"a\"\n};\n\nclass NavLink extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.href === \"#\") {\n      e.preventDefault();\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  }\n\n  render() {\n    let _this$props = this.props,\n        {\n      className,\n      cssModule,\n      innerRef,\n      disabled,\n      active,\n      onClick,\n      href,\n      tag: Tag\n    } = _this$props,\n        attributes = _objectWithoutProperties(_this$props, [\"className\", \"cssModule\", \"innerRef\", \"disabled\", \"active\", \"onClick\", \"href\", \"tag\"]);\n\n    const classes = mapToCssModules(classNames(\"nav-item\", \"nav-link\", {\n      disabled: disabled,\n      active: active\n    }, className), cssModule);\n    return __jsx(Tag, _extends({}, attributes, {\n      href: href,\n      ref: innerRef,\n      onClick: this.onClick,\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nNavLink.propTypes = propTypes;\nNavLink.defaultProps = defaultProps;\nexport default NavLink;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/NavItem.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","refPropType","propTypes","className","string","cssModule","object","innerRef","disabled","bool","active","onClick","func","href","any","tag","defaultProps","NavLink","Component","constructor","props","bind","e","preventDefault","render","Tag","attributes","classes"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,WAAvC,QAA0D,SAA1D;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEN,SAAS,CAACO,MADL;AAEhBC,EAAAA,SAAS,EAAER,SAAS,CAACS,MAFL;AAGhBC,EAAAA,QAAQ,EAAEN,WAHM;AAIhBO,EAAAA,QAAQ,EAAEX,SAAS,CAACY,IAJJ;AAKhBC,EAAAA,MAAM,EAAEb,SAAS,CAACY,IALF;AAMhBE,EAAAA,OAAO,EAAEd,SAAS,CAACe,IANH;AAOhBC,EAAAA,IAAI,EAAEhB,SAAS,CAACiB,GAPA;AAQhBC,EAAAA,GAAG,EAAEf;AARW,CAAlB;AAWA,MAAMgB,YAAY,GAAG;AACnBH,EAAAA,IAAI,EAAE,GADa;AAEnBE,EAAAA,GAAG,EAAE;AAFc,CAArB;;AAKA,MAAME,OAAN,SAAsBrB,KAAK,CAACsB,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKT,OAAL,GAAe,KAAKA,OAAL,CAAaU,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDV,EAAAA,OAAO,CAACW,CAAD,EAAI;AACT,QAAI,KAAKF,KAAL,CAAWZ,QAAf,EAAyB;AACvBc,MAAAA,CAAC,CAACC,cAAF;AACA;AACD;;AAED,QAAI,KAAKH,KAAL,CAAWP,IAAX,KAAoB,GAAxB,EAA6B;AAC3BS,MAAAA,CAAC,CAACC,cAAF;AACD;;AAED,QAAI,KAAKH,KAAL,CAAWT,OAAf,EAAwB;AACtB,WAAKS,KAAL,CAAWT,OAAX,CAAmBW,CAAnB;AACD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AACP,sBAUI,KAAKJ,KAVT;AAAA,QAAI;AACFjB,MAAAA,SADE;AAEFE,MAAAA,SAFE;AAGFE,MAAAA,QAHE;AAIFC,MAAAA,QAJE;AAKFE,MAAAA,MALE;AAMFC,MAAAA,OANE;AAOFE,MAAAA,IAPE;AAQFE,MAAAA,GAAG,EAAEU;AARH,KAAJ;AAAA,QASKC,UATL;;AAYA,UAAMC,OAAO,GAAG5B,eAAe,CAC7BD,UAAU,CACR,UADQ,EAER,UAFQ,EAGR;AACEU,MAAAA,QAAQ,EAAEA,QADZ;AAEEE,MAAAA,MAAM,EAAEA;AAFV,KAHQ,EAORP,SAPQ,CADmB,EAU7BE,SAV6B,CAA/B;AAaA,WACE,MAAC,GAAD,eAASqB,UAAT;AAAqB,MAAA,IAAI,EAAEb,IAA3B;AAAiC,MAAA,GAAG,EAAEN,QAAtC;AAAgD,MAAA,OAAO,EAAE,KAAKI,OAA9D;AAAuE,MAAA,SAAS,EAAEgB,OAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAGD;;AAnDmC;;AAsDtCV,OAAO,CAACf,SAAR,GAAoBA,SAApB;AACAe,OAAO,CAACD,YAAR,GAAuBA,YAAvB;AAEA,eAAeC,OAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: refPropType,\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n  onClick: PropTypes.func,\n  href: PropTypes.any,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  href: \"#\",\n  tag: \"a\"\n}\n\nclass NavLink extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.onClick = this.onClick.bind(this)\n  }\n\n  onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault()\n      return\n    }\n\n    if (this.props.href === \"#\") {\n      e.preventDefault()\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e)\n    }\n  }\n\n  render() {\n    let {\n      className,\n      cssModule,\n      innerRef,\n      disabled,\n      active,\n      onClick,\n      href,\n      tag: Tag,\n      ...attributes\n    } = this.props\n\n    const classes = mapToCssModules(\n      classNames(\n        \"nav-item\",\n        \"nav-link\",\n        {\n          disabled: disabled,\n          active: active\n        },\n        className\n      ),\n      cssModule\n    )\n\n    return (\n      <Tag {...attributes} href={href} ref={innerRef} onClick={this.onClick} className={classes} />\n    )\n  }\n}\n\nNavLink.propTypes = propTypes\nNavLink.defaultProps = defaultProps\n\nexport default NavLink\n"]},"metadata":{},"sourceType":"module"}