{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _transitionStatusToCl;\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { Transition } from \"react-transition-group\";\nimport { mapToCssModules, omit, pick, findDOMElements, defaultToggleEvents, addMultipleEventListeners, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from \"./utils\";\nvar omitKeys = [\"toggleEvents\", \"defaultOpen\"];\n\nvar defaultProps = _objectSpread(_objectSpread({}, Transition.defaultProps), {}, {\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: \"div\",\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _defineProperty(_transitionStatusToCl, TransitionStatuses.ENTERING, \"collapsing\"), _defineProperty(_transitionStatusToCl, TransitionStatuses.ENTERED, \"collapse show\"), _defineProperty(_transitionStatusToCl, TransitionStatuses.EXITING, \"collapsing\"), _defineProperty(_transitionStatusToCl, TransitionStatuses.EXITED, \"collapse\"), _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || \"collapse\";\n}\n\nfunction getHeight(node) {\n  return node.scrollHeight;\n}\n\nvar Collapse = /*#__PURE__*/function (_React$Component) {\n  _inherits(Collapse, _React$Component);\n\n  var _super = _createSuper(Collapse);\n\n  function Collapse(props) {\n    var _this;\n\n    _classCallCheck(this, Collapse);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      height: null\n    };\n    _this.onEntering = _this.onEntering.bind(_assertThisInitialized(_this));\n    _this.onEntered = _this.onEntered.bind(_assertThisInitialized(_this));\n    _this.onExiting = _this.onExiting.bind(_assertThisInitialized(_this));\n    _this.onExited = _this.onExited.bind(_assertThisInitialized(_this));\n    _this.onExit = _this.onExit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collapse, [{\n    key: \"onEntering\",\n    value: function onEntering(node, isAppearing) {\n      this.setState({\n        height: getHeight(node)\n      });\n      this.props.onEntering(node, isAppearing);\n    }\n  }, {\n    key: \"onEntered\",\n    value: function onEntered(node, isAppearing) {\n      this.setState({\n        height: null\n      });\n      this.props.onEntered(node, isAppearing);\n    }\n  }, {\n    key: \"onExit\",\n    value: function onExit(node) {\n      this.setState({\n        height: getHeight(node)\n      });\n      this.props.onExit(node);\n    }\n  }, {\n    key: \"onExiting\",\n    value: function onExiting(node) {\n      // getting this variable triggers a reflow\n      var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n      this.setState({\n        height: 0\n      });\n      this.props.onExiting(node);\n    }\n  }, {\n    key: \"onExited\",\n    value: function onExited(node) {\n      this.setState({\n        height: null\n      });\n      this.props.onExited(node);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          Tag = _this$props.tag,\n          isOpen = _this$props.isOpen,\n          className = _this$props.className,\n          navbar = _this$props.navbar,\n          cssModule = _this$props.cssModule,\n          children = _this$props.children,\n          innerRef = _this$props.innerRef,\n          otherProps = _objectWithoutProperties(_this$props, [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"]);\n\n      var height = this.state.height;\n      var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n      var childProps = omit(otherProps, TransitionPropTypeKeys);\n      return __jsx(Transition, _extends({}, transitionProps, {\n        \"in\": isOpen,\n        onEntering: this.onEntering,\n        onEntered: this.onEntered,\n        onExit: this.onExit,\n        onExiting: this.onExiting,\n        onExited: this.onExited\n      }), function (status) {\n        var collapseClass = getTransitionClass(status);\n        var classes = mapToCssModules(classNames(className, collapseClass, navbar && \"navbar-collapse\"), cssModule);\n        var style = height === null ? null : {\n          height: height\n        };\n        return __jsx(Tag, _extends({}, childProps, {\n          style: _objectSpread(_objectSpread({}, childProps.style), style),\n          className: classes,\n          ref: _this2.props.innerRef\n        }), children);\n      });\n    }\n  }]);\n\n  return Collapse;\n}(React.Component);\n\nvar UncontrolledCollapse = /*#__PURE__*/function (_React$Component2) {\n  _inherits(UncontrolledCollapse, _React$Component2);\n\n  var _super2 = _createSuper(UncontrolledCollapse);\n\n  function UncontrolledCollapse(props) {\n    var _this3;\n\n    _classCallCheck(this, UncontrolledCollapse);\n\n    _this3 = _super2.call(this, props);\n    _this3.togglers = null;\n    _this3.removeEventListeners = null;\n    _this3.toggle = _this3.toggle.bind(_assertThisInitialized(_this3));\n    _this3.state = {\n      isOpen: props.defaultOpen || false\n    };\n    return _this3;\n  }\n\n  _createClass(UncontrolledCollapse, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.togglers = findDOMElements(this.props.toggler);\n\n      if (this.togglers.length) {\n        this.removeEventListeners = addMultipleEventListeners(this.togglers, this.toggle, this.props.toggleEvents);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.togglers.length && this.removeEventListeners) {\n        this.removeEventListeners();\n      }\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(e) {\n      this.setState(function (_ref) {\n        var isOpen = _ref.isOpen;\n        return {\n          isOpen: !isOpen\n        };\n      });\n      e.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Collapse, _extends({\n        isOpen: this.state.isOpen\n      }, omit(this.props, omitKeys)));\n    }\n  }]);\n\n  return UncontrolledCollapse;\n}(React.Component);\n\nUncontrolledCollapse.defaultProps = {\n  toggleEvents: defaultToggleEvents\n};\nCollapse.defaultProps = defaultProps;\nCollapse.Uncontrolled = UncontrolledCollapse;\nexport default Collapse;","map":null,"metadata":{},"sourceType":"module"}