{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\pages\\\\login.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Form, Label, Input, Button, Portlet, Spinner, Container, CustomInput, FloatLabel, Widget12 } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { firebaseClient } from \"components/firebase/firebaseClient\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport * as yup from \"yup\";\nimport verifyCookie from \"components/firebase/firebaseVerifyCookie\";\nimport withLayout from \"components/layout/withLayout\";\nimport swalContent from \"sweetalert2-react-content\";\nimport Router from \"next/router\";\nimport Swal from \"@panely/sweetalert2\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport PAGE from \"config/page.config\"; // Use SweetAlert React Content library\n\nconst ReactSwal = swalContent(Swal); // Set SweetAlert options\n\nconst swal = ReactSwal.mixin({\n  customClass: {\n    confirmButton: \"btn btn-label-success btn-wide mx-1\",\n    cancelButton: \"btn btn-label-danger btn-wide mx-1\"\n  },\n  buttonsStyling: false\n});\n\nfunction LoginPage() {\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Login | Panely\")), __jsx(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    noGutters: true,\n    className: \"align-items-center justify-content-center h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    sm: \"8\",\n    md: \"6\",\n    lg: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(Portlet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(Portlet.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"text-center mt-2 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, __jsx(Widget12, {\n    display: true,\n    circle: true,\n    variant: \"label-primary\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: SolidIcon.faUserAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }))), __jsx(LoginForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })))))));\n}\n\nfunction LoginForm() {\n  // Loading state\n  const [loading, setLoading] = React.useState(false);\n  console.log(\"yo me ejecuto segundo\"); // Define Yup schema for form validation\n\n  const schema = yup.object().shape({\n    email: yup.string().email(\"Your email is not valid\").required(\"Please enter your email\"),\n    password: yup.string().min(6, \"Please enter at least 6 characters\").required(\"Please provide your password\")\n  });\n  const {\n    control,\n    handleSubmit,\n    errors\n  } = useForm({\n    // Apply Yup as resolver for react-hook-form\n    resolver: yupResolver(schema),\n    // Define the default values for all input forms\n    defaultValues: {\n      email: \"\",\n      password: \"\"\n    }\n  }); // Handle form submit event\n\n  const onSubmit = async ({\n    email,\n    password\n  }) => {\n    // Show loading indicator\n    setLoading(true);\n    Router.push(Router.query.redirect || PAGE.dashboardPagePath); // Trying to login with email and password with firebase\n    //await firebaseClient\n    //  .auth()\n    //  .signInWithEmailAndPassword(email, password)\n    //  .then(() => {\n    //    // Redirect to dashboard page\n    //    Router.push(Router.query.redirect || PAGE.dashboardPagePath)\n    //  })\n    //  .catch(err => {\n    //    // Show the error message if authentication is failed\n    //    swal.fire({ text: err.message, icon: \"error\" })\n    //  })\n    // Hide loading indicator\n\n    setLoading(false);\n  };\n\n  return __jsx(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, __jsx(FloatLabel, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, __jsx(Controller, {\n    as: Input,\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    size: \"lg\",\n    control: control,\n    invalid: Boolean(errors.email),\n    placeholder: \"Please insert your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }), __jsx(Label, {\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"Email\"), errors.email && __jsx(Form.Feedback, {\n    children: errors.email.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 28\n    }\n  }))), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, __jsx(FloatLabel, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, __jsx(Controller, {\n    as: Input,\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    size: \"lg\",\n    control: control,\n    invalid: Boolean(errors.password),\n    placeholder: \"Please insert your password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), __jsx(Label, {\n    for: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Password\"), errors.password && __jsx(Form.Feedback, {\n    children: errors.password.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 31\n    }\n  }))), __jsx(\"div\", {\n    className: \"d-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, \"Don't have an account ? \", __jsx(Link, {\n    href: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 35\n    }\n  }, \"Sign Up\")), __jsx(Button, {\n    type: \"submit\",\n    variant: \"label-primary\",\n    size: \"lg\",\n    width: \"widest\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, loading ? __jsx(Spinner, {\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 22\n    }\n  }) : null, \" Login\")));\n}\n\nLoginPage.getInitialProps = async ctx => {\n  const result = await verifyCookie(ctx);\n  console.log(\"yo me ejecuto primero\"); // Redirect to dashboard page if the user has logged in\n\n  if (result) {\n    if (ctx.res) {\n      ctx.res.writeHead(302, {\n        Location: ctx.query.redirect || PAGE.dashboardPagePath\n      });\n      ctx.res.end();\n    } else {\n      Router.push(Router.query.redirect || PAGE.dashboardPagePath);\n    }\n  }\n\n  return {\n    firebase: null\n  };\n};\n\nexport default withLayout(LoginPage, \"blank\");","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/pages/login.jsx"],"names":["Row","Col","Form","Label","Input","Button","Portlet","Spinner","Container","CustomInput","FloatLabel","Widget12","FontAwesomeIcon","useForm","Controller","firebaseClient","yupResolver","SolidIcon","yup","verifyCookie","withLayout","swalContent","Router","Swal","Link","Head","PAGE","ReactSwal","swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","LoginPage","faUserAlt","LoginForm","loading","setLoading","React","useState","console","log","schema","object","shape","email","string","required","password","min","control","handleSubmit","errors","resolver","defaultValues","onSubmit","push","query","redirect","dashboardPagePath","Boolean","message","getInitialProps","ctx","result","res","writeHead","Location","end","firebase"],"mappings":";;;AAAA,SACEA,GADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,MANF,EAOEC,OAPF,EAQEC,OARF,EASEC,SATF,EAUEC,WAVF,EAWEC,UAXF,EAYEC,QAZF,QAaO,oBAbP;AAcA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAO,KAAKC,SAAZ,MAA2B,mCAA3B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;;AACA,MAAMC,SAAS,GAAGN,WAAW,CAACE,IAAD,CAA7B,C,CAEA;;AACA,MAAMK,IAAI,GAAGD,SAAS,CAACE,KAAV,CAAgB;AAC3BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,aAAa,EAAE,qCADJ;AAEXC,IAAAA,YAAY,EAAE;AAFH,GADc;AAK3BC,EAAAA,cAAc,EAAE;AALW,CAAhB,CAAb;;AAQA,SAASC,SAAT,GAAqB;AACnB,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAIE,MAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,MAAd;AAAe,IAAA,SAAS,EAAC,iDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,QAAD;AAAU,IAAA,OAAO,MAAjB;AAAkB,IAAA,MAAM,MAAxB;AAAyB,IAAA,OAAO,EAAC,eAAjC;AAAiD,IAAA,SAAS,EAAC,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEjB,SAAS,CAACkB,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,EAQE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CAFF,CADF,CADF,CAJF,CADF;AA2BD;;AAED,SAASC,SAAT,GAAqB;AACnB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,KAAK,CAACC,QAAN,CAAe,KAAf,CAA9B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAHmB,CAKnB;;AACA,QAAMC,MAAM,GAAGzB,GAAG,CAAC0B,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,IAAAA,KAAK,EAAE5B,GAAG,CACP6B,MADI,GAEJD,KAFI,CAEE,yBAFF,EAGJE,QAHI,CAGK,yBAHL,CADyB;AAKhCC,IAAAA,QAAQ,EAAE/B,GAAG,CACV6B,MADO,GAEPG,GAFO,CAEH,CAFG,EAEA,oCAFA,EAGPF,QAHO,CAGE,8BAHF;AALsB,GAAnB,CAAf;AAWA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAAoCxC,OAAO,CAAC;AAChD;AACAyC,IAAAA,QAAQ,EAAEtC,WAAW,CAAC2B,MAAD,CAF2B;AAGhD;AACAY,IAAAA,aAAa,EAAE;AACbT,MAAAA,KAAK,EAAE,EADM;AAEbG,MAAAA,QAAQ,EAAE;AAFG;AAJiC,GAAD,CAAjD,CAjBmB,CA2BnB;;AACA,QAAMO,QAAQ,GAAG,OAAO;AAAEV,IAAAA,KAAF;AAASG,IAAAA;AAAT,GAAP,KAA+B;AAC9C;AACAX,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAhB,IAAAA,MAAM,CAACmC,IAAP,CAAYnC,MAAM,CAACoC,KAAP,CAAaC,QAAb,IAAyBjC,IAAI,CAACkC,iBAA1C,EAH8C,CAK9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAtB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GApBD;;AAsBA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEc,YAAY,CAACI,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,EAAE,EAAEpD,KADN;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,IAAI,EAAC,IALP;AAME,IAAA,OAAO,EAAE+C,OANX;AAOE,IAAA,OAAO,EAAEU,OAAO,CAACR,MAAM,CAACP,KAAR,CAPlB;AAQE,IAAA,WAAW,EAAC,0BARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,MAAC,KAAD;AAAO,IAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,EAYGO,MAAM,CAACP,KAAP,IAAgB,MAAC,IAAD,CAAM,QAAN;AAAe,IAAA,QAAQ,EAAEO,MAAM,CAACP,KAAP,CAAagB,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZnB,CADF,CAFF,EAoBE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,EAAE,EAAE1D,KADN;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,EAAE,EAAC,UAHL;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,IAAI,EAAC,IALP;AAME,IAAA,OAAO,EAAE+C,OANX;AAOE,IAAA,OAAO,EAAEU,OAAO,CAACR,MAAM,CAACJ,QAAR,CAPlB;AAQE,IAAA,WAAW,EAAC,6BARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,MAAC,KAAD;AAAO,IAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,EAYGI,MAAM,CAACJ,QAAP,IAAmB,MAAC,IAAD,CAAM,QAAN;AAAe,IAAA,QAAQ,EAAEI,MAAM,CAACJ,QAAP,CAAgBa,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZtB,CADF,CApBF,EAqCE;AAAK,IAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAC0B,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAD1B,CADF,EAIE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC,eAA9B;AAA8C,IAAA,IAAI,EAAC,IAAnD;AAAwD,IAAA,KAAK,EAAC,QAA9D;AAAuE,IAAA,QAAQ,EAAEzB,OAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,GAAG,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAkC,IAD5C,WAJF,CArCF,CADF;AAgDD;;AAEDH,SAAS,CAAC6B,eAAV,GAA4B,MAAMC,GAAN,IAAa;AACvC,QAAMC,MAAM,GAAG,MAAM9C,YAAY,CAAC6C,GAAD,CAAjC;AACFvB,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAFyC,CAGvC;;AACA,MAAIuB,MAAJ,EAAY;AACV,QAAID,GAAG,CAACE,GAAR,EAAa;AACXF,MAAAA,GAAG,CAACE,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AAAEC,QAAAA,QAAQ,EAAEJ,GAAG,CAACN,KAAJ,CAAUC,QAAV,IAAsBjC,IAAI,CAACkC;AAAvC,OAAvB;AACAI,MAAAA,GAAG,CAACE,GAAJ,CAAQG,GAAR;AACD,KAHD,MAGO;AACL/C,MAAAA,MAAM,CAACmC,IAAP,CAAYnC,MAAM,CAACoC,KAAP,CAAaC,QAAb,IAAyBjC,IAAI,CAACkC,iBAA1C;AACD;AACF;;AAED,SAAO;AAAEU,IAAAA,QAAQ,EAAE;AAAZ,GAAP;AACD,CAdD;;AAgBA,eAAelD,UAAU,CAACc,SAAD,EAAY,OAAZ,CAAzB","sourcesContent":["import {\n  Row,\n  Col,\n  Form,\n  Label,\n  Input,\n  Button,\n  Portlet,\n  Spinner,\n  Container,\n  CustomInput,\n  FloatLabel,\n  Widget12\n} from \"@panely/components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { firebaseClient } from \"components/firebase/firebaseClient\"\nimport { yupResolver } from \"@hookform/resolvers\"\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\"\nimport * as yup from \"yup\"\nimport verifyCookie from \"components/firebase/firebaseVerifyCookie\"\nimport withLayout from \"components/layout/withLayout\"\nimport swalContent from \"sweetalert2-react-content\"\nimport Router from \"next/router\"\nimport Swal from \"@panely/sweetalert2\"\nimport Link from \"next/link\"\nimport Head from \"next/head\"\nimport PAGE from \"config/page.config\"\n\n// Use SweetAlert React Content library\nconst ReactSwal = swalContent(Swal)\n\n// Set SweetAlert options\nconst swal = ReactSwal.mixin({\n  customClass: {\n    confirmButton: \"btn btn-label-success btn-wide mx-1\",\n    cancelButton: \"btn btn-label-danger btn-wide mx-1\"\n  },\n  buttonsStyling: false\n})\n\nfunction LoginPage() {\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Login | Panely</title>\n      </Head>\n      <Container fluid>\n        <Row noGutters className=\"align-items-center justify-content-center h-100\">\n          <Col sm=\"8\" md=\"6\" lg=\"4\">\n            {/* BEGIN Portlet */}\n            <Portlet>\n              <Portlet.Body>\n                <div className=\"text-center mt-2 mb-4\">\n                  {/* BEGIN Widget */}\n                  <Widget12 display circle variant=\"label-primary\" className=\"mb-4\">\n                    <FontAwesomeIcon icon={SolidIcon.faUserAlt} />\n                  </Widget12>\n                  {/* END Widget */}\n                </div>\n                <LoginForm />\n              </Portlet.Body>\n            </Portlet>\n            {/* END Portlet */}\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  )\n}\n\nfunction LoginForm() {\n  // Loading state\n  const [loading, setLoading] = React.useState(false)\n  console.log(\"yo me ejecuto segundo\")\n\n  // Define Yup schema for form validation\n  const schema = yup.object().shape({\n    email: yup\n      .string()\n      .email(\"Your email is not valid\")\n      .required(\"Please enter your email\"),\n    password: yup\n      .string()\n      .min(6, \"Please enter at least 6 characters\")\n      .required(\"Please provide your password\")\n  })\n\n  const { control, handleSubmit, errors } = useForm({\n    // Apply Yup as resolver for react-hook-form\n    resolver: yupResolver(schema),\n    // Define the default values for all input forms\n    defaultValues: {\n      email: \"\",\n      password: \"\"\n    }\n  })\n\n  // Handle form submit event\n  const onSubmit = async ({ email, password }) => {\n    // Show loading indicator\n    setLoading(true)\n    Router.push(Router.query.redirect || PAGE.dashboardPagePath)\n\n    // Trying to login with email and password with firebase\n    //await firebaseClient\n    //  .auth()\n    //  .signInWithEmailAndPassword(email, password)\n    //  .then(() => {\n    //    // Redirect to dashboard page\n    //    Router.push(Router.query.redirect || PAGE.dashboardPagePath)\n    //  })\n    //  .catch(err => {\n    //    // Show the error message if authentication is failed\n    //    swal.fire({ text: err.message, icon: \"error\" })\n    //  })\n\n    // Hide loading indicator\n    setLoading(false)\n  }\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      {/* BEGIN Form Group */}\n      <Form.Group>\n        <FloatLabel size=\"lg\">\n          <Controller\n            as={Input}\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            size=\"lg\"\n            control={control}\n            invalid={Boolean(errors.email)}\n            placeholder=\"Please insert your email\"\n          />\n          <Label for=\"email\">Email</Label>\n          {errors.email && <Form.Feedback children={errors.email.message} />}\n        </FloatLabel>\n      </Form.Group>\n      {/* END Form Group */}\n      {/* BEGIN Form Group */}\n      <Form.Group>\n        <FloatLabel size=\"lg\">\n          <Controller\n            as={Input}\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            size=\"lg\"\n            control={control}\n            invalid={Boolean(errors.password)}\n            placeholder=\"Please insert your password\"\n          />\n          <Label for=\"password\">Password</Label>\n          {errors.password && <Form.Feedback children={errors.password.message} />}\n        </FloatLabel>\n      </Form.Group>\n      {/* END Form Group */}\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <span>\n          Don't have an account ? <Link href=\"/register\">Sign Up</Link>\n        </span>\n        <Button type=\"submit\" variant=\"label-primary\" size=\"lg\" width=\"widest\" disabled={loading}>\n          {loading ? <Spinner className=\"mr-2\" /> : null} Login\n        </Button>\n      </div>\n    </Form>\n  )\n}\n\nLoginPage.getInitialProps = async ctx => {\n  const result = await verifyCookie(ctx)\nconsole.log(\"yo me ejecuto primero\")\n  // Redirect to dashboard page if the user has logged in\n  if (result) {\n    if (ctx.res) {\n      ctx.res.writeHead(302, { Location: ctx.query.redirect || PAGE.dashboardPagePath })\n      ctx.res.end()\n    } else {\n      Router.push(Router.query.redirect || PAGE.dashboardPagePath)\n    }\n  }\n\n  return { firebase: null }\n}\n\nexport default withLayout(LoginPage, \"blank\")\n"]},"metadata":{},"sourceType":"module"}