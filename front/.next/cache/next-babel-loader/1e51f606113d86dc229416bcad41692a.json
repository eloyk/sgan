{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\Badge.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\";\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: refPropType,\n  variant: PropTypes.string,\n  shape: PropTypes.oneOf([\"circle\", \"square\"]),\n  size: PropTypes.oneOf([\"lg\", \"xl\"]),\n  pill: PropTypes.bool,\n  tag: tagPropType\n};\nconst defaultProps = {\n  variant: \"secondary\",\n  pill: false,\n  tag: \"span\"\n};\n\nconst Badge = props => {\n  let {\n    className,\n    cssModule,\n    innerRef,\n    variant,\n    shape,\n    size,\n    pill,\n    tag: Tag\n  } = props,\n      attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"innerRef\", \"variant\", \"shape\", \"size\", \"pill\", \"tag\"]);\n\n  const classes = mapToCssModules(classNames(\"badge\", `badge-${variant}`, {\n    \"badge-pill\": pill,\n    [`badge-${shape}`]: shape,\n    [`badge-${size}`]: size\n  }, className), cssModule);\n\n  if (attributes.href && Tag === \"span\") {\n    Tag = \"a\";\n  }\n\n  return __jsx(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/Badge.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","refPropType","propTypes","className","string","cssModule","object","innerRef","variant","shape","oneOf","size","pill","bool","tag","defaultProps","Badge","props","Tag","attributes","classes","href"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,WAAvC,QAA0D,SAA1D;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEN,SAAS,CAACO,MADL;AAEhBC,EAAAA,SAAS,EAAER,SAAS,CAACS,MAFL;AAGhBC,EAAAA,QAAQ,EAAEN,WAHM;AAIhBO,EAAAA,OAAO,EAAEX,SAAS,CAACO,MAJH;AAKhBK,EAAAA,KAAK,EAAEZ,SAAS,CAACa,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,CAAhB,CALS;AAMhBC,EAAAA,IAAI,EAAEd,SAAS,CAACa,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,CAAhB,CANU;AAOhBE,EAAAA,IAAI,EAAEf,SAAS,CAACgB,IAPA;AAQhBC,EAAAA,GAAG,EAAEd;AARW,CAAlB;AAWA,MAAMe,YAAY,GAAG;AACnBP,EAAAA,OAAO,EAAE,WADU;AAEnBI,EAAAA,IAAI,EAAE,KAFa;AAGnBE,EAAAA,GAAG,EAAE;AAHc,CAArB;;AAMA,MAAME,KAAK,GAAGC,KAAK,IAAI;AACrB,MAAI;AACFd,IAAAA,SADE;AAEFE,IAAAA,SAFE;AAGFE,IAAAA,QAHE;AAIFC,IAAAA,OAJE;AAKFC,IAAAA,KALE;AAMFE,IAAAA,IANE;AAOFC,IAAAA,IAPE;AAQFE,IAAAA,GAAG,EAAEI;AARH,MAUAD,KAVJ;AAAA,MASKE,UATL,4BAUIF,KAVJ;;AAYA,QAAMG,OAAO,GAAGrB,eAAe,CAC7BD,UAAU,CACR,OADQ,EAEP,SAAQU,OAAQ,EAFT,EAGR;AACE,kBAAcI,IADhB;AAEE,KAAE,SAAQH,KAAM,EAAhB,GAAoBA,KAFtB;AAGE,KAAE,SAAQE,IAAK,EAAf,GAAmBA;AAHrB,GAHQ,EAQRR,SARQ,CADmB,EAW7BE,SAX6B,CAA/B;;AAcA,MAAIc,UAAU,CAACE,IAAX,IAAmBH,GAAG,KAAK,MAA/B,EAAuC;AACrCA,IAAAA,GAAG,GAAG,GAAN;AACD;;AAED,SAAO,MAAC,GAAD,eAASC,UAAT;AAAqB,IAAA,SAAS,EAAEC,OAAhC;AAAyC,IAAA,GAAG,EAAEb,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAhCD;;AAkCAS,KAAK,CAACd,SAAN,GAAkBA,SAAlB;AACAc,KAAK,CAACD,YAAN,GAAqBA,YAArB;AAEA,eAAeC,KAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: refPropType,\n  variant: PropTypes.string,\n  shape: PropTypes.oneOf([\"circle\", \"square\"]),\n  size: PropTypes.oneOf([\"lg\", \"xl\"]),\n  pill: PropTypes.bool,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  variant: \"secondary\",\n  pill: false,\n  tag: \"span\"\n}\n\nconst Badge = props => {\n  let {\n    className,\n    cssModule,\n    innerRef,\n    variant,\n    shape,\n    size,\n    pill,\n    tag: Tag,\n    ...attributes\n  } = props\n\n  const classes = mapToCssModules(\n    classNames(\n      \"badge\",\n      `badge-${variant}`,\n      {\n        \"badge-pill\": pill,\n        [`badge-${shape}`]: shape,\n        [`badge-${size}`]: size\n      },\n      className\n    ),\n    cssModule\n  )\n\n  if (attributes.href && Tag === \"span\") {\n    Tag = \"a\"\n  }\n\n  return <Tag {...attributes} className={classes} ref={innerRef} />\n}\n\nBadge.propTypes = propTypes\nBadge.defaultProps = defaultProps\n\nexport default Badge\n"]},"metadata":{},"sourceType":"module"}