{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\components\\\\layout\\\\part\\\\AsideBody.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Aside, Menu } from \"@panely/components\";\nimport { withRouter } from \"next/router\";\nimport SimpleBar from \"simplebar\";\nimport Link from \"next/link\";\nimport MENU from \"config/menu.config\";\n\nclass AsideBodyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"setInitialState\", () => {\n      let states = {};\n      let submenuActive = []; // Loop the MENU object tree\n\n      MENU.forEach((menu, index1) => {\n        // Check whether the node has child\n        if (Boolean(menu.child)) {\n          // Add data to states variables\n          states = this.addDataToObject(states, [index1], {\n            active: true,\n            height: \"auto\",\n            hasChild: true\n          }); // Loop the second level child node\n\n          menu.child.forEach((menu, index2) => {\n            // Check whether the node has child\n            if (Boolean(menu.child)) {\n              // Add data to states variables\n              states = this.addDataToObject(states, [index1, index2], {\n                active: true,\n                height: \"auto\",\n                hasChild: true\n              }); // Loop the third level child node\n\n              menu.child.forEach((menu, index3) => {\n                // Add data to states variables\n                states = this.addDataToObject(states, [index1, index2, index3], {\n                  active: menu.link === this.props.router.pathname,\n                  hasChild: false\n                }); // Add data to submenuActive variables\n\n                if (menu.link === this.props.router.pathname) {\n                  submenuActive.push([index1, index2].join(\",\"));\n                  submenuActive.push([index1].join(\",\"));\n                }\n              });\n            } else {\n              // Add data to states variables\n              states = this.addDataToObject(states, [index1, index2], {\n                active: menu.link === this.props.router.pathname,\n                hasChild: false\n              }); // Add data to submenuActive variables\n\n              if (menu.link === this.props.router.pathname) {\n                submenuActive.push([index1].join(\",\"));\n              }\n            }\n          });\n        } else {\n          // Add data to states variables\n          states = this.addDataToObject(states, [index1], {\n            active: menu.link === this.props.router.pathname,\n            hasChild: false\n          });\n        }\n      });\n      return {\n        states,\n        submenuActive\n      };\n    });\n\n    _defineProperty(this, \"handleLinkClick\", (selfRoute, parentRoute) => {\n      let states = this.state; // Check whether the link has child\n\n      if (states[selfRoute].hasChild) {\n        // Toggle active state\n        states[selfRoute].active = !states[selfRoute].active; // Check whether the link has parent\n\n        if (parentRoute.length > 0) {\n          let selfheight = states[selfRoute].height;\n          let parentHeight = states[parentRoute].height; // Adjust the parent elements height\n\n          if (states[selfRoute].active) {\n            states[parentRoute].height = parentHeight + selfheight;\n          } else {\n            states[parentRoute].height = parentHeight - selfheight;\n          }\n        }\n      } else {\n        // Deactivate all links\n        for (const selfRoute in states) {\n          if (!states[selfRoute].hasChild) {\n            states[selfRoute].active = false;\n          }\n        } // Activate clicked link\n\n\n        states[selfRoute].active = true;\n      }\n\n      this.setState(states);\n    });\n\n    _defineProperty(this, \"addDataToObject\", (object, identifier, value) => {\n      return _objectSpread(_objectSpread({}, object), {}, {\n        [identifier]: value\n      });\n    });\n\n    const {\n      states: _states,\n      submenuActive: _submenuActive\n    } = this.setInitialState(); // Set initial data\n\n    this.linkRefs = [];\n    this.submenuRefs = [];\n    this.state = _states;\n    this.submenuActive = _submenuActive;\n    this.bodyRef = React.createRef();\n  }\n\n  componentDidMount() {\n    let states = this.state; // Loop submenu elements to set height and collapse it\n\n    this.submenuRefs.forEach(submenu => {\n      // Get submenu route\n      let selfRoute = submenu.getAttribute(\"data-route\").split(\",\"); // Set element height\n\n      states[selfRoute].height = submenu.offsetHeight; // Check whether submenu elements is active\n\n      if (this.submenuActive.includes(selfRoute.join(\",\"))) {\n        states[selfRoute].active = true;\n      } else {\n        states[selfRoute].active = false;\n      }\n    }); // Loop submenu elements to fix height data\n\n    this.submenuRefs.forEach(submenu => {\n      // Get submenu parent route\n      let parentRoute = submenu.getAttribute(\"data-route\").split(\",\");\n      parentRoute.pop(); // Check whether the submenu has parents\n\n      if (parentRoute.length > 0) {\n        let selfheight = submenu.offsetHeight;\n        let parentHeight = states[parentRoute].height; // Fix the element height\n\n        states[parentRoute].height = parentHeight - selfheight;\n      }\n    });\n    this.setState(states, () => {\n      // Initialize custom scrollbar\n      new SimpleBar(this.bodyRef.current);\n    });\n  }\n\n  render() {\n    return __jsx(Aside.Body, {\n      innerRef: this.bodyRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, __jsx(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, MENU.map((menu, index1) => {\n      // Set all variables needed\n      let Icon = menu.icon;\n      let parentRoute = [];\n      let selfRoute = [index1];\n      let hasChild = Boolean(menu.child);\n      let state = this.state[selfRoute]; // Check whether the node is a section\n\n      return menu.section ? __jsx(Menu.Section, {\n        key: index1,\n        children: menu.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }\n      }) : __jsx(Menu.Item, {\n        key: index1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }\n      }, __jsx(AsideBodyMenuLink, {\n        key: index1,\n        \"data-level\": 0,\n        \"data-route\": selfRoute,\n        link: menu.link,\n        icon: Icon ? __jsx(Icon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 32\n          }\n        }) : false,\n        addon: menu.addon,\n        bullet: menu.bullet,\n        active: state.active,\n        hasChild: hasChild,\n        onClick: () => this.handleLinkClick(selfRoute, parentRoute),\n        innerRef: ref => this.linkRefs.push(ref),\n        children: menu.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }), hasChild ? __jsx(Menu.Submenu, {\n        \"data-level\": 0,\n        \"data-route\": selfRoute,\n        active: state.active,\n        height: state.height,\n        innerRef: ref => this.submenuRefs.push(ref),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 19\n        }\n      }, menu.child.map((menu, index2) => {\n        // Set all variables needed\n        let Icon = menu.icon;\n        let parentRoute = [index1];\n        let selfRoute = [index1, index2];\n        let hasChild = Boolean(menu.child);\n        let state = this.state[selfRoute];\n        return __jsx(Menu.Item, {\n          key: index2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }\n        }, __jsx(AsideBodyMenuLink, {\n          key: index2,\n          \"data-route\": selfRoute,\n          \"data-level\": 1,\n          link: menu.link,\n          icon: Icon ? __jsx(Icon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 42\n            }\n          }) : false,\n          addon: menu.addon,\n          bullet: menu.bullet,\n          active: state.active,\n          hasChild: hasChild,\n          onClick: () => this.handleLinkClick(selfRoute, parentRoute),\n          innerRef: ref => this.linkRefs.push(ref),\n          children: menu.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 27\n          }\n        }), hasChild ? __jsx(Menu.Submenu, {\n          \"data-level\": 1,\n          \"data-route\": selfRoute,\n          active: state.active,\n          height: state.height,\n          innerRef: ref => this.submenuRefs.push(ref),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 29\n          }\n        }, menu.child.map((menu, index3) => {\n          // Set all variables needed\n          let Icon = menu.icon;\n          let parentRoute = [index1, index2];\n          let selfRoute = [index1, index2, index3];\n          let hasChild = Boolean(menu.child);\n          let state = this.state[selfRoute];\n          return __jsx(Menu.Item, {\n            key: index3,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 35\n            }\n          }, __jsx(AsideBodyMenuLink, {\n            key: index3,\n            \"data-route\": selfRoute,\n            \"data-level\": 2,\n            link: menu.link,\n            icon: Icon ? __jsx(Icon, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 52\n              }\n            }) : false,\n            addon: menu.addon,\n            bullet: menu.bullet,\n            active: state.active,\n            hasChild: hasChild,\n            onClick: () => this.handleLinkClick(selfRoute, parentRoute),\n            innerRef: ref => this.linkRefs.push(ref),\n            children: menu.title,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 37\n            }\n          }));\n        })) : null);\n      })) : null);\n    })));\n  }\n\n}\n\nfunction AsideBodyMenuLink(props) {\n  const {\n    hasChild,\n    link\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"hasChild\", \"link\"]);\n\n  const MenuLink = React.forwardRef((props, ref) => __jsx(Menu.Link, _extends({}, props, {\n    innerRef: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 53\n    }\n  })));\n  return hasChild ? __jsx(Menu.Link, _extends({\n    tag: \"button\"\n  }, attributes, {\n    caret: true,\n    toggle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 5\n    }\n  })) : __jsx(Link, {\n    href: link,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 5\n    }\n  }, __jsx(MenuLink, _extends({}, attributes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default withRouter(AsideBodyComponent);","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/components/layout/part/AsideBody.jsx"],"names":["Aside","Menu","withRouter","SimpleBar","Link","MENU","AsideBodyComponent","React","Component","constructor","props","states","submenuActive","forEach","menu","index1","Boolean","child","addDataToObject","active","height","hasChild","index2","index3","link","router","pathname","push","join","selfRoute","parentRoute","state","length","selfheight","parentHeight","setState","object","identifier","value","setInitialState","linkRefs","submenuRefs","bodyRef","createRef","componentDidMount","submenu","getAttribute","split","offsetHeight","includes","pop","current","render","map","Icon","icon","section","title","addon","bullet","handleLinkClick","ref","AsideBodyMenuLink","attributes","MenuLink","forwardRef"],"mappings":"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","sourcesContent":["import { Aside, Menu } from \"@panely/components\"\nimport { withRouter } from \"next/router\"\nimport SimpleBar from \"simplebar\"\nimport Link from \"next/link\"\nimport MENU from \"config/menu.config\"\n\nclass AsideBodyComponent extends React.Component {\n  constructor(props) {\n    super(props)\n\n    const { states, submenuActive } = this.setInitialState()\n\n    // Set initial data\n    this.linkRefs = []\n    this.submenuRefs = []\n    this.state = states\n    this.submenuActive = submenuActive\n    this.bodyRef = React.createRef()\n  }\n\n  setInitialState = () => {\n    let states = {}\n    let submenuActive = []\n\n    // Loop the MENU object tree\n    MENU.forEach((menu, index1) => {\n      // Check whether the node has child\n      if (Boolean(menu.child)) {\n        // Add data to states variables\n        states = this.addDataToObject(states, [index1], {\n          active: true,\n          height: \"auto\",\n          hasChild: true\n        })\n\n        // Loop the second level child node\n        menu.child.forEach((menu, index2) => {\n          // Check whether the node has child\n          if (Boolean(menu.child)) {\n            // Add data to states variables\n            states = this.addDataToObject(states, [index1, index2], {\n              active: true,\n              height: \"auto\",\n              hasChild: true\n            })\n\n            // Loop the third level child node\n            menu.child.forEach((menu, index3) => {\n              // Add data to states variables\n              states = this.addDataToObject(states, [index1, index2, index3], {\n                active: menu.link === this.props.router.pathname,\n                hasChild: false\n              })\n\n              // Add data to submenuActive variables\n              if (menu.link === this.props.router.pathname) {\n                submenuActive.push([index1, index2].join(\",\"))\n                submenuActive.push([index1].join(\",\"))\n              }\n            })\n          } else {\n            // Add data to states variables\n            states = this.addDataToObject(states, [index1, index2], {\n              active: menu.link === this.props.router.pathname,\n              hasChild: false\n            })\n\n            // Add data to submenuActive variables\n            if (menu.link === this.props.router.pathname) {\n              submenuActive.push([index1].join(\",\"))\n            }\n          }\n        })\n      } else {\n        // Add data to states variables\n        states = this.addDataToObject(states, [index1], {\n          active: menu.link === this.props.router.pathname,\n          hasChild: false\n        })\n      }\n    })\n\n    return { states, submenuActive }\n  }\n\n  handleLinkClick = (selfRoute, parentRoute) => {\n    let states = this.state\n\n    // Check whether the link has child\n    if (states[selfRoute].hasChild) {\n      // Toggle active state\n      states[selfRoute].active = !states[selfRoute].active\n\n      // Check whether the link has parent\n      if (parentRoute.length > 0) {\n        let selfheight = states[selfRoute].height\n        let parentHeight = states[parentRoute].height\n\n        // Adjust the parent elements height\n        if (states[selfRoute].active) {\n          states[parentRoute].height = parentHeight + selfheight\n        } else {\n          states[parentRoute].height = parentHeight - selfheight\n        }\n      }\n    } else {\n      // Deactivate all links\n      for (const selfRoute in states) {\n        if (!states[selfRoute].hasChild) {\n          states[selfRoute].active = false\n        }\n      }\n\n      // Activate clicked link\n      states[selfRoute].active = true\n    }\n\n    this.setState(states)\n  }\n\n  addDataToObject = (object, identifier, value) => {\n    return {\n      ...object,\n      [identifier]: value\n    }\n  }\n\n  componentDidMount() {\n    let states = this.state\n\n    // Loop submenu elements to set height and collapse it\n    this.submenuRefs.forEach(submenu => {\n      // Get submenu route\n      let selfRoute = submenu.getAttribute(\"data-route\").split(\",\")\n\n      // Set element height\n      states[selfRoute].height = submenu.offsetHeight\n\n      // Check whether submenu elements is active\n      if (this.submenuActive.includes(selfRoute.join(\",\"))) {\n        states[selfRoute].active = true\n      } else {\n        states[selfRoute].active = false\n      }\n    })\n\n    // Loop submenu elements to fix height data\n    this.submenuRefs.forEach(submenu => {\n      // Get submenu parent route\n      let parentRoute = submenu.getAttribute(\"data-route\").split(\",\")\n      parentRoute.pop()\n\n      // Check whether the submenu has parents\n      if (parentRoute.length > 0) {\n        let selfheight = submenu.offsetHeight\n        let parentHeight = states[parentRoute].height\n\n        // Fix the element height\n        states[parentRoute].height = parentHeight - selfheight\n      }\n    })\n\n    this.setState(states, () => {\n      // Initialize custom scrollbar\n      new SimpleBar(this.bodyRef.current)\n    })\n  }\n\n  render() {\n    return (\n      <Aside.Body innerRef={this.bodyRef}>\n        <Menu>\n          {/* Loop MENU object tree */}\n          {MENU.map((menu, index1) => {\n            // Set all variables needed\n            let Icon = menu.icon\n            let parentRoute = []\n            let selfRoute = [index1]\n            let hasChild = Boolean(menu.child)\n            let state = this.state[selfRoute]\n\n            // Check whether the node is a section\n            return menu.section ? (\n              <Menu.Section key={index1} children={menu.title} />\n            ) : (\n              <Menu.Item key={index1}>\n                <AsideBodyMenuLink\n                  key={index1}\n                  data-level={0}\n                  data-route={selfRoute}\n                  link={menu.link}\n                  icon={Icon ? <Icon /> : false}\n                  addon={menu.addon}\n                  bullet={menu.bullet}\n                  active={state.active}\n                  hasChild={hasChild}\n                  onClick={() => this.handleLinkClick(selfRoute, parentRoute)}\n                  innerRef={ref => this.linkRefs.push(ref)}\n                  children={menu.title}\n                />\n\n                {/* Check whether the node has child */}\n                {hasChild ? (\n                  <Menu.Submenu\n                    data-level={0}\n                    data-route={selfRoute}\n                    active={state.active}\n                    height={state.height}\n                    innerRef={ref => this.submenuRefs.push(ref)}\n                  >\n                    {/* Loop the second level MENU object tree */}\n                    {menu.child.map((menu, index2) => {\n                      // Set all variables needed\n                      let Icon = menu.icon\n                      let parentRoute = [index1]\n                      let selfRoute = [index1, index2]\n                      let hasChild = Boolean(menu.child)\n                      let state = this.state[selfRoute]\n\n                      return (\n                        <Menu.Item key={index2}>\n                          <AsideBodyMenuLink\n                            key={index2}\n                            data-route={selfRoute}\n                            data-level={1}\n                            link={menu.link}\n                            icon={Icon ? <Icon /> : false}\n                            addon={menu.addon}\n                            bullet={menu.bullet}\n                            active={state.active}\n                            hasChild={hasChild}\n                            onClick={() => this.handleLinkClick(selfRoute, parentRoute)}\n                            innerRef={ref => this.linkRefs.push(ref)}\n                            children={menu.title}\n                          />\n\n                          {/* Check whether the node has child */}\n                          {hasChild ? (\n                            <Menu.Submenu\n                              data-level={1}\n                              data-route={selfRoute}\n                              active={state.active}\n                              height={state.height}\n                              innerRef={ref => this.submenuRefs.push(ref)}\n                            >\n                              {/* Loop the third level MENU object tree */}\n                              {menu.child.map((menu, index3) => {\n                                // Set all variables needed\n                                let Icon = menu.icon\n                                let parentRoute = [index1, index2]\n                                let selfRoute = [index1, index2, index3]\n                                let hasChild = Boolean(menu.child)\n                                let state = this.state[selfRoute]\n\n                                return (\n                                  <Menu.Item key={index3}>\n                                    <AsideBodyMenuLink\n                                      key={index3}\n                                      data-route={selfRoute}\n                                      data-level={2}\n                                      link={menu.link}\n                                      icon={Icon ? <Icon /> : false}\n                                      addon={menu.addon}\n                                      bullet={menu.bullet}\n                                      active={state.active}\n                                      hasChild={hasChild}\n                                      onClick={() => this.handleLinkClick(selfRoute, parentRoute)}\n                                      innerRef={ref => this.linkRefs.push(ref)}\n                                      children={menu.title}\n                                    />\n                                  </Menu.Item>\n                                )\n                              })}\n                            </Menu.Submenu>\n                          ) : null}\n                        </Menu.Item>\n                      )\n                    })}\n                  </Menu.Submenu>\n                ) : null}\n              </Menu.Item>\n            )\n          })}\n        </Menu>\n      </Aside.Body>\n    )\n  }\n}\n\nfunction AsideBodyMenuLink(props) {\n  const { hasChild, link, ...attributes } = props\n  const MenuLink = React.forwardRef((props, ref) => <Menu.Link {...props} innerRef={ref} />)\n\n  return hasChild ? (\n    <Menu.Link tag=\"button\" {...attributes} caret toggle />\n  ) : (\n    <Link href={link} passHref>\n      <MenuLink {...attributes} />\n    </Link>\n  )\n}\n\nexport default withRouter(AsideBodyComponent)\n"]},"metadata":{},"sourceType":"module"}