{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Chat, Input, Avatar, Button, Marker, Portlet, Dropdown, RichList, InputGroup } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as RegularIcon from \"@fortawesome/free-regular-svg-icons\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport SimpleBar from \"simplebar\";\n\nvar HeaderChat = /*#__PURE__*/function (_React$Component) {\n  _inherits(HeaderChat, _React$Component);\n\n  var _super = _createSuper(HeaderChat);\n\n  function HeaderChat() {\n    var _this;\n\n    _classCallCheck(this, HeaderChat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"bodyRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: \"Garrett Winters\",\n      title: \"UX Designer\",\n      avatar: function avatar() {\n        return __jsx(Avatar, {\n          display: true,\n          circle: true\n        }, __jsx(\"img\", {\n          src: \"/images/avatar/blank.webp\",\n          alt: \"Avatar image\"\n        }));\n      },\n      conversation: [{\n        align: \"left\",\n        time: \"3 min ago\",\n        bubbles: [{\n          variant: \"primary\",\n          content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n        }, {\n          variant: \"primary\",\n          content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n        }]\n      }, {\n        align: \"right\",\n        time: \"2 min ago\",\n        bubbles: [{\n          variant: false,\n          content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n        }]\n      }, {\n        align: \"left\",\n        time: \"1 min ago\",\n        bubbles: [{\n          variant: \"primary\",\n          content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Unde, eius.\"\n        }]\n      }]\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggle\", function (e, opened) {\n      // Initialize custom scrollbar\n      if (opened) {\n        new SimpleBar(_this.bodyRef.current);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(HeaderChat, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          variant = _this$props.variant,\n          attributes = _objectWithoutProperties(_this$props, [\"variant\"]);\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          title = _this$state.title,\n          UserAvatar = _this$state.avatar;\n      var count = this.state.conversation.length;\n      return __jsx(Dropdown.Uncontrolled, _extends({\n        onToggle: this.onToggle\n      }, attributes), __jsx(Dropdown.Toggle, {\n        icon: true,\n        variant: variant\n      }, __jsx(FontAwesomeIcon, {\n        icon: RegularIcon.faComments\n      }), count > 0 ? __jsx(Button.Marker, null, __jsx(Marker, {\n        type: \"dot\",\n        variant: \"success\"\n      })) : null), __jsx(Dropdown.Menu, {\n        right: true,\n        wide: true,\n        animated: true,\n        className: \"overflow-hidden py-0\"\n      }, __jsx(Portlet, {\n        scroll: true,\n        className: \"border-0\"\n      }, __jsx(Portlet.Header, {\n        bordered: true,\n        className: \"rounded-0\"\n      }, __jsx(RichList.Item, {\n        className: \"w-100 p-0\"\n      }, __jsx(RichList.Addon, {\n        addonType: \"prepend\"\n      }, __jsx(UserAvatar, null)), __jsx(RichList.Content, null, __jsx(RichList.Title, {\n        children: name\n      }), __jsx(RichList.Subtitle, {\n        children: title\n      })))), __jsx(Portlet.Body, {\n        innerRef: this.bodyRef\n      }, __jsx(Chat, null, this.state.conversation.map(function (conversation, index) {\n        return __jsx(Chat.Item, {\n          key: index,\n          align: conversation.align\n        }, __jsx(Chat.Content, null, conversation.bubbles.map(function (bubble, index) {\n          return bubble.variant ? __jsx(Chat.Bubble, {\n            key: index,\n            variant: bubble.variant,\n            children: bubble.content\n          }) : __jsx(Chat.Bubble, {\n            key: index,\n            children: bubble.content\n          });\n        }), __jsx(Chat.Time, {\n          children: conversation.time\n        })));\n      }))), __jsx(Portlet.Footer, {\n        bordered: true,\n        className: \"rounded-0\"\n      }, __jsx(InputGroup, null, __jsx(Input, {\n        type: \"text\",\n        placeholder: \"Type...\"\n      }), __jsx(InputGroup.Addon, {\n        addonType: \"append\"\n      }, __jsx(Button, {\n        icon: true,\n        variant: \"primary\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faPaperPlane\n      }))))))));\n    }\n  }]);\n\n  return HeaderChat;\n}(React.Component);\n\nexport default HeaderChat;","map":null,"metadata":{},"sourceType":"module"}