{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\modules\\\\components\\\\Badge.jsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\";\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: refPropType,\n  variant: PropTypes.string,\n  shape: PropTypes.oneOf([\"circle\", \"square\"]),\n  size: PropTypes.oneOf([\"lg\", \"xl\"]),\n  pill: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  variant: \"secondary\",\n  pill: false,\n  tag: \"span\"\n};\n\nvar Badge = function Badge(props) {\n  var _classNames;\n\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      variant = props.variant,\n      shape = props.shape,\n      size = props.size,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"innerRef\", \"variant\", \"shape\", \"size\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(\"badge\", \"badge-\".concat(variant), (_classNames = {\n    \"badge-pill\": pill\n  }, _defineProperty(_classNames, \"badge-\".concat(shape), shape), _defineProperty(_classNames, \"badge-\".concat(size), size), _classNames), className), cssModule);\n\n  if (attributes.href && Tag === \"span\") {\n    Tag = \"a\";\n  }\n\n  return __jsx(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  }));\n};\n\n_c = Badge;\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;\n\nvar _c;\n\n$RefreshReg$(_c, \"Badge\");","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/modules/components/Badge.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","refPropType","propTypes","className","string","cssModule","object","innerRef","variant","shape","oneOf","size","pill","bool","tag","defaultProps","Badge","props","Tag","attributes","classes","href"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,WAAvC,QAA0D,SAA1D;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEN,SAAS,CAACO,MADL;AAEhBC,EAAAA,SAAS,EAAER,SAAS,CAACS,MAFL;AAGhBC,EAAAA,QAAQ,EAAEN,WAHM;AAIhBO,EAAAA,OAAO,EAAEX,SAAS,CAACO,MAJH;AAKhBK,EAAAA,KAAK,EAAEZ,SAAS,CAACa,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,CAAhB,CALS;AAMhBC,EAAAA,IAAI,EAAEd,SAAS,CAACa,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,CAAhB,CANU;AAOhBE,EAAAA,IAAI,EAAEf,SAAS,CAACgB,IAPA;AAQhBC,EAAAA,GAAG,EAAEd;AARW,CAAlB;AAWA,IAAMe,YAAY,GAAG;AACnBP,EAAAA,OAAO,EAAE,WADU;AAEnBI,EAAAA,IAAI,EAAE,KAFa;AAGnBE,EAAAA,GAAG,EAAE;AAHc,CAArB;;AAMA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAAA;;AAAA,MAEnBd,SAFmB,GAWjBc,KAXiB,CAEnBd,SAFmB;AAAA,MAGnBE,SAHmB,GAWjBY,KAXiB,CAGnBZ,SAHmB;AAAA,MAInBE,QAJmB,GAWjBU,KAXiB,CAInBV,QAJmB;AAAA,MAKnBC,OALmB,GAWjBS,KAXiB,CAKnBT,OALmB;AAAA,MAMnBC,KANmB,GAWjBQ,KAXiB,CAMnBR,KANmB;AAAA,MAOnBE,IAPmB,GAWjBM,KAXiB,CAOnBN,IAPmB;AAAA,MAQnBC,IARmB,GAWjBK,KAXiB,CAQnBL,IARmB;AAAA,MASdM,GATc,GAWjBD,KAXiB,CASnBH,GATmB;AAAA,MAUhBK,UAVgB,4BAWjBF,KAXiB;;AAarB,MAAMG,OAAO,GAAGrB,eAAe,CAC7BD,UAAU,CACR,OADQ,kBAECU,OAFD;AAIN,kBAAcI;AAJR,kDAKIH,KALJ,GAKcA,KALd,gDAMIE,IANJ,GAMaA,IANb,iBAQRR,SARQ,CADmB,EAW7BE,SAX6B,CAA/B;;AAcA,MAAIc,UAAU,CAACE,IAAX,IAAmBH,GAAG,KAAK,MAA/B,EAAuC;AACrCA,IAAAA,GAAG,GAAG,GAAN;AACD;;AAED,SAAO,MAAC,GAAD,eAASC,UAAT;AAAqB,IAAA,SAAS,EAAEC,OAAhC;AAAyC,IAAA,GAAG,EAAEb,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAhCD;;KAAMS,K;AAkCNA,KAAK,CAACd,SAAN,GAAkBA,SAAlB;AACAc,KAAK,CAACD,YAAN,GAAqBA,YAArB;AAEA,eAAeC,KAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: refPropType,\n  variant: PropTypes.string,\n  shape: PropTypes.oneOf([\"circle\", \"square\"]),\n  size: PropTypes.oneOf([\"lg\", \"xl\"]),\n  pill: PropTypes.bool,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  variant: \"secondary\",\n  pill: false,\n  tag: \"span\"\n}\n\nconst Badge = props => {\n  let {\n    className,\n    cssModule,\n    innerRef,\n    variant,\n    shape,\n    size,\n    pill,\n    tag: Tag,\n    ...attributes\n  } = props\n\n  const classes = mapToCssModules(\n    classNames(\n      \"badge\",\n      `badge-${variant}`,\n      {\n        \"badge-pill\": pill,\n        [`badge-${shape}`]: shape,\n        [`badge-${size}`]: size\n      },\n      className\n    ),\n    cssModule\n  )\n\n  if (attributes.href && Tag === \"span\") {\n    Tag = \"a\"\n  }\n\n  return <Tag {...attributes} className={classes} ref={innerRef} />\n}\n\nBadge.propTypes = propTypes\nBadge.defaultProps = defaultProps\n\nexport default Badge\n"]},"metadata":{},"sourceType":"module"}