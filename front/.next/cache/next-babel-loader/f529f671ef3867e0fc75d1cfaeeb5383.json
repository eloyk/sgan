{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\modules\\\\components\\\\DropdownItem.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { DropdownContext } from \"./DropdownContext\";\nimport { mapToCssModules, omit, tagPropType } from \"./utils\";\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  active: PropTypes.bool,\n  bullet: PropTypes.bool,\n  toggle: PropTypes.bool,\n  addon: PropTypes.node,\n  icon: PropTypes.node,\n  tag: tagPropType\n};\nvar defaultProps = {\n  toggle: true,\n  tag: \"button\"\n};\n\nvar DropdownItem = /*#__PURE__*/function (_React$Component) {\n  _inherits(DropdownItem, _React$Component);\n\n  var _super = _createSuper(DropdownItem);\n\n  function DropdownItem(props) {\n    var _this;\n\n    _classCallCheck(this, DropdownItem);\n\n    _this = _super.call(this, props);\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.getTabIndex = _this.getTabIndex.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DropdownItem, [{\n    key: \"onClick\",\n    value: function onClick(e) {\n      if (this.props.disabled || this.props.header || this.props.divider) {\n        e.preventDefault();\n        return;\n      }\n\n      if (this.props.onClick) {\n        this.props.onClick(e);\n      }\n\n      if (this.props.toggle) {\n        this.context.toggle(e);\n      }\n    }\n  }, {\n    key: \"getTabIndex\",\n    value: function getTabIndex() {\n      if (this.props.disabled || this.props.header || this.props.divider) {\n        return \"-1\";\n      }\n\n      return \"0\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tabIndex = this.getTabIndex();\n      var role = tabIndex > -1 ? \"menuitem\" : undefined;\n\n      var _omit = omit(this.props, [\"toggle\"]),\n          className = _omit.className,\n          cssModule = _omit.cssModule,\n          children = _omit.children,\n          disabled = _omit.disabled,\n          active = _omit.active,\n          bullet = _omit.bullet,\n          addon = _omit.addon,\n          icon = _omit.icon,\n          Tag = _omit.tag,\n          props = _objectWithoutProperties(_omit, [\"className\", \"cssModule\", \"children\", \"disabled\", \"active\", \"bullet\", \"addon\", \"icon\", \"tag\"]);\n\n      var classes = mapToCssModules(classNames(className, \"dropdown-item\", {\n        disabled: disabled,\n        active: active\n      }), cssModule);\n      var iconClasses = mapToCssModules(classNames(\"dropdown-icon\"), cssModule);\n      var bulletClasses = mapToCssModules(classNames(\"dropdown-bullet\"), cssModule);\n      var contentClasses = mapToCssModules(classNames(\"dropdown-content\"), cssModule);\n      var addonClasses = mapToCssModules(classNames(\"dropdown-addon\"), cssModule);\n\n      if (Tag === \"button\") {\n        if (props.href) {\n          Tag = \"a\";\n        }\n      }\n\n      return __jsx(Tag, _extends({\n        type: Tag === \"button\" && (props.onClick || this.props.toggle) ? \"button\" : undefined\n      }, props, {\n        tabIndex: tabIndex,\n        role: role,\n        className: classes,\n        onClick: this.onClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }\n      }), icon ? __jsx(\"span\", {\n        className: iconClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, icon) : null, bullet && !icon ? __jsx(\"i\", {\n        className: bulletClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 28\n        }\n      }) : null, __jsx(\"span\", {\n        className: contentClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, children), addon ? __jsx(\"span\", {\n        className: addonClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 18\n        }\n      }, addon) : null);\n    }\n  }]);\n\n  return DropdownItem;\n}(React.Component);\n\nDropdownItem.propTypes = propTypes;\nDropdownItem.defaultProps = defaultProps;\nDropdownItem.contextType = DropdownContext;\nexport default DropdownItem;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/modules/components/DropdownItem.jsx"],"names":["React","PropTypes","classNames","DropdownContext","mapToCssModules","omit","tagPropType","propTypes","className","string","cssModule","object","children","node","disabled","bool","onClick","func","active","bullet","toggle","addon","icon","tag","defaultProps","DropdownItem","props","bind","getTabIndex","e","header","divider","preventDefault","context","tabIndex","role","undefined","Tag","classes","iconClasses","bulletClasses","contentClasses","addonClasses","href","Component","contextType"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { DropdownContext } from \"./DropdownContext\"\nimport { mapToCssModules, omit, tagPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  active: PropTypes.bool,\n  bullet: PropTypes.bool,\n  toggle: PropTypes.bool,\n  addon: PropTypes.node,\n  icon: PropTypes.node,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  toggle: true,\n  tag: \"button\"\n}\n\nclass DropdownItem extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.onClick = this.onClick.bind(this)\n    this.getTabIndex = this.getTabIndex.bind(this)\n  }\n\n  onClick(e) {\n    if (this.props.disabled || this.props.header || this.props.divider) {\n      e.preventDefault()\n      return\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e)\n    }\n\n    if (this.props.toggle) {\n      this.context.toggle(e)\n    }\n  }\n\n  getTabIndex() {\n    if (this.props.disabled || this.props.header || this.props.divider) {\n      return \"-1\"\n    }\n\n    return \"0\"\n  }\n\n  render() {\n    const tabIndex = this.getTabIndex()\n    const role = tabIndex > -1 ? \"menuitem\" : undefined\n    let {\n      className,\n      cssModule,\n      children,\n      disabled,\n      active,\n      bullet,\n      addon,\n      icon,\n      tag: Tag,\n      ...props\n    } = omit(this.props, [\"toggle\"])\n\n    const classes = mapToCssModules(\n      classNames(className, \"dropdown-item\", {\n        disabled,\n        active\n      }),\n      cssModule\n    )\n    const iconClasses = mapToCssModules(classNames(\"dropdown-icon\"), cssModule)\n    const bulletClasses = mapToCssModules(classNames(\"dropdown-bullet\"), cssModule)\n    const contentClasses = mapToCssModules(classNames(\"dropdown-content\"), cssModule)\n    const addonClasses = mapToCssModules(classNames(\"dropdown-addon\"), cssModule)\n\n    if (Tag === \"button\") {\n      if (props.href) {\n        Tag = \"a\"\n      }\n    }\n\n    return (\n      <Tag\n        type={Tag === \"button\" && (props.onClick || this.props.toggle) ? \"button\" : undefined}\n        {...props}\n        tabIndex={tabIndex}\n        role={role}\n        className={classes}\n        onClick={this.onClick}\n      >\n        {icon ? <span className={iconClasses}>{icon}</span> : null}\n        {bullet && !icon ? <i className={bulletClasses}></i> : null}\n        <span className={contentClasses}>{children}</span>\n        {addon ? <span className={addonClasses}>{addon}</span> : null}\n      </Tag>\n    )\n  }\n}\n\nDropdownItem.propTypes = propTypes\nDropdownItem.defaultProps = defaultProps\nDropdownItem.contextType = DropdownContext\n\nexport default DropdownItem\n"]},"metadata":{},"sourceType":"module"}