{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Tab, Nav, Badge, Table, Portlet, RichList } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport Chart from \"@panely/apexcharts\";\n\nvar Widget24Component = /*#__PURE__*/function (_React$Component) {\n  _inherits(Widget24Component, _React$Component);\n\n  var _super = _createSuper(Widget24Component);\n\n  function Widget24Component() {\n    var _this;\n\n    _classCallCheck(this, Widget24Component);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      // Default active tab id\n      activeTab: 0,\n      // Tabs data\n      tabs: [{\n        time: \"Last month\",\n        employees: [{\n          firstName: \"Garrett\",\n          lastName: \"Winters\",\n          job: \"Accountant\",\n          office: \"Tokyo\",\n          chart: {\n            color: \"#2196f3\",\n            series: [64, 40, 76, 62, 98, 64]\n          },\n          status: \"Excelent\",\n          salary: \"$170,750\"\n        }, {\n          firstName: \"Rhona\",\n          lastName: \"Davidson\",\n          job: \"Integration Specialist\",\n          office: \"Edinburgh\",\n          chart: {\n            color: \"#9c27b0\",\n            series: [23, 50, 26, 54, 38, 45]\n          },\n          status: \"Good\",\n          salary: \"$103,600\"\n        }, {\n          firstName: \"Airi\",\n          lastName: \"Satou\",\n          job: \"Senior Javascript Developer\",\n          office: \"San Francisco\",\n          chart: {\n            color: \"#f44336\",\n            series: [98, 56, 76, 54, 34, 45]\n          },\n          status: \"Bad\",\n          salary: \"$86,000\"\n        }, {\n          firstName: \"Brielle\",\n          lastName: \"Williamson\",\n          job: \"System Architect\",\n          office: \"San Francisco\",\n          chart: {\n            color: \"#ff9800\",\n            series: [65, 86, 23, 54, 90, 45]\n          },\n          status: \"Standard\",\n          salary: \"$137,500\"\n        }]\n      }, {\n        time: \"All time\",\n        employees: [{\n          firstName: \"Rhona\",\n          lastName: \"Davidson\",\n          job: \"Integration Specialist\",\n          office: \"Edinburgh\",\n          chart: {\n            color: \"#9c27b0\",\n            series: [23, 50, 26, 54, 38, 45]\n          },\n          status: \"Good\",\n          salary: \"$103,600\"\n        }, {\n          firstName: \"Brielle\",\n          lastName: \"Williamson\",\n          job: \"System Architect\",\n          office: \"San Francisco\",\n          chart: {\n            color: \"#ff9800\",\n            series: [65, 86, 23, 54, 90, 45]\n          },\n          status: \"Standard\",\n          salary: \"$137,500\"\n        }, {\n          firstName: \"Garrett\",\n          lastName: \"Winters\",\n          job: \"Accountant\",\n          office: \"Tokyo\",\n          chart: {\n            color: \"#2196f3\",\n            series: [64, 40, 76, 62, 98, 64]\n          },\n          status: \"Excelent\",\n          salary: \"$170,750\"\n        }, {\n          firstName: \"Airi\",\n          lastName: \"Satou\",\n          job: \"Senior Javascript Developer\",\n          office: \"San Francisco\",\n          chart: {\n            color: \"#f44336\",\n            series: [98, 56, 76, 54, 34, 45]\n          },\n          status: \"Bad\",\n          salary: \"$86,000\"\n        }]\n      }]\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function (id) {\n      if (_this.state.activeTab !== id) {\n        _this.setState({\n          activeTab: id\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Widget24Component, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Icon, null, __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faChartArea\n      })), __jsx(Portlet.Title, null, \"Employee change\"), __jsx(Portlet.Addon, null, __jsx(Nav, {\n        lines: true,\n        portlet: true\n      }, this.state.tabs.map(function (data, index) {\n        return __jsx(Nav.Item, {\n          key: index,\n          active: _this2.state.activeTab === index,\n          onClick: function onClick() {\n            return _this2.toggle(index);\n          },\n          children: data.time\n        });\n      })))), __jsx(Portlet.Body, null, __jsx(Tab, {\n        activeTab: this.state.activeTab\n      }, this.state.tabs.map(function (data, index) {\n        return __jsx(Tab.Pane, {\n          tabId: index,\n          key: index\n        }, __jsx(Table, {\n          borderless: true,\n          striped: true,\n          hover: true,\n          responsive: \"md\",\n          className: \"text-nowrap mb-0\"\n        }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Name\"), __jsx(\"th\", null, \"Office\"), __jsx(\"th\", null, \"Change\"), __jsx(\"th\", null, \"Status\"), __jsx(\"th\", {\n          className: \"text-right\"\n        }, \"Salary\"))), __jsx(\"tbody\", null, data.employees.map(function (data, index) {\n          var firstName = data.firstName,\n              lastName = data.lastName,\n              job = data.job,\n              office = data.office,\n              chart = data.chart,\n              status = data.status,\n              salary = data.salary;\n          return __jsx(\"tr\", {\n            key: index\n          }, __jsx(\"td\", {\n            className: \"align-middle\"\n          }, __jsx(RichList.Item, {\n            content: true,\n            className: \"p-0\"\n          }, __jsx(RichList.Title, {\n            children: \"\".concat(firstName, \" \").concat(lastName)\n          }), __jsx(RichList.Subtitle, {\n            children: job\n          }))), __jsx(\"td\", {\n            className: \"align-middle\",\n            children: office\n          }), __jsx(\"td\", {\n            className: \"align-middle\",\n            style: {\n              maxWidth: \"8rem\"\n            }\n          }, __jsx(Widget24Chart, {\n            theme: _this2.props.theme,\n            color: chart.color,\n            label: firstName,\n            series: chart.series\n          })), __jsx(\"td\", {\n            className: \"align-middle\"\n          }, __jsx(Badge, {\n            variant: \"label-danger\",\n            size: \"lg\",\n            children: status\n          })), __jsx(\"td\", {\n            className: \"align-middle text-right text-primary\",\n            children: salary\n          }));\n        }))));\n      }))));\n    }\n  }]);\n\n  return Widget24Component;\n}(React.Component);\n\nvar Widget24Chart = /*#__PURE__*/function (_React$Component2) {\n  _inherits(Widget24Chart, _React$Component2);\n\n  var _super2 = _createSuper(Widget24Chart);\n\n  function Widget24Chart() {\n    var _this3;\n\n    _classCallCheck(this, Widget24Chart);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _super2.call.apply(_super2, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this3), \"state\", {\n      // Chart options\n      options: {\n        theme: {\n          mode: _this3.props.theme,\n          palette: \"palette1\"\n        },\n        chart: {\n          sparkline: {\n            enabled: true\n          }\n        },\n        fill: {\n          opacity: 0\n        },\n        stroke: {\n          show: true,\n          colors: [_this3.props.color],\n          lineCap: \"round\"\n        },\n        markers: {\n          colors: _this3.props.theme === \"dark\" ? \"#424242\" : \"#fff\",\n          strokeWidth: 4,\n          strokeColors: _this3.props.color\n        },\n        tooltip: {\n          followCursor: true,\n          marker: {\n            show: false\n          },\n          x: {\n            show: false\n          },\n          y: {\n            formatter: function formatter(val) {\n              return \"\".concat(val, \" Tests\");\n            } // Format chart tooltip value\n\n          },\n          fixed: {\n            enabled: true,\n            position: \"topLeft\",\n            offsetY: -30\n          }\n        },\n        xaxis: {\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n          crosshairs: {\n            show: false\n          }\n        }\n      },\n      // Chart series data\n      series: [{\n        name: _this3.props.label,\n        data: _this3.props.series\n      }]\n    });\n\n    return _this3;\n  }\n\n  _createClass(Widget24Chart, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.theme !== prevProps.theme) {\n        var newState = this.state; // Change chart options\n\n        newState.options.theme = {\n          mode: this.props.theme,\n          palette: \"palette1\"\n        };\n        newState.options.markers.colors = this.props.theme === \"dark\" ? \"#424242\" : \"#fff\";\n        this.setState(newState);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          options = _this$state.options,\n          series = _this$state.series;\n      return __jsx(Chart, {\n        type: \"area\",\n        options: options,\n        series: series,\n        height: 50\n      });\n    }\n  }]);\n\n  return Widget24Chart;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.page.theme\n  };\n}\n\nexport default connect(mapStateToProps)(Widget24Component);","map":null,"metadata":{},"sourceType":"module"}