{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType } from \"./utils\";\nimport BreadcrumbItem from \"./BreadcrumbItem\";\nconst defaultProps = {\n  \"aria-label\": \"breadcrumb\",\n  listTag: \"ol\",\n  tag: \"nav\"\n};\n\nconst Breadcrumb = props => {\n  const {\n    \"aria-label\": label,\n    listClassName,\n    className,\n    cssModule,\n    children,\n    listTag: ListTag,\n    tag: Tag\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"aria-label\", \"listClassName\", \"className\", \"cssModule\", \"children\", \"listTag\", \"tag\"]);\n\n  const containerClasses = mapToCssModules(classNames(className), cssModule);\n  const listClasses = mapToCssModules(classNames(\"breadcrumb\", listClassName), cssModule);\n  return __jsx(Tag, _extends({}, attributes, {\n    className: containerClasses,\n    \"aria-label\": label\n  }), __jsx(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.defaultProps = defaultProps;\nBreadcrumb.Item = BreadcrumbItem;\nexport default Breadcrumb;","map":null,"metadata":{},"sourceType":"module"}