{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Portlet } from \"@panely/components\";\nimport { connect } from \"react-redux\";\nimport Chart from \"@panely/apexcharts\";\n\nclass Widget31Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      title: \"New users\",\n      subtitle: \"Last 6 months\"\n    });\n  }\n\n  render() {\n    const {\n      title,\n      subtitle\n    } = this.state;\n    return __jsx(Portlet, null, __jsx(Portlet.Body, null, __jsx(\"h4\", {\n      className: \"text-primary\",\n      children: title\n    }), __jsx(\"span\", {\n      className: \"text-muted\",\n      children: subtitle\n    }), __jsx(Widget31Chart, {\n      theme: this.props.theme\n    })));\n  }\n\n}\n\nclass Widget31Chart extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      // Chart options\n      options: {\n        theme: {\n          mode: this.props.theme,\n          palette: \"palette1\"\n        },\n        chart: {\n          sparkline: {\n            enabled: true\n          }\n        },\n        fill: {\n          opacity: 0\n        },\n        markers: {\n          strokeColors: this.props.theme === \"dark\" ? \"#424242\" : \"#fff\"\n        },\n        stroke: {\n          show: true,\n          colors: [\"#2196f3\"],\n          lineCap: \"round\"\n        },\n        tooltip: {\n          marker: {\n            show: false\n          }\n        },\n        xaxis: {\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n          crosshairs: {\n            show: false\n          }\n        }\n      },\n      // Chart series data\n      series: [{\n        name: \"Users\",\n        data: [640, 400, 760, 620, 980, 640]\n      }]\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.theme !== prevProps.theme) {\n      let newState = this.state; // Change chart options\n\n      newState.options.theme = {\n        mode: this.props.theme,\n        palette: \"palette1\"\n      };\n      newState.options.markers.strokeColors = this.props.theme === \"dark\" ? \"#424242\" : \"#fff\";\n      this.setState(newState);\n    }\n  }\n\n  render() {\n    const {\n      options,\n      series\n    } = this.state;\n    return __jsx(Chart, {\n      type: \"area\",\n      options: options,\n      series: series,\n      height: 150\n    });\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.page.theme\n  };\n}\n\nexport default connect(mapStateToProps)(Widget31Component);","map":null,"metadata":{},"sourceType":"module"}