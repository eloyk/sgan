{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Form, Label, Input, Button, Portlet, Container, FloatLabel, CustomInput, Widget12 } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport * as BrandsIcon from \"@fortawesome/free-brands-svg-icons\";\nimport * as yup from \"yup\";\nimport withLayout from \"components/layout/withLayout\";\nimport { useDispatch, useSelector } from \"react-redux\"; //import withAuth from \"components/firebase/firebaseWithAuth\"\n\nimport Link from \"next/link\";\nimport Head from \"next/head\";\n\nfunction LoginPage() {\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Login 2 | Panely\")), __jsx(Container, {\n    fluid: true\n  }, __jsx(Row, {\n    noGutters: true,\n    className: \"align-items-center justify-content-center h-100\"\n  }, __jsx(Col, {\n    lg: \"8\",\n    xl: \"6\"\n  }, __jsx(Portlet, {\n    className: \"overflow-hidden\"\n  }, __jsx(Row, {\n    noGutters: true\n  }, __jsx(Col, {\n    md: \"6\"\n  }, __jsx(Portlet.Body, {\n    className: \"d-flex flex-column justify-content-center align-items-start h-100 bg-primary text-white\"\n  }, __jsx(\"h2\", null, \"Welcome back!\"), __jsx(\"p\", null, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Labore, temporibus, repudiandae. Voluptate tempore, expedita placeat rem labore iste eveniet ratione.\"), __jsx(Link, {\n    href: \"/pages/register/register-2\"\n  }, __jsx(Button, {\n    pill: true,\n    variant: \"outline-light\",\n    size: \"lg\",\n    width: \"widest\"\n  }, \"Register\")))), __jsx(Col, {\n    md: \"6\"\n  }, __jsx(Portlet.Body, {\n    className: \"h-100\"\n  }, __jsx(\"div\", {\n    className: \"d-flex justify-content-center mb-4\"\n  }, __jsx(Button, {\n    pill: true,\n    variant: \"label-primary\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: BrandsIcon.faFacebook,\n    className: \"mr-2\"\n  }), \"Facebook\"), __jsx(Button, {\n    pill: true,\n    variant: \"label-info\",\n    className: \"mx-2\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: BrandsIcon.faGoogle,\n    className: \"mr-2\"\n  }), \"Google\"), __jsx(Button, {\n    pill: true,\n    variant: \"label-danger\",\n    className: \"mx-2\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: BrandsIcon.faPinterest,\n    className: \"mr-2\"\n  }), \"Pinterest\")), __jsx(LoginForm, null)))))))));\n}\n\nfunction LoginForm() {\n  // Loading state\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1]; // Define Yup schema for form validation\n\n\n  var schema = yup.object().shape({\n    email: yup.string().email(\"Your email is not valid\").required(\"Please enter your email\"),\n    password: yup.string().min(6, \"Please enter at least 6 characters\").required(\"Please provide your password\"),\n    remember: yup[\"boolean\"]()\n  });\n\n  var _useForm = useForm({\n    // Apply Yup as resolver for react-hook-form\n    resolver: yupResolver(schema),\n    // Define the default values for all input forms\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n      remember: false\n    }\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors; // Handle form submit event\n\n\n  var onSubmit = function onSubmit(_ref) {\n    var email = _ref.email,\n        password = _ref.password;\n    setLoading(true);\n\n    var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n        isLoggedIn = _useSelector.isLoggedIn;\n\n    var _useSelector2 = useSelector(function (state) {\n      return state.message;\n    }),\n        message = _useSelector2.message;\n\n    var dispatch = useDispatch();\n    dispatch(login(email, password)).then(function () {\n      Router.push(Router.query.redirect || PAGE.dashboardPagePath);\n    })[\"catch\"](function () {\n      setLoading(false);\n    });\n    setLoading(false);\n  };\n\n  if (isLoggedIn) {\n    return __jsx(Redirect, {\n      to: \"/profile\"\n    });\n  }\n\n  return __jsx(Form, {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(Form.Group, null, __jsx(FloatLabel, {\n    size: \"lg\"\n  }, __jsx(Controller, {\n    as: Input,\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    size: \"lg\",\n    control: control,\n    invalid: Boolean(errors.email),\n    placeholder: \"Please insert your email\"\n  }), __jsx(Label, {\n    \"for\": \"email\"\n  }, \"Email\"), errors.email && __jsx(Form.Feedback, {\n    children: errors.email.message\n  }))), __jsx(Form.Group, null, __jsx(FloatLabel, {\n    size: \"lg\"\n  }, __jsx(Controller, {\n    as: Input,\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    size: \"lg\",\n    control: control,\n    invalid: Boolean(errors.password),\n    placeholder: \"Please insert your password\"\n  }), __jsx(Label, {\n    \"for\": \"password\"\n  }, \"Password\"), errors.password && __jsx(Form.Feedback, {\n    children: errors.password.message\n  }))), __jsx(\"div\", {\n    className: \"d-flex align-items-center justify-content-between mb-4\"\n  }, __jsx(Form.Group, {\n    className: \"mb-0\"\n  }, __jsx(Controller, {\n    control: control,\n    name: \"remember\",\n    render: function render(_ref2) {\n      var _onChange = _ref2.onChange,\n          onBlur = _ref2.onBlur,\n          value = _ref2.value,\n          name = _ref2.name,\n          ref = _ref2.ref;\n      return __jsx(CustomInput, {\n        type: \"switch\",\n        size: \"lg\",\n        id: \"remember\",\n        label: \"Remember me\",\n        onBlur: onBlur,\n        onChange: function onChange(e) {\n          return _onChange(e.target.checked);\n        },\n        checked: value,\n        innerRef: ref\n      });\n    }\n  })), __jsx(Link, {\n    href: \"#\"\n  }, \"Forgot password?\")), __jsx(Button, {\n    block: true,\n    type: \"submit\",\n    variant: \"label-primary\",\n    size: \"lg\"\n  }, \"Login\"));\n}\n\nexport default withLayout(LoginPage, \"blank\");","map":null,"metadata":{},"sourceType":"module"}