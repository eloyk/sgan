{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\modules\\\\components\\\\GridNavItem.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\";\nconst propTypes = {\n  contentTag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  innerRef: refPropType,\n  disabled: PropTypes.bool,\n  iconTag: tagPropType,\n  active: PropTypes.bool,\n  icon: PropTypes.node,\n  tag: tagPropType\n};\nconst defaultProps = {\n  contentTag: \"div\",\n  iconTag: \"div\",\n  tag: \"div\"\n};\n\nconst GridNavItem = props => {\n  let {\n    contentTag: ContentTag,\n    className,\n    cssModule,\n    children,\n    innerRef,\n    disabled,\n    iconTag: IconTag,\n    active,\n    icon,\n    tag: Tag\n  } = props,\n      attributes = _objectWithoutProperties(props, [\"contentTag\", \"className\", \"cssModule\", \"children\", \"innerRef\", \"disabled\", \"iconTag\", \"active\", \"icon\", \"tag\"]);\n\n  if (attributes.href) {\n    Tag = \"a\";\n  }\n\n  const containerClasses = mapToCssModules(classNames(\"grid-nav-item\", {\n    active,\n    disabled\n  }, className), cssModule);\n  const contentClasses = mapToCssModules(classNames(\"grid-nav-content\"), cssModule);\n  const iconClasses = mapToCssModules(classNames(\"grid-nav-icon\"), cssModule);\n  return __jsx(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: containerClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), icon ? __jsx(IconTag, {\n    className: iconClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, icon) : null, __jsx(ContentTag, {\n    className: contentClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nGridNavItem.propTypes = propTypes;\nGridNavItem.defaultProps = defaultProps;\nexport default GridNavItem;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/modules/components/GridNavItem.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","refPropType","propTypes","contentTag","className","string","cssModule","object","children","node","innerRef","disabled","bool","iconTag","active","icon","tag","defaultProps","GridNavItem","props","ContentTag","IconTag","Tag","attributes","href","containerClasses","contentClasses","iconClasses"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,WAAvC,QAA0D,SAA1D;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAEH,WADI;AAEhBI,EAAAA,SAAS,EAAEP,SAAS,CAACQ,MAFL;AAGhBC,EAAAA,SAAS,EAAET,SAAS,CAACU,MAHL;AAIhBC,EAAAA,QAAQ,EAAEX,SAAS,CAACY,IAJJ;AAKhBC,EAAAA,QAAQ,EAAET,WALM;AAMhBU,EAAAA,QAAQ,EAAEd,SAAS,CAACe,IANJ;AAOhBC,EAAAA,OAAO,EAAEb,WAPO;AAQhBc,EAAAA,MAAM,EAAEjB,SAAS,CAACe,IARF;AAShBG,EAAAA,IAAI,EAAElB,SAAS,CAACY,IATA;AAUhBO,EAAAA,GAAG,EAAEhB;AAVW,CAAlB;AAaA,MAAMiB,YAAY,GAAG;AACnBd,EAAAA,UAAU,EAAE,KADO;AAEnBU,EAAAA,OAAO,EAAE,KAFU;AAGnBG,EAAAA,GAAG,EAAE;AAHc,CAArB;;AAMA,MAAME,WAAW,GAAGC,KAAK,IAAI;AAC3B,MAAI;AACFhB,IAAAA,UAAU,EAAEiB,UADV;AAEFhB,IAAAA,SAFE;AAGFE,IAAAA,SAHE;AAIFE,IAAAA,QAJE;AAKFE,IAAAA,QALE;AAMFC,IAAAA,QANE;AAOFE,IAAAA,OAAO,EAAEQ,OAPP;AAQFP,IAAAA,MARE;AASFC,IAAAA,IATE;AAUFC,IAAAA,GAAG,EAAEM;AAVH,MAYAH,KAZJ;AAAA,MAWKI,UAXL,4BAYIJ,KAZJ;;AAcA,MAAII,UAAU,CAACC,IAAf,EAAqB;AACnBF,IAAAA,GAAG,GAAG,GAAN;AACD;;AAED,QAAMG,gBAAgB,GAAG1B,eAAe,CACtCD,UAAU,CAAC,eAAD,EAAkB;AAAEgB,IAAAA,MAAF;AAAUH,IAAAA;AAAV,GAAlB,EAAwCP,SAAxC,CAD4B,EAEtCE,SAFsC,CAAxC;AAIA,QAAMoB,cAAc,GAAG3B,eAAe,CAACD,UAAU,CAAC,kBAAD,CAAX,EAAiCQ,SAAjC,CAAtC;AACA,QAAMqB,WAAW,GAAG5B,eAAe,CAACD,UAAU,CAAC,eAAD,CAAX,EAA8BQ,SAA9B,CAAnC;AAEA,SACE,MAAC,GAAD,eAASiB,UAAT;AAAqB,IAAA,GAAG,EAAEb,QAA1B;AAAoC,IAAA,SAAS,EAAEe,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGV,IAAI,GAAG,MAAC,OAAD;AAAS,IAAA,SAAS,EAAEY,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCZ,IAAlC,CAAH,GAAuD,IAD9D,EAEE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEW,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwClB,QAAxC,CAFF,CADF;AAMD,CAhCD;;AAkCAU,WAAW,CAAChB,SAAZ,GAAwBA,SAAxB;AACAgB,WAAW,CAACD,YAAZ,GAA2BA,YAA3B;AAEA,eAAeC,WAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\"\n\nconst propTypes = {\n  contentTag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  innerRef: refPropType,\n  disabled: PropTypes.bool,\n  iconTag: tagPropType,\n  active: PropTypes.bool,\n  icon: PropTypes.node,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  contentTag: \"div\",\n  iconTag: \"div\",\n  tag: \"div\"\n}\n\nconst GridNavItem = props => {\n  let {\n    contentTag: ContentTag,\n    className,\n    cssModule,\n    children,\n    innerRef,\n    disabled,\n    iconTag: IconTag,\n    active,\n    icon,\n    tag: Tag,\n    ...attributes\n  } = props\n\n  if (attributes.href) {\n    Tag = \"a\"\n  }\n\n  const containerClasses = mapToCssModules(\n    classNames(\"grid-nav-item\", { active, disabled }, className),\n    cssModule\n  )\n  const contentClasses = mapToCssModules(classNames(\"grid-nav-content\"), cssModule)\n  const iconClasses = mapToCssModules(classNames(\"grid-nav-icon\"), cssModule)\n\n  return (\n    <Tag {...attributes} ref={innerRef} className={containerClasses}>\n      {icon ? <IconTag className={iconClasses}>{icon}</IconTag> : null}\n      <ContentTag className={contentClasses}>{children}</ContentTag>\n    </Tag>\n  )\n}\n\nGridNavItem.propTypes = propTypes\nGridNavItem.defaultProps = defaultProps\n\nexport default GridNavItem\n"]},"metadata":{},"sourceType":"module"}