{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Row, Col, Badge, Button, Portlet, Container, DemoWrapper } from \"@panely/components\";\nimport { pageChangeHeaderTitle, breadcrumbChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport withLayout from \"components/layout/withLayout\"; //import withAuth from \"components/firebase/firebaseWithAuth\"\n\nimport Head from \"next/head\";\n\nvar BadgePage = /*#__PURE__*/function (_React$Component) {\n  _inherits(BadgePage, _React$Component);\n\n  var _super = _createSuper(BadgePage);\n\n  function BadgePage() {\n    _classCallCheck(this, BadgePage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BadgePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Set header title\n      this.props.pageChangeHeaderTitle(\"Badge\"); // Set breadcrumb data\n\n      this.props.breadcrumbChange([{\n        text: \"Dashboard\",\n        link: \"/\"\n      }, {\n        text: \"Elements\"\n      }, {\n        text: \"Base\"\n      }, {\n        text: \"Badge\",\n        link: \"/elements/base/badge\"\n      }]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Badge | Panely\")), __jsx(Container, {\n        fluid: true\n      }, __jsx(Row, null, __jsx(Col, {\n        xs: \"12\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Basic\")), __jsx(Portlet.Body, null, __jsx(Row, null, __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Solid\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Use \", __jsx(\"code\", null, \"variant\"), \" property to apply contextual colors\"), __jsx(DemoWrapper, null, __jsx(Badge, {\n        variant: \"primary\"\n      }, \"Primary\"), \" \", __jsx(Badge, {\n        variant: \"secondary\"\n      }, \"Secondary\"), \" \", __jsx(Badge, {\n        variant: \"success\"\n      }, \"Success\"), \" \", __jsx(Badge, {\n        variant: \"info\"\n      }, \"Info\"), \" \", __jsx(Badge, {\n        variant: \"warning\"\n      }, \"Warning\"), \" \", __jsx(Badge, {\n        variant: \"danger\"\n      }, \"Danger\"), \" \", __jsx(Badge, {\n        variant: \"dark\"\n      }, \"Dark\"), \" \", __jsx(Badge, {\n        variant: \"light\"\n      }, \"Light\")))), __jsx(Portlet, {\n        className: \"mb-md-0\"\n      }, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Outline\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Fill \", __jsx(\"code\", null, \"variant\"), \" property with \", __jsx(\"code\", null, \"outline-(color)\"), \" to apply these variants\"), __jsx(DemoWrapper, null, __jsx(Badge, {\n        variant: \"outline-primary\"\n      }, \"Primary\"), \" \", __jsx(Badge, {\n        variant: \"outline-secondary\"\n      }, \"Secondary\"), \" \", __jsx(Badge, {\n        variant: \"outline-success\"\n      }, \"Success\"), \" \", __jsx(Badge, {\n        variant: \"outline-info\"\n      }, \"Info\"), \" \", __jsx(Badge, {\n        variant: \"outline-warning\"\n      }, \"Warning\"), \" \", __jsx(Badge, {\n        variant: \"outline-danger\"\n      }, \"Danger\"), \" \", __jsx(Badge, {\n        variant: \"outline-dark\"\n      }, \"Dark\"), \" \", __jsx(Badge, {\n        variant: \"outline-light\"\n      }, \"Light\"))))), __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Label\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Fill \", __jsx(\"code\", null, \"variant\"), \" property with \", __jsx(\"code\", null, \"label-(color)\"), \" to apply these variants\"), __jsx(DemoWrapper, null, __jsx(Badge, {\n        variant: \"label-primary\"\n      }, \"Primary\"), \" \", __jsx(Badge, {\n        variant: \"label-secondary\"\n      }, \"Secondary\"), \" \", __jsx(Badge, {\n        variant: \"label-success\"\n      }, \"Success\"), \" \", __jsx(Badge, {\n        variant: \"label-info\"\n      }, \"Info\"), \" \", __jsx(Badge, {\n        variant: \"label-warning\"\n      }, \"Warning\"), \" \", __jsx(Badge, {\n        variant: \"label-danger\"\n      }, \"Danger\"), \" \", __jsx(Badge, {\n        variant: \"label-dark\"\n      }, \"Dark\"), \" \", __jsx(Badge, {\n        variant: \"label-light\"\n      }, \"Light\")))), __jsx(Portlet, {\n        className: \"mb-0\"\n      }, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Text\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Fill \", __jsx(\"code\", null, \"variant\"), \" property with \", __jsx(\"code\", null, \"text-(color)\"), \" to apply these variants\"), __jsx(DemoWrapper, null, __jsx(Badge, {\n        variant: \"text-primary\"\n      }, \"Primary\"), \" \", __jsx(Badge, {\n        variant: \"text-secondary\"\n      }, \"Secondary\"), \" \", __jsx(Badge, {\n        variant: \"text-success\"\n      }, \"Success\"), \" \", __jsx(Badge, {\n        variant: \"text-info\"\n      }, \"Info\"), \" \", __jsx(Badge, {\n        variant: \"text-warning\"\n      }, \"Warning\"), \" \", __jsx(Badge, {\n        variant: \"text-danger\"\n      }, \"Danger\"), \" \", __jsx(Badge, {\n        variant: \"text-dark\"\n      }, \"Dark\"), \" \", __jsx(Badge, {\n        variant: \"text-light\"\n      }, \"Light\")))))))))), __jsx(Row, null, __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Sizing\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Change your badges size by setting \", __jsx(\"code\", null, \"size\"), \" property with\", \" \", __jsx(\"code\", null, \"lg|xl\"), \" values.\"), __jsx(DemoWrapper, null, __jsx(Badge, {\n        variant: \"primary\"\n      }, \"Primary\"), \" \", __jsx(Badge, {\n        variant: \"secondary\"\n      }, \"Secondary\"), \" \", __jsx(Badge, {\n        variant: \"success\"\n      }, \"Success\"), \" \", __jsx(Badge, {\n        variant: \"info\"\n      }, \"Info\"), \" \", __jsx(Badge, {\n        variant: \"warning\"\n      }, \"Warning\"), \" \", __jsx(Badge, {\n        variant: \"danger\"\n      }, \"Danger\")), __jsx(\"div\", {\n        className: \"m-4\"\n      }), __jsx(DemoWrapper, null, __jsx(Badge, {\n        variant: \"primary\",\n        size: \"lg\"\n      }, \"Primary\"), \" \", __jsx(Badge, {\n        variant: \"secondary\",\n        size: \"lg\"\n      }, \"Secondary\"), \" \", __jsx(Badge, {\n        variant: \"success\",\n        size: \"lg\"\n      }, \"Success\"), \" \", __jsx(Badge, {\n        variant: \"info\",\n        size: \"lg\"\n      }, \"Info\"), \" \", __jsx(Badge, {\n        variant: \"warning\",\n        size: \"lg\"\n      }, \"Warning\"), \" \", __jsx(Badge, {\n        variant: \"danger\",\n        size: \"lg\"\n      }, \"Danger\")), __jsx(\"div\", {\n        className: \"m-4\"\n      }), __jsx(DemoWrapper, null, __jsx(Badge, {\n        variant: \"primary\",\n        size: \"xl\"\n      }, \"Primary\"), \" \", __jsx(Badge, {\n        variant: \"secondary\",\n        size: \"xl\"\n      }, \"Secondary\"), \" \", __jsx(Badge, {\n        variant: \"success\",\n        size: \"xl\"\n      }, \"Success\"), \" \", __jsx(Badge, {\n        variant: \"info\",\n        size: \"xl\"\n      }, \"Info\"), \" \", __jsx(Badge, {\n        variant: \"warning\",\n        size: \"xl\"\n      }, \"Warning\"), \" \", __jsx(Badge, {\n        variant: \"danger\",\n        size: \"xl\"\n      }, \"Danger\")))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Shaped badges\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Make your badge into a circle or square shape by setting \", __jsx(\"code\", null, \"shape\"), \" \", \"property with \", __jsx(\"code\", null, \"circle|square\"), \" values.\"), __jsx(Row, null, __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, {\n        className: \"mb-md-0\"\n      }, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Circle\")), __jsx(Portlet.Body, null, __jsx(DemoWrapper, null, __jsx(Badge, {\n        variant: \"primary\",\n        shape: \"circle\"\n      }, \"A\"), \" \", __jsx(Badge, {\n        variant: \"outline-secondary\",\n        size: \"lg\",\n        shape: \"circle\"\n      }, \"B\"), \" \", __jsx(Badge, {\n        variant: \"label-success\",\n        size: \"xl\",\n        shape: \"circle\"\n      }, \"C\"), \" \", __jsx(Badge, {\n        variant: \"warning\",\n        shape: \"circle\"\n      }, \"D\"), \" \", __jsx(Badge, {\n        variant: \"outline-danger\",\n        size: \"lg\",\n        shape: \"circle\"\n      }, \"E\"), \" \", __jsx(Badge, {\n        variant: \"label-dark\",\n        size: \"xl\",\n        shape: \"circle\"\n      }, \"F\"))))), __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, {\n        className: \"mb-0\"\n      }, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Square\")), __jsx(Portlet.Body, null, __jsx(DemoWrapper, null, __jsx(Badge, {\n        variant: \"primary\",\n        shape: \"square\"\n      }, \"A\"), \" \", __jsx(Badge, {\n        variant: \"outline-secondary\",\n        size: \"lg\",\n        shape: \"square\"\n      }, \"B\"), \" \", __jsx(Badge, {\n        variant: \"label-success\",\n        size: \"xl\",\n        shape: \"square\"\n      }, \"C\"), \" \", __jsx(Badge, {\n        variant: \"warning\",\n        shape: \"square\"\n      }, \"D\"), \" \", __jsx(Badge, {\n        variant: \"outline-danger\",\n        size: \"lg\",\n        shape: \"square\"\n      }, \"E\"), \" \", __jsx(Badge, {\n        variant: \"label-dark\",\n        size: \"xl\",\n        shape: \"square\"\n      }, \"F\"))))))))), __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Links\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"If you add \", __jsx(\"code\", null, \"href\"), \" property to the badge elements quickly provide\", \" \", __jsx(\"em\", null, \"actionable\"), \" badges with hover and focus states. Badge element will transform as \", __jsx(\"code\", null, \"<a>\"), \" tag\"), __jsx(DemoWrapper, null, __jsx(Badge, {\n        href: \"#\",\n        variant: \"primary\"\n      }, \"Primary\"), \" \", __jsx(Badge, {\n        href: \"#\",\n        variant: \"outline-secondary\"\n      }, \"Secondary\"), \" \", __jsx(Badge, {\n        href: \"#\",\n        variant: \"label-success\"\n      }, \"Success\"), \" \", __jsx(Badge, {\n        href: \"#\",\n        variant: \"label-info\"\n      }, \"Info\"), \" \", __jsx(Badge, {\n        href: \"#\",\n        variant: \"outline-warning\"\n      }, \"Warning\"), \" \", __jsx(Badge, {\n        href: \"#\",\n        variant: \"text-danger\"\n      }, \"Danger\"), \" \", __jsx(Badge, {\n        href: \"#\",\n        variant: \"text-dark\"\n      }, \"Dark\"), \" \", __jsx(Badge, {\n        href: \"#\",\n        variant: \"light\"\n      }, \"Light\")))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Pill badges\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Add \", __jsx(\"code\", null, \"pill\"), \" prooperty to make badge element more rounded.\"), __jsx(DemoWrapper, null, __jsx(Badge, {\n        pill: true,\n        variant: \"primary\"\n      }, \"Primary\"), \" \", __jsx(Badge, {\n        pill: true,\n        variant: \"secondary\"\n      }, \"Secondary\"), \" \", __jsx(Badge, {\n        pill: true,\n        variant: \"success\"\n      }, \"Success\"), \" \", __jsx(Badge, {\n        pill: true,\n        variant: \"info\"\n      }, \"Info\"), \" \", __jsx(Badge, {\n        pill: true,\n        variant: \"warning\"\n      }, \"Warning\"), \" \", __jsx(Badge, {\n        pill: true,\n        variant: \"danger\"\n      }, \"Danger\"), \" \", __jsx(Badge, {\n        pill: true,\n        variant: \"dark\"\n      }, \"Dark\"), \" \", __jsx(Badge, {\n        pill: true,\n        variant: \"light\"\n      }, \"Light\")))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Examples\")), __jsx(Portlet.Body, null, __jsx(Row, null, __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, {\n        className: \"mb-md-0\"\n      }, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Header with badge\")), __jsx(Portlet.Body, null, __jsx(\"h5\", {\n        className: \"mb-0\"\n      }, \"Heading \", __jsx(Badge, {\n        variant: \"primary\"\n      }, \"badge\"))))), __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, {\n        className: \"mb-0\"\n      }, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Badge inside button\")), __jsx(Portlet.Body, null, __jsx(Button, {\n        variant: \"primary\"\n      }, \"Notification \", __jsx(Badge, {\n        variant: \"secondary\"\n      }, \"+ 10\"))))))))))));\n    }\n  }]);\n\n  return BadgePage;\n}(React.Component);\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle: pageChangeHeaderTitle,\n    breadcrumbChange: breadcrumbChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withLayout(BadgePage));","map":null,"metadata":{},"sourceType":"module"}