{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport TYPES from \"store/types\";\nimport authMethod from \"../../services/auth.service\";\nconst user = authMethod.currenUser();\nconst initialState = user ? {\n  isLoggedIn: true,\n  user\n} : {\n  isLoggedIn: false,\n  user: null\n};\n\nfunction authReducer(state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case TYPES.REGISTER_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        user: payload.user\n      });\n\n    case TYPES.REGISTER_FAIL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false\n      });\n\n    case TYPES.LOGIN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        user: payload.user\n      });\n\n    case TYPES.LOGIN_FAIL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        user: null\n      });\n\n    case TYPES.LOGOUT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        user: null\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/store/reducers/authReducer.jsx"],"names":["TYPES","authMethod","user","currenUser","initialState","isLoggedIn","authReducer","state","action","type","payload","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,MAAMC,IAAI,GAAGD,UAAU,CAACE,UAAX,EAAb;AAEA,MAAMC,YAAY,GAAGF,IAAI,GACrB;AAAEG,EAAAA,UAAU,EAAE,IAAd;AAAoBH,EAAAA;AAApB,CADqB,GAErB;AAAEG,EAAAA,UAAU,EAAE,KAAd;AAAqBH,EAAAA,IAAI,EAAE;AAA3B,CAFJ;;AAIC,SAASI,WAAT,CAAqBC,KAAK,GAAGH,YAA7B,EAA2CI,MAA3C,EAAmD;AAClD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKT,KAAK,CAACW,gBAAX;AACE,6CACKJ,KADL;AAEEF,QAAAA,UAAU,EAAE,IAFd;AAGEH,QAAAA,IAAI,EAAEQ,OAAO,CAACR;AAHhB;;AAKF,SAAKF,KAAK,CAACY,aAAX;AACE,6CACKL,KADL;AAEEF,QAAAA,UAAU,EAAE;AAFd;;AAIF,SAAKL,KAAK,CAACa,aAAX;AACE,6CACKN,KADL;AAEEF,QAAAA,UAAU,EAAE,IAFd;AAGEH,QAAAA,IAAI,EAAEQ,OAAO,CAACR;AAHhB;;AAKF,SAAKF,KAAK,CAACc,UAAX;AACE,6CACKP,KADL;AAEEF,QAAAA,UAAU,EAAE,KAFd;AAGEH,QAAAA,IAAI,EAAE;AAHR;;AAKF,SAAKF,KAAK,CAACe,MAAX;AACE,6CACKR,KADL;AAEEF,QAAAA,UAAU,EAAE,KAFd;AAGEH,QAAAA,IAAI,EAAE;AAHR;;AAKF;AACE,aAAOK,KAAP;AA/BJ;AAiCD;;AAED,eAAeD,WAAf","sourcesContent":["import TYPES from \"store/types\"\r\nimport authMethod from \"../../services/auth.service\"\r\n\r\nconst user = authMethod.currenUser();\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\n function authReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case TYPES.REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user\r\n      };\r\n    case TYPES.REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case TYPES.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n      };\r\n    case TYPES.LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case TYPES.LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer"]},"metadata":{},"sourceType":"module"}