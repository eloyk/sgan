{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Row, Col, Portlet, Pagination, Container } from \"@panely/components\";\nimport { pageChangeHeaderTitle, breadcrumbChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport withLayout from \"components/layout/withLayout\"; //import withAuth from \"components/firebase/firebaseWithAuth\"\n\nimport Head from \"next/head\";\n\nvar PaginationPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(PaginationPage, _React$Component);\n\n  var _super = _createSuper(PaginationPage);\n\n  function PaginationPage() {\n    _classCallCheck(this, PaginationPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PaginationPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Set header title\n      this.props.pageChangeHeaderTitle(\"Pagination\"); // Set breadcrumb data\n\n      this.props.breadcrumbChange([{\n        text: \"Dashboard\",\n        link: \"/\"\n      }, {\n        text: \"Elements\"\n      }, {\n        text: \"Base\"\n      }, {\n        text: \"Pagination\",\n        link: \"/elements/base/pagination\"\n      }]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Pagination | Panely\")), __jsx(Container, {\n        fluid: true\n      }, __jsx(Row, null, __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Basic\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"We use a large block of connected links for our pagination, making links hard to miss and easily scalable\\u2014all while providing large hit areas.\"), __jsx(Pagination, null, __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Previous\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"1\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"2\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"3\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"4\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"5\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Next\"))))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Sizing\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Fancy larger or smaller pagination? Apply \", __jsx(\"code\", null, \"size\"), \" property for additional sizes.\"), __jsx(Pagination, {\n        size: \"lg\",\n        className: \"mb-3\"\n      }, __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Previous\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"1\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"2\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"3\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Next\"))), __jsx(Pagination, {\n        className: \"mb-3\"\n      }, __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Previous\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"1\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"2\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"3\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Next\"))), __jsx(Pagination, {\n        size: \"sm\"\n      }, __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Previous\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"1\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"2\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"3\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Next\")))))), __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Disabled and active states\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Pagination links are customizable for different circumstances. Use\", \" \", __jsx(\"code\", null, \"disabled\"), \" for links that appear un-clickable and \", __jsx(\"code\", null, \"active\"), \" \", \"to indicate the current page.\"), __jsx(Pagination, null, __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Previous\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"1\")), __jsx(Pagination.Item, {\n        active: true\n      }, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"2\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"3\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"4\")), __jsx(Pagination.Item, {\n        disabled: true\n      }, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"5\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Next\"))))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Alignments\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Change the alignment of pagination component with flexbox utilities.\"), __jsx(Pagination, {\n        className: \"mb-3\"\n      }, __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Previous\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"1\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"2\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"3\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"4\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"5\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Next\"))), __jsx(Pagination, {\n        listClassName: \"justify-content-center\",\n        className: \"mb-3\"\n      }, __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Previous\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"1\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"2\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"3\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"4\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"5\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Next\"))), __jsx(Pagination, {\n        listClassName: \"justify-content-end\"\n      }, __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Previous\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"1\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"2\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"3\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"4\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"5\")), __jsx(Pagination.Item, null, __jsx(Pagination.Link, {\n        href: \"#\"\n      }, \"Next\")))))))));\n    }\n  }]);\n\n  return PaginationPage;\n}(React.Component);\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle: pageChangeHeaderTitle,\n    breadcrumbChange: breadcrumbChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withLayout(PaginationPage));","map":null,"metadata":{},"sourceType":"module"}