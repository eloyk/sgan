{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Badge, Marker, Avatar, Portlet, Container, AvatarGroup, DemoWrapper } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { pageChangeHeaderTitle, breadcrumbChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport withLayout from \"components/layout/withLayout\";\nimport withAuth from \"components/firebase/firebaseWithAuth\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\n\nclass AvatarPage extends React.Component {\n  componentDidMount() {\n    // Set header title\n    this.props.pageChangeHeaderTitle(\"Avatar\"); // Set breadcrumb data\n\n    this.props.breadcrumbChange([{\n      text: \"Dashboard\",\n      link: \"/\"\n    }, {\n      text: \"Elements\"\n    }, {\n      text: \"Advanced\"\n    }, {\n      text: \"Avatar\",\n      link: \"/elements/advanced/avatar\"\n    }]);\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Avatar | Panely\")), __jsx(Container, {\n      fluid: true\n    }, __jsx(Row, null, __jsx(Col, {\n      md: \"6\"\n    }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Basic\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, __jsx(\"strong\", null, \"Avatar\"), \" can be used for displaying image, icon, or character on square or circle shaped elements. Put image, icon, or character into\", \" \", __jsx(\"code\", null, \"Avatar.Display\"), \" or add \", __jsx(\"code\", null, \"display\"), \" property to\", \" \", __jsx(\"code\", null, \"Avatar\"), \" component. Look the example below.\"), __jsx(DemoWrapper, null, __jsx(Avatar, {\n      display: true\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true\n    }, __jsx(\"img\", {\n      src: \"/images/avatar/blank.webp\",\n      alt: \"Avatar Image\"\n    })), __jsx(Avatar, {\n      display: true\n    }, \"C\")))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Circle version\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Extend default avatar element with \", __jsx(\"code\", null, \"circle\"), \" property to change its shape to be circular.\"), __jsx(DemoWrapper, null, __jsx(Avatar, {\n      display: true,\n      circle: true\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      circle: true\n    }, __jsx(\"img\", {\n      src: \"/images/avatar/blank.webp\",\n      alt: \"Avatar Image\"\n    })), __jsx(Avatar, {\n      display: true,\n      circle: true\n    }, \"C\")))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Sizing\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"If you want to change avatar size, you can use \", __jsx(\"code\", null, \"size\"), \" property with\", \" \", __jsx(\"code\", null, \"sm|lg\"), \" values.\"), __jsx(DemoWrapper, null, __jsx(Avatar, {\n      display: true,\n      variant: \"primary\",\n      size: \"sm\"\n    }, \"A\"), __jsx(Avatar, {\n      display: true,\n      variant: \"primary\"\n    }, \"B\"), __jsx(Avatar, {\n      display: true,\n      variant: \"primary\",\n      size: \"lg\"\n    }, \"C\"), __jsx(Avatar, {\n      display: true,\n      circle: true,\n      variant: \"primary\",\n      size: \"sm\"\n    }, \"A\"), __jsx(Avatar, {\n      display: true,\n      circle: true,\n      variant: \"primary\"\n    }, \"B\"), __jsx(Avatar, {\n      display: true,\n      circle: true,\n      variant: \"primary\",\n      size: \"lg\"\n    }, \"C\")))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Group\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Wrap a series of avatar elements into \", __jsx(\"code\", null, \"AvatarGroup\"), \" to group the elements. Instead of applying avatar sizing classes to every avatar in a group, just set \", __jsx(\"code\", null, \"size\"), \" property to each \", __jsx(\"code\", null, \"AvatarGroup\")), __jsx(DemoWrapper, null, __jsx(AvatarGroup, {\n      size: \"sm\"\n    }, __jsx(Avatar, {\n      display: true,\n      circle: true,\n      variant: \"primary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      circle: true,\n      variant: \"secondary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      circle: true,\n      variant: \"success\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      circle: true,\n      variant: \"danger\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    }))), __jsx(AvatarGroup, null, __jsx(Avatar, {\n      display: true,\n      circle: true,\n      variant: \"primary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      circle: true,\n      variant: \"secondary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      circle: true,\n      variant: \"success\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      circle: true,\n      variant: \"danger\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    }))), __jsx(AvatarGroup, {\n      size: \"lg\"\n    }, __jsx(Avatar, {\n      display: true,\n      circle: true,\n      variant: \"primary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      circle: true,\n      variant: \"secondary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      circle: true,\n      variant: \"success\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      circle: true,\n      variant: \"danger\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    }))))))), __jsx(Col, {\n      md: \"6\"\n    }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Contextual colors\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Change avatar color for functionality, check examples below.\"), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Solid\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"You can use those by setting \", __jsx(\"code\", null, \"variant\"), \" property to avatar element\"), __jsx(DemoWrapper, null, __jsx(Avatar, {\n      display: true,\n      variant: \"primary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      variant: \"secondary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      variant: \"info\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      variant: \"success\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      variant: \"warning\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      variant: \"danger\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      variant: \"light\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      variant: \"dark\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    }))))), __jsx(Portlet, {\n      className: \"mb-0\"\n    }, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Label\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"For these variant, you can use \", __jsx(\"code\", null, \"label-(color)\"), \" in\", \" \", __jsx(\"code\", null, \"variant\"), \" property\"), __jsx(DemoWrapper, null, __jsx(Avatar, {\n      display: true,\n      variant: \"label-primary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      variant: \"label-secondary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      variant: \"label-info\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      variant: \"label-success\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      variant: \"label-warning\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      variant: \"label-danger\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      variant: \"label-light\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar, {\n      display: true,\n      variant: \"label-dark\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    }))))))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Addon\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Addon can be replaced to \", __jsx(\"strong\", null, \"top-left\"), \" or\", \" \", __jsx(\"strong\", null, \"bottom-right\"), \" of avatar element. Use \", __jsx(\"code\", null, \"Avatar.Addon\"), \" \", \"and you must set \", __jsx(\"code\", null, \"position\"), \" property to set placement. You can put\", \" \", __jsx(Link, {\n      href: \"/elements/base/badge\"\n    }, \"badge\"), \" or\", \" \", __jsx(Link, {\n      href: \"/elements/base/marker\"\n    }, \"marker\"), \" into avatar addon.\"), __jsx(DemoWrapper, null, __jsx(Avatar, {\n      variant: \"primary\"\n    }, __jsx(Avatar.Addon, {\n      position: \"top\"\n    }, __jsx(Marker, {\n      type: \"dot\",\n      variant: \"success\"\n    })), __jsx(Avatar.Display, null, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    }))), __jsx(Avatar, {\n      variant: \"primary\"\n    }, __jsx(Avatar.Display, null, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar.Addon, {\n      position: \"bottom\"\n    }, __jsx(Marker, {\n      type: \"dot\",\n      variant: \"success\"\n    }))), __jsx(Avatar, {\n      circle: true,\n      variant: \"primary\"\n    }, __jsx(Avatar.Addon, {\n      position: \"top\"\n    }, __jsx(Avatar.Icon, {\n      variant: \"danger\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faCheck\n    }))), __jsx(Avatar.Display, null, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    }))), __jsx(Avatar, {\n      variant: \"primary\"\n    }, __jsx(Avatar.Display, null, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar.Addon, {\n      position: \"bottom\"\n    }, __jsx(Avatar.Icon, {\n      variant: \"success\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faStar\n    })))), __jsx(Avatar, {\n      variant: \"primary\"\n    }, __jsx(Avatar.Addon, {\n      position: \"top\"\n    }, __jsx(Avatar.Badge, {\n      pill: true,\n      variant: \"danger\"\n    }, \"9+\")), __jsx(Avatar.Display, null, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    }))), __jsx(Avatar, {\n      variant: \"primary\"\n    }, __jsx(Avatar.Display, null, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUser\n    })), __jsx(Avatar.Addon, {\n      position: \"bottom\"\n    }, __jsx(Avatar.Badge, {\n      pill: true,\n      variant: \"success\"\n    }, \"9+\"))))))))));\n  }\n\n}\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle,\n    breadcrumbChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withAuth(withLayout(AvatarPage)));","map":null,"metadata":{},"sourceType":"module"}