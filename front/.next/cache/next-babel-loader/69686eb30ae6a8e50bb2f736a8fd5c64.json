{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\CustomInput.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, refPropType } from \"./utils\";\nimport CustomFileInput from \"./CustomFileInput\";\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: refPropType,\n  htmlFor: PropTypes.string,\n  invalid: PropTypes.bool,\n  valid: PropTypes.bool,\n  inline: PropTypes.bool,\n  label: PropTypes.node,\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\n  type: PropTypes.string.isRequired,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\n\nconst CustomInput = props => {\n  const {\n    className,\n    cssModule,\n    children,\n    innerRef,\n    htmlFor,\n    invalid,\n    valid,\n    inline,\n    label,\n    size,\n    type\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"children\", \"innerRef\", \"htmlFor\", \"invalid\", \"valid\", \"inline\", \"label\", \"size\", \"type\"]);\n\n  let sizeClass = false;\n\n  if (size) {\n    if (type === \"checkbox\" || type === \"radio\" || type === \"switch\") {\n      sizeClass = `custom-control-${size}`;\n    } else {\n      sizeClass = `custom-${type}-${size}`;\n    }\n  }\n\n  const customClass = mapToCssModules(classNames(`custom-${type}`, sizeClass, className), cssModule);\n  const validationClassNames = mapToCssModules(classNames(invalid && \"is-invalid\", valid && \"is-valid\"), cssModule);\n  const labelHtmlFor = htmlFor || attributes.id;\n\n  if (type === \"select\") {\n    const {\n      type\n    } = attributes,\n          rest = _objectWithoutProperties(attributes, [\"type\"]);\n\n    return __jsx(\"select\", _extends({}, rest, {\n      type: type,\n      ref: innerRef,\n      className: classNames(validationClassNames, customClass),\n      \"aria-invalid\": invalid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }), children);\n  }\n\n  if (type === \"file\") {\n    return __jsx(CustomFileInput, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  if (type !== \"checkbox\" && type !== \"radio\" && type !== \"switch\") {\n    return __jsx(\"input\", _extends({}, attributes, {\n      type: type,\n      ref: innerRef,\n      \"aria-invalid\": invalid,\n      className: classNames(validationClassNames, customClass),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  const wrapperClasses = classNames(customClass, mapToCssModules(classNames(\"custom-control\", {\n    \"custom-control-inline\": inline\n  }), cssModule));\n\n  const {\n    hidden\n  } = attributes,\n        rest = _objectWithoutProperties(attributes, [\"hidden\"]);\n\n  return __jsx(\"div\", {\n    className: wrapperClasses,\n    hidden: hidden || false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", _extends({}, rest, {\n    type: type === \"switch\" ? \"checkbox\" : type,\n    ref: innerRef,\n    \"aria-invalid\": invalid,\n    className: classNames(validationClassNames, mapToCssModules(\"custom-control-input\", cssModule)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  })), __jsx(\"label\", {\n    className: mapToCssModules(\"custom-control-label\", cssModule),\n    htmlFor: labelHtmlFor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, label), children);\n};\n\nCustomInput.propTypes = propTypes;\nexport default CustomInput;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/CustomInput.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","refPropType","CustomFileInput","propTypes","className","string","cssModule","object","children","oneOfType","node","array","func","innerRef","htmlFor","invalid","bool","valid","inline","label","size","oneOf","type","isRequired","id","number","CustomInput","props","attributes","sizeClass","customClass","validationClassNames","labelHtmlFor","rest","wrapperClasses","hidden"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, refPropType } from \"./utils\"\nimport CustomFileInput from \"./CustomFileInput\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: refPropType,\n  htmlFor: PropTypes.string,\n  invalid: PropTypes.bool,\n  valid: PropTypes.bool,\n  inline: PropTypes.bool,\n  label: PropTypes.node,\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\n  type: PropTypes.string.isRequired,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n}\n\nconst CustomInput = props => {\n  const {\n    className,\n    cssModule,\n    children,\n    innerRef,\n    htmlFor,\n    invalid,\n    valid,\n    inline,\n    label,\n    size,\n    type,\n    ...attributes\n  } = props\n\n  let sizeClass = false\n\n  if (size) {\n    if (type === \"checkbox\" || type === \"radio\" || type === \"switch\") {\n      sizeClass = `custom-control-${size}`\n    } else {\n      sizeClass = `custom-${type}-${size}`\n    }\n  }\n\n  const customClass = mapToCssModules(classNames(`custom-${type}`, sizeClass, className), cssModule)\n\n  const validationClassNames = mapToCssModules(\n    classNames(invalid && \"is-invalid\", valid && \"is-valid\"),\n    cssModule\n  )\n\n  const labelHtmlFor = htmlFor || attributes.id\n\n  if (type === \"select\") {\n    const { type, ...rest } = attributes\n    return (\n      <select\n        {...rest}\n        type={type}\n        ref={innerRef}\n        className={classNames(validationClassNames, customClass)}\n        aria-invalid={invalid}\n      >\n        {children}\n      </select>\n    )\n  }\n\n  if (type === \"file\") {\n    return <CustomFileInput {...props} />\n  }\n\n  if (type !== \"checkbox\" && type !== \"radio\" && type !== \"switch\") {\n    return (\n      <input\n        {...attributes}\n        type={type}\n        ref={innerRef}\n        aria-invalid={invalid}\n        className={classNames(validationClassNames, customClass)}\n      />\n    )\n  }\n\n  const wrapperClasses = classNames(\n    customClass,\n    mapToCssModules(classNames(\"custom-control\", { \"custom-control-inline\": inline }), cssModule)\n  )\n\n  const { hidden, ...rest } = attributes\n  return (\n    <div className={wrapperClasses} hidden={hidden || false}>\n      <input\n        {...rest}\n        type={type === \"switch\" ? \"checkbox\" : type}\n        ref={innerRef}\n        aria-invalid={invalid}\n        className={classNames(\n          validationClassNames,\n          mapToCssModules(\"custom-control-input\", cssModule)\n        )}\n      />\n      <label className={mapToCssModules(\"custom-control-label\", cssModule)} htmlFor={labelHtmlFor}>\n        {label}\n      </label>\n      {children}\n    </div>\n  )\n}\n\nCustomInput.propTypes = propTypes\n\nexport default CustomInput\n"]},"metadata":{},"sourceType":"module"}