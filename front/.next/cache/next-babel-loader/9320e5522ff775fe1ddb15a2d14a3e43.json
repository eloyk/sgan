{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\modules\\\\components\\\\CardBody.jsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\";\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  blockquote: PropTypes.bool,\n  innerRef: refPropType,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: \"div\"\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      blockquote = props.blockquote,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"blockquote\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(\"card-body\", {\n    blockquote: blockquote\n  }, className), cssModule);\n\n  if (blockquote) {\n    Tag = \"blockquote\";\n  }\n\n  return __jsx(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }));\n};\n\n_c = CardBody;\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardBody\");","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/modules/components/CardBody.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","refPropType","propTypes","className","string","cssModule","object","blockquote","bool","innerRef","tag","defaultProps","CardBody","props","Tag","attributes","classes"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,WAAvC,QAA0D,SAA1D;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEN,SAAS,CAACO,MADL;AAEhBC,EAAAA,SAAS,EAAER,SAAS,CAACS,MAFL;AAGhBC,EAAAA,UAAU,EAAEV,SAAS,CAACW,IAHN;AAIhBC,EAAAA,QAAQ,EAAER,WAJM;AAKhBS,EAAAA,GAAG,EAAEV;AALW,CAAlB;AAQA,IAAMW,YAAY,GAAG;AACnBD,EAAAA,GAAG,EAAE;AADc,CAArB;;AAIA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAAA,MAClBV,SADkB,GACsDU,KADtD,CAClBV,SADkB;AAAA,MACPE,SADO,GACsDQ,KADtD,CACPR,SADO;AAAA,MACIE,UADJ,GACsDM,KADtD,CACIN,UADJ;AAAA,MACgBE,QADhB,GACsDI,KADtD,CACgBJ,QADhB;AAAA,MAC+BK,GAD/B,GACsDD,KADtD,CAC0BH,GAD1B;AAAA,MACuCK,UADvC,4BACsDF,KADtD;;AAGxB,MAAMG,OAAO,GAAGjB,eAAe,CAC7BD,UAAU,CAAC,WAAD,EAAc;AAAES,IAAAA,UAAU,EAAEA;AAAd,GAAd,EAA0CJ,SAA1C,CADmB,EAE7BE,SAF6B,CAA/B;;AAKA,MAAIE,UAAJ,EAAgB;AACdO,IAAAA,GAAG,GAAG,YAAN;AACD;;AAED,SAAO,MAAC,GAAD,eAASC,UAAT;AAAqB,IAAA,SAAS,EAAEC,OAAhC;AAAyC,IAAA,GAAG,EAAEP,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAbD;;KAAMG,Q;AAeNA,QAAQ,CAACV,SAAT,GAAqBA,SAArB;AACAU,QAAQ,CAACD,YAAT,GAAwBA,YAAxB;AAEA,eAAeC,QAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  blockquote: PropTypes.bool,\n  innerRef: refPropType,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  tag: \"div\"\n}\n\nconst CardBody = props => {\n  let { className, cssModule, blockquote, innerRef, tag: Tag, ...attributes } = props\n\n  const classes = mapToCssModules(\n    classNames(\"card-body\", { blockquote: blockquote }, className),\n    cssModule\n  )\n\n  if (blockquote) {\n    Tag = \"blockquote\"\n  }\n\n  return <Tag {...attributes} className={classes} ref={innerRef} />\n}\n\nCardBody.propTypes = propTypes\nCardBody.defaultProps = defaultProps\n\nexport default CardBody\n"]},"metadata":{},"sourceType":"module"}