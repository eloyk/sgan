{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Nav, Tab, Button, Portlet, RichList, Dropdown, Widget1, Widget2 } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport Link from \"next/link\";\n\nclass Widget1Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      highlight: \"$237,650\",\n      buttonLink: \"#\",\n      buttonText: \"All Earnings\"\n    });\n  }\n\n  render() {\n    const {\n      highlight,\n      buttonLink,\n      buttonText\n    } = this.state;\n    return __jsx(Widget1, null, __jsx(Widget1.Display, {\n      top: true,\n      size: \"lg\",\n      className: \"bg-primary text-white\"\n    }, __jsx(Widget1.Group, null, __jsx(Widget1.Title, null, \"Company income\"), __jsx(Widget1.Addon, null, __jsx(Dropdown.Uncontrolled, null, __jsx(Dropdown.Toggle, {\n      caret: true,\n      variant: \"label-light\",\n      children: \"Option\"\n    }), __jsx(Dropdown.Menu, {\n      right: true,\n      animated: true\n    }, __jsx(Dropdown.Item, {\n      icon: __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faPoll\n      })\n    }, \"Report\"), __jsx(Dropdown.Item, {\n      icon: __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faChartPie\n      })\n    }, \"Charts\"), __jsx(Dropdown.Item, {\n      icon: __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faChartLine\n      })\n    }, \"Statistics\"), __jsx(Dropdown.Item, {\n      icon: __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faCog\n      })\n    }, \"Settings\"))))), __jsx(Widget1.Dialog, null, __jsx(Widget1.DialogContent, null, __jsx(\"h1\", {\n      className: \"display-3\",\n      children: highlight\n    }))), __jsx(Widget1.Offset, null, __jsx(Link, {\n      href: buttonLink\n    }, __jsx(Button, {\n      pill: true,\n      variant: \"flat-secondary\",\n      size: \"lg\",\n      width: \"widest\",\n      height: \"tallest\",\n      children: buttonText\n    })))), __jsx(Widget1.Body, {\n      className: \"pt-5\"\n    }, __jsx(Widget1Tab, null)));\n  }\n\n}\n\nclass Widget1Tab extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      // Default active tab id\n      activeTab: 0,\n      // Tabs data\n      tabs: [{\n        time: \"March\",\n        data: [{\n          highlight: \"$23,050\",\n          title: \"Annual companies taxes\"\n        }, {\n          highlight: \"$46,50\",\n          title: \"Avarage product price\"\n        }, {\n          highlight: \"$260,700\",\n          title: \"Total annual profit before tax\"\n        }]\n      }, {\n        time: \"April\",\n        data: [{\n          highlight: \"$13,000\",\n          title: \"Annual companies taxes\"\n        }, {\n          highlight: \"$34,00\",\n          title: \"Avarage product price\"\n        }, {\n          highlight: \"$350,650\",\n          title: \"Total annual profit before tax\"\n        }]\n      }, {\n        time: \"Mei\",\n        data: [{\n          highlight: \"$3,050\",\n          title: \"Annual companies taxes\"\n        }, {\n          highlight: \"$16,20\",\n          title: \"Avarage product price\"\n        }, {\n          highlight: \"$135,500\",\n          title: \"Total annual profit before tax\"\n        }]\n      }, {\n        time: \"June\",\n        data: [{\n          highlight: \"$56,650\",\n          title: \"Annual companies taxes\"\n        }, {\n          highlight: \"$35,50\",\n          title: \"Avarage product price\"\n        }, {\n          highlight: \"$341,080\",\n          title: \"Total annual profit before tax\"\n        }]\n      }]\n    });\n\n    _defineProperty(this, \"toggle\", id => {\n      if (this.state.activeTab !== id) {\n        this.setState({\n          activeTab: id\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Widget2, {\n      justified: true,\n      size: \"lg\",\n      className: \"mb-4\"\n    }, this.state.tabs.map((data, index) => __jsx(Nav.Item, {\n      key: index,\n      active: this.state.activeTab === index,\n      onClick: () => this.toggle(index),\n      children: data.time\n    }))), __jsx(Tab, {\n      activeTab: this.state.activeTab\n    }, this.state.tabs.map((tab, index) => __jsx(Tab.Pane, {\n      key: index,\n      tabId: index\n    }, __jsx(Portlet, {\n      className: \"mb-0\"\n    }, __jsx(RichList, {\n      flush: true\n    }, tab.data.map((data, index) => {\n      const {\n        highlight,\n        title\n      } = data;\n      return __jsx(RichList.Item, {\n        key: index\n      }, __jsx(RichList.Content, null, __jsx(RichList.Title, {\n        children: highlight\n      }), __jsx(RichList.Subtitle, {\n        children: title\n      })));\n    })))))));\n  }\n\n}\n\nexport default Widget1Component;","map":null,"metadata":{},"sourceType":"module"}