{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\slick\\\\dots.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport { clamp } from \"./utils/innerSliderUtils\";\n\nvar getDotCount = function getDotCount(spec) {\n  var dots;\n\n  if (spec.infinite) {\n    dots = Math.ceil(spec.slideCount / spec.slidesToScroll);\n  } else {\n    dots = Math.ceil((spec.slideCount - spec.slidesToShow) / spec.slidesToScroll) + 1;\n  }\n\n  return dots;\n};\n\nexport var Dots = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Dots, _React$PureComponent);\n\n  var _super = _createSuper(Dots);\n\n  function Dots() {\n    _classCallCheck(this, Dots);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Dots, [{\n    key: \"clickHandler\",\n    value: function clickHandler(options, e) {\n      // In Autoplay the focus stays on clicked button even after transition\n      // to next slide. That only goes away by click somewhere outside\n      e.preventDefault();\n      this.props.clickHandler(options);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onMouseEnter = _this$props.onMouseEnter,\n          onMouseOver = _this$props.onMouseOver,\n          onMouseLeave = _this$props.onMouseLeave,\n          infinite = _this$props.infinite,\n          slidesToScroll = _this$props.slidesToScroll,\n          slidesToShow = _this$props.slidesToShow,\n          slideCount = _this$props.slideCount,\n          currentSlide = _this$props.currentSlide;\n      var dotCount = getDotCount({\n        slideCount: slideCount,\n        slidesToScroll: slidesToScroll,\n        slidesToShow: slidesToShow,\n        infinite: infinite\n      });\n      var mouseEvents = {\n        onMouseEnter: onMouseEnter,\n        onMouseOver: onMouseOver,\n        onMouseLeave: onMouseLeave\n      };\n      var dots = [];\n\n      for (var i = 0; i < dotCount; i++) {\n        var _rightBound = (i + 1) * slidesToScroll - 1;\n\n        var rightBound = infinite ? _rightBound : clamp(_rightBound, 0, slideCount - 1);\n\n        var _leftBound = rightBound - (slidesToScroll - 1);\n\n        var leftBound = infinite ? _leftBound : clamp(_leftBound, 0, slideCount - 1);\n        var className = classnames({\n          \"slick-active\": infinite ? currentSlide >= leftBound && currentSlide <= rightBound : currentSlide === leftBound\n        });\n        var dotOptions = {\n          message: \"dots\",\n          index: i,\n          slidesToScroll: slidesToScroll,\n          currentSlide: currentSlide\n        };\n        var onClick = this.clickHandler.bind(this, dotOptions);\n        dots = dots.concat(__jsx(\"li\", {\n          key: i,\n          className: className,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.cloneElement(this.props.customPaging(i), {\n          onClick: onClick\n        })));\n      }\n\n      return /*#__PURE__*/React.cloneElement(this.props.appendDots(dots), _objectSpread({\n        className: this.props.dotsClass\n      }, mouseEvents));\n    }\n  }]);\n\n  return Dots;\n}(React.PureComponent);","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/slick/dots.jsx"],"names":["React","classnames","clamp","getDotCount","spec","dots","infinite","Math","ceil","slideCount","slidesToScroll","slidesToShow","Dots","options","e","preventDefault","props","clickHandler","onMouseEnter","onMouseOver","onMouseLeave","currentSlide","dotCount","mouseEvents","i","_rightBound","rightBound","_leftBound","leftBound","className","dotOptions","message","index","onClick","bind","concat","cloneElement","customPaging","appendDots","dotsClass","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport classnames from \"classnames\"\nimport { clamp } from \"./utils/innerSliderUtils\"\n\nconst getDotCount = spec => {\n  let dots\n\n  if (spec.infinite) {\n    dots = Math.ceil(spec.slideCount / spec.slidesToScroll)\n  } else {\n    dots = Math.ceil((spec.slideCount - spec.slidesToShow) / spec.slidesToScroll) + 1\n  }\n\n  return dots\n}\n\nexport class Dots extends React.PureComponent {\n  clickHandler(options, e) {\n    // In Autoplay the focus stays on clicked button even after transition\n    // to next slide. That only goes away by click somewhere outside\n    e.preventDefault()\n    this.props.clickHandler(options)\n  }\n  render() {\n    const {\n      onMouseEnter,\n      onMouseOver,\n      onMouseLeave,\n      infinite,\n      slidesToScroll,\n      slidesToShow,\n      slideCount,\n      currentSlide\n    } = this.props\n    let dotCount = getDotCount({\n      slideCount,\n      slidesToScroll,\n      slidesToShow,\n      infinite\n    })\n\n    const mouseEvents = { onMouseEnter, onMouseOver, onMouseLeave }\n    let dots = []\n    for (let i = 0; i < dotCount; i++) {\n      let _rightBound = (i + 1) * slidesToScroll - 1\n      let rightBound = infinite ? _rightBound : clamp(_rightBound, 0, slideCount - 1)\n      let _leftBound = rightBound - (slidesToScroll - 1)\n      let leftBound = infinite ? _leftBound : clamp(_leftBound, 0, slideCount - 1)\n\n      let className = classnames({\n        \"slick-active\": infinite\n          ? currentSlide >= leftBound && currentSlide <= rightBound\n          : currentSlide === leftBound\n      })\n\n      let dotOptions = {\n        message: \"dots\",\n        index: i,\n        slidesToScroll,\n        currentSlide\n      }\n\n      let onClick = this.clickHandler.bind(this, dotOptions)\n      dots = dots.concat(\n        <li key={i} className={className}>\n          {React.cloneElement(this.props.customPaging(i), { onClick })}\n        </li>\n      )\n    }\n\n    return React.cloneElement(this.props.appendDots(dots), {\n      className: this.props.dotsClass,\n      ...mouseEvents\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}