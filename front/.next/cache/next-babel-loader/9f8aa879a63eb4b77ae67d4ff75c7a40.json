{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\modules\\\\components\\\\Input.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, warnOnce, tagPropType, refPropType } from \"./utils\";\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  innerRef: refPropType,\n  plainText: PropTypes.bool,\n  invalid: PropTypes.bool,\n  valid: PropTypes.bool,\n  addon: PropTypes.bool,\n  size: PropTypes.oneOf([\"lg\", \"sm\"]),\n  type: PropTypes.string,\n  tag: tagPropType\n};\nvar defaultProps = {\n  type: \"text\"\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inherits(Input, _React$Component);\n\n  var _super = _createSuper(Input);\n\n  function Input(props) {\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    _this = _super.call(this, props);\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"getRef\",\n    value: function getRef(ref) {\n      if (this.props.innerRef) {\n        this.props.innerRef(ref);\n      }\n\n      this.ref = ref;\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (this.ref) {\n        this.ref.focus();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          cssModule = _this$props.cssModule,\n          plainText = _this$props.plainText,\n          innerRef = _this$props.innerRef,\n          invalid = _this$props.invalid,\n          valid = _this$props.valid,\n          addon = _this$props.addon,\n          size = _this$props.size,\n          type = _this$props.type,\n          tag = _this$props.tag,\n          attributes = _objectWithoutProperties(_this$props, [\"className\", \"cssModule\", \"plainText\", \"innerRef\", \"invalid\", \"valid\", \"addon\", \"size\", \"type\", \"tag\"]);\n\n      var checkInput = [\"radio\", \"checkbox\"].indexOf(type) > -1;\n      var isNotaNumber = new RegExp(\"\\\\D\", \"g\");\n      var fileInput = type === \"file\";\n      var textareaInput = type === \"textarea\";\n      var selectInput = type === \"select\";\n      var rangeInput = type === \"range\";\n      var Tag = tag || (selectInput || textareaInput ? type : \"input\");\n      var formControlClass = \"form-control\";\n\n      if (plainText) {\n        formControlClass = \"\".concat(formControlClass, \"-plaintext\");\n        Tag = tag || \"input\";\n      } else if (fileInput) {\n        formControlClass = \"\".concat(formControlClass, \"-file\");\n      } else if (rangeInput) {\n        formControlClass = \"\".concat(formControlClass, \"-range\");\n      } else if (checkInput) {\n        if (addon) {\n          formControlClass = null;\n        } else {\n          formControlClass = \"form-check-input\";\n        }\n      }\n\n      var classes = mapToCssModules(classNames(formControlClass, size ? \"form-control-\".concat(size) : false, invalid && \"is-invalid\", valid && \"is-valid\", className), cssModule);\n\n      if (Tag === \"input\" || tag && typeof tag === \"function\") {\n        attributes.type = type;\n      }\n\n      if (attributes.children && !(plainText || type === \"select\" || typeof Tag !== \"string\" || Tag === \"select\")) {\n        warnOnce(\"Input with a type of \\\"\".concat(type, \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\"));\n        delete attributes.children;\n      }\n\n      return __jsx(Tag, _extends({}, attributes, {\n        ref: innerRef,\n        className: classes,\n        \"aria-invalid\": invalid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/modules/components/Input.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","warnOnce","tagPropType","refPropType","propTypes","className","string","cssModule","object","children","node","innerRef","plainText","bool","invalid","valid","addon","size","oneOf","type","tag","defaultProps","Input","props","getRef","bind","focus","ref","attributes","checkInput","indexOf","isNotaNumber","RegExp","fileInput","textareaInput","selectInput","rangeInput","Tag","formControlClass","classes","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, warnOnce, tagPropType, refPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  innerRef: refPropType,\n  plainText: PropTypes.bool,\n  invalid: PropTypes.bool,\n  valid: PropTypes.bool,\n  addon: PropTypes.bool,\n  size: PropTypes.oneOf([\"lg\", \"sm\"]),\n  type: PropTypes.string,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  type: \"text\"\n}\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props)\n    this.getRef = this.getRef.bind(this)\n    this.focus = this.focus.bind(this)\n  }\n\n  getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref)\n    }\n    this.ref = ref\n  }\n\n  focus() {\n    if (this.ref) {\n      this.ref.focus()\n    }\n  }\n\n  render() {\n    let {\n      className,\n      cssModule,\n      plainText,\n      innerRef,\n      invalid,\n      valid,\n      addon,\n      size,\n      type,\n      tag,\n      ...attributes\n    } = this.props\n\n    const checkInput = [\"radio\", \"checkbox\"].indexOf(type) > -1\n    const isNotaNumber = new RegExp(\"\\\\D\", \"g\")\n\n    const fileInput = type === \"file\"\n    const textareaInput = type === \"textarea\"\n    const selectInput = type === \"select\"\n    const rangeInput = type === \"range\"\n    let Tag = tag || (selectInput || textareaInput ? type : \"input\")\n\n    let formControlClass = \"form-control\"\n\n    if (plainText) {\n      formControlClass = `${formControlClass}-plaintext`\n      Tag = tag || \"input\"\n    } else if (fileInput) {\n      formControlClass = `${formControlClass}-file`\n    } else if (rangeInput) {\n      formControlClass = `${formControlClass}-range`\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null\n      } else {\n        formControlClass = \"form-check-input\"\n      }\n    }\n\n    const classes = mapToCssModules(\n      classNames(\n        formControlClass,\n        size ? `form-control-${size}` : false,\n        invalid && \"is-invalid\",\n        valid && \"is-valid\",\n        className\n      ),\n      cssModule\n    )\n\n    if (Tag === \"input\" || (tag && typeof tag === \"function\")) {\n      attributes.type = type\n    }\n\n    if (\n      attributes.children &&\n      !(plainText || type === \"select\" || typeof Tag !== \"string\" || Tag === \"select\")\n    ) {\n      warnOnce(\n        `Input with a type of \"${type}\" cannot have children. Please use \"value\"/\"defaultValue\" instead.`\n      )\n      delete attributes.children\n    }\n\n    return <Tag {...attributes} ref={innerRef} className={classes} aria-invalid={invalid} />\n  }\n}\n\nInput.propTypes = propTypes\nInput.defaultProps = defaultProps\n\nexport default Input\n"]},"metadata":{},"sourceType":"module"}