{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\Aside.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Portal from \"./Portal\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\";\nimport AsideHeader from \"./AsideHeader\";\nimport AsideBody from \"./AsideBody\";\nimport AsideTitle from \"./AsideTitle\";\nimport AsideAddon from \"./AsideAddon\";\nvar propTypes = {\n  desktopMinimized: PropTypes.bool,\n  mobileMinimized: PropTypes.bool,\n  backdropOnClick: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  innerRef: refPropType,\n  tag: tagPropType\n};\nvar defaultProps = {\n  desktopMinimized: false,\n  mobileMinimized: true,\n  tag: \"div\"\n};\n\nvar Aside = /*#__PURE__*/function (_React$Component) {\n  _inherits(Aside, _React$Component);\n\n  var _super = _createSuper(Aside);\n\n  function Aside(props) {\n    var _this;\n\n    _classCallCheck(this, Aside);\n\n    _this = _super.call(this, props);\n    _this.breakpoint = 1025;\n    _this.transitionDuration = 200;\n    _this.state = {\n      desktopMinimized: _this.props.desktopMinimized,\n      mobileMinimized: _this.props.mobileMinimized,\n      asideHover: false\n    };\n    _this.classes = {\n      active: \"aside-active\",\n      desktop: {\n        minimized: \"aside-desktop-minimized\",\n        maximized: \"aside-desktop-maximized\"\n      },\n      mobile: {\n        minimized: \"aside-mobile-minimized\",\n        maximized: \"aside-mobile-maximized\"\n      }\n    };\n    _this.backdropClick = _this.backdropClick.bind(_assertThisInitialized(_this));\n    _this.toggleMinimizedBodyClass = _this.toggleMinimizedBodyClass.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Aside, [{\n    key: \"toggleMinimizedBodyClass\",\n    value: function toggleMinimizedBodyClass(viewport, minimized) {\n      if (minimized) {\n        document.body.classList.add(this.classes[viewport].minimized);\n        document.body.classList.remove(this.classes[viewport].maximized);\n      } else {\n        document.body.classList.remove(this.classes[viewport].minimized);\n        document.body.classList.add(this.classes[viewport].maximized);\n      }\n    }\n  }, {\n    key: \"backdropClick\",\n    value: function backdropClick(e) {\n      var newState = this.state;\n      newState.mobileMinimized = true;\n      this.toggleMinimizedBodyClass(\"mobile\", true);\n      this.setState(newState);\n\n      if (this.props.backdropOnClick) {\n        this.props.backdropOnClick(e);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var newState = this.state;\n      document.body.classList.add(this.classes.active);\n      newState.asideHover = this.state.desktopMinimized;\n      this.toggleMinimizedBodyClass(\"desktop\", this.state.desktopMinimized);\n      this.toggleMinimizedBodyClass(\"mobile\", this.state.mobileMinimized);\n      this.setState(newState);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (this.props !== prevProps) {\n        var newState = this.state;\n\n        if (window.innerWidth >= this.breakpoint) {\n          newState.desktopMinimized = this.props.desktopMinimized;\n          this.toggleMinimizedBodyClass(\"desktop\", this.state.desktopMinimized);\n          this.setState(newState);\n\n          if (this.props.desktopMinimized) {\n            setTimeout(function () {\n              newState.asideHover = true;\n\n              _this2.setState(newState);\n            }, this.transitionDuration);\n          } else {\n            newState.asideHover = false;\n            this.setState(newState);\n          }\n        } else {\n          newState.mobileMinimized = this.props.mobileMinimized;\n          this.toggleMinimizedBodyClass(\"mobile\", this.state.mobileMinimized);\n          this.setState(newState);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var removedClasses = [this.classes.active, this.classes.desktop.minimized, this.classes.desktop.maximized, this.classes.mobile.minimized, this.classes.mobile.maximized];\n      removedClasses.forEach(function (removedClass) {\n        document.body.classList.remove(removedClass);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          desktopMinimized = _this$props.desktopMinimized,\n          mobileMinimized = _this$props.mobileMinimized,\n          backdropOnClick = _this$props.backdropOnClick,\n          className = _this$props.className,\n          cssModule = _this$props.cssModule,\n          children = _this$props.children,\n          innerRef = _this$props.innerRef,\n          Tag = _this$props.tag,\n          attributes = _objectWithoutProperties(_this$props, [\"desktopMinimized\", \"mobileMinimized\", \"backdropOnClick\", \"className\", \"cssModule\", \"children\", \"innerRef\", \"tag\"]);\n\n      var classes = mapToCssModules(classNames(\"aside\", {\n        \"aside-hover\": this.state.asideHover\n      }, className), cssModule);\n      return __jsx(Tag, _extends({}, attributes, {\n        className: classes,\n        ref: innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 7\n        }\n      }), children, !this.state.mobileMinimized ? __jsx(Portal, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        id: \"aside-backdrop\",\n        onClick: this.backdropClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      })) : null);\n    }\n  }]);\n\n  return Aside;\n}(React.Component);\n\nAside.propTypes = propTypes;\nAside.defaultProps = defaultProps;\nAside.Header = AsideHeader;\nAside.Body = AsideBody;\nAside.Title = AsideTitle;\nAside.Addon = AsideAddon;\nexport default Aside;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/Aside.jsx"],"names":["React","PropTypes","Portal","classNames","mapToCssModules","tagPropType","refPropType","AsideHeader","AsideBody","AsideTitle","AsideAddon","propTypes","desktopMinimized","bool","mobileMinimized","backdropOnClick","func","className","string","cssModule","object","children","node","innerRef","tag","defaultProps","Aside","props","breakpoint","transitionDuration","state","asideHover","classes","active","desktop","minimized","maximized","mobile","backdropClick","bind","toggleMinimizedBodyClass","viewport","document","body","classList","add","remove","e","newState","setState","prevProps","window","innerWidth","setTimeout","removedClasses","forEach","removedClass","Tag","attributes","Component","Header","Body","Title","Addon"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Portal from \"./Portal\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\"\nimport AsideHeader from \"./AsideHeader\"\nimport AsideBody from \"./AsideBody\"\nimport AsideTitle from \"./AsideTitle\"\nimport AsideAddon from \"./AsideAddon\"\n\nconst propTypes = {\n  desktopMinimized: PropTypes.bool,\n  mobileMinimized: PropTypes.bool,\n  backdropOnClick: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  innerRef: refPropType,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  desktopMinimized: false,\n  mobileMinimized: true,\n  tag: \"div\"\n}\n\nclass Aside extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.breakpoint = 1025\n    this.transitionDuration = 200\n    this.state = {\n      desktopMinimized: this.props.desktopMinimized,\n      mobileMinimized: this.props.mobileMinimized,\n      asideHover: false\n    }\n    this.classes = {\n      active: \"aside-active\",\n      desktop: {\n        minimized: \"aside-desktop-minimized\",\n        maximized: \"aside-desktop-maximized\"\n      },\n      mobile: {\n        minimized: \"aside-mobile-minimized\",\n        maximized: \"aside-mobile-maximized\"\n      }\n    }\n    this.backdropClick = this.backdropClick.bind(this)\n    this.toggleMinimizedBodyClass = this.toggleMinimizedBodyClass.bind(this)\n  }\n\n  toggleMinimizedBodyClass(viewport, minimized) {\n    if (minimized) {\n      document.body.classList.add(this.classes[viewport].minimized)\n      document.body.classList.remove(this.classes[viewport].maximized)\n    } else {\n      document.body.classList.remove(this.classes[viewport].minimized)\n      document.body.classList.add(this.classes[viewport].maximized)\n    }\n  }\n\n  backdropClick(e) {\n    let newState = this.state\n    newState.mobileMinimized = true\n    this.toggleMinimizedBodyClass(\"mobile\", true)\n    this.setState(newState)\n\n    if (this.props.backdropOnClick) {\n      this.props.backdropOnClick(e)\n    }\n  }\n\n  componentDidMount() {\n    let newState = this.state\n\n    document.body.classList.add(this.classes.active)\n    newState.asideHover = this.state.desktopMinimized\n\n    this.toggleMinimizedBodyClass(\"desktop\", this.state.desktopMinimized)\n    this.toggleMinimizedBodyClass(\"mobile\", this.state.mobileMinimized)\n\n    this.setState(newState)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      let newState = this.state\n\n      if (window.innerWidth >= this.breakpoint) {\n        newState.desktopMinimized = this.props.desktopMinimized\n        this.toggleMinimizedBodyClass(\"desktop\", this.state.desktopMinimized)\n        this.setState(newState)\n        if (this.props.desktopMinimized) {\n          setTimeout(() => {\n            newState.asideHover = true\n            this.setState(newState)\n          }, this.transitionDuration)\n        } else {\n          newState.asideHover = false\n          this.setState(newState)\n        }\n      } else {\n        newState.mobileMinimized = this.props.mobileMinimized\n        this.toggleMinimizedBodyClass(\"mobile\", this.state.mobileMinimized)\n        this.setState(newState)\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const removedClasses = [\n      this.classes.active,\n      this.classes.desktop.minimized,\n      this.classes.desktop.maximized,\n      this.classes.mobile.minimized,\n      this.classes.mobile.maximized\n    ]\n\n    removedClasses.forEach(removedClass => {\n      document.body.classList.remove(removedClass)\n    })\n  }\n\n  render() {\n    const {\n      desktopMinimized,\n      mobileMinimized,\n      backdropOnClick,\n      className,\n      cssModule,\n      children,\n      innerRef,\n      tag: Tag,\n      ...attributes\n    } = this.props\n\n    const classes = mapToCssModules(\n      classNames(\"aside\", { \"aside-hover\": this.state.asideHover }, className),\n      cssModule\n    )\n\n    return (\n      <Tag {...attributes} className={classes} ref={innerRef}>\n        {children}\n        {!this.state.mobileMinimized ? (\n          <Portal>\n            <div id=\"aside-backdrop\" onClick={this.backdropClick} />\n          </Portal>\n        ) : null}\n      </Tag>\n    )\n  }\n}\n\nAside.propTypes = propTypes\nAside.defaultProps = defaultProps\n\nAside.Header = AsideHeader\nAside.Body = AsideBody\nAside.Title = AsideTitle\nAside.Addon = AsideAddon\n\nexport default Aside\n"]},"metadata":{},"sourceType":"module"}