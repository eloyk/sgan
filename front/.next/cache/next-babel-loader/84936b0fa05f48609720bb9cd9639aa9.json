{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\modules\\\\components\\\\FormGroup.jsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType } from \"./utils\";\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  inline: PropTypes.bool,\n  check: PropTypes.bool,\n  row: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: \"div\"\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      disabled = props.disabled,\n      inline = props.inline,\n      check = props.check,\n      row = props.row,\n      Tag = props.tag,\n      attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"disabled\", \"inline\", \"check\", \"row\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? \"row\" : false, check ? \"form-check\" : \"form-group\", check && inline ? \"form-check-inline\" : false, check && disabled ? \"disabled\" : false), cssModule);\n\n  if (Tag === \"fieldset\") {\n    attributes.disabled = disabled;\n  }\n\n  return __jsx(Tag, _extends({}, attributes, {\n    className: classes,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }));\n};\n\n_c = FormGroup;\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormGroup\");","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/modules/components/FormGroup.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","propTypes","className","string","cssModule","object","disabled","bool","inline","check","row","tag","defaultProps","FormGroup","props","Tag","attributes","classes"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,SAA7C;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEL,SAAS,CAACM,MADL;AAEhBC,EAAAA,SAAS,EAAEP,SAAS,CAACQ,MAFL;AAGhBC,EAAAA,QAAQ,EAAET,SAAS,CAACU,IAHJ;AAIhBC,EAAAA,MAAM,EAAEX,SAAS,CAACU,IAJF;AAKhBE,EAAAA,KAAK,EAAEZ,SAAS,CAACU,IALD;AAMhBG,EAAAA,GAAG,EAAEb,SAAS,CAACU,IANC;AAOhBI,EAAAA,GAAG,EAAEX;AAPW,CAAlB;AAUA,IAAMY,YAAY,GAAG;AACnBD,EAAAA,GAAG,EAAE;AADc,CAArB;;AAIA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAAA,MACjBZ,SADiB,GAC+DY,KAD/D,CACjBZ,SADiB;AAAA,MACNE,SADM,GAC+DU,KAD/D,CACNV,SADM;AAAA,MACKE,QADL,GAC+DQ,KAD/D,CACKR,QADL;AAAA,MACeE,MADf,GAC+DM,KAD/D,CACeN,MADf;AAAA,MACuBC,KADvB,GAC+DK,KAD/D,CACuBL,KADvB;AAAA,MAC8BC,GAD9B,GAC+DI,KAD/D,CAC8BJ,GAD9B;AAAA,MACwCK,GADxC,GAC+DD,KAD/D,CACmCH,GADnC;AAAA,MACgDK,UADhD,4BAC+DF,KAD/D;;AAGzB,MAAMG,OAAO,GAAGlB,eAAe,CAC7BD,UAAU,CACRI,SADQ,EAERQ,GAAG,GAAG,KAAH,GAAW,KAFN,EAGRD,KAAK,GAAG,YAAH,GAAkB,YAHf,EAIRA,KAAK,IAAID,MAAT,GAAkB,mBAAlB,GAAwC,KAJhC,EAKRC,KAAK,IAAIH,QAAT,GAAoB,UAApB,GAAiC,KALzB,CADmB,EAQ7BF,SAR6B,CAA/B;;AAWA,MAAIW,GAAG,KAAK,UAAZ,EAAwB;AACtBC,IAAAA,UAAU,CAACV,QAAX,GAAsBA,QAAtB;AACD;;AAED,SAAO,MAAC,GAAD,eAASU,UAAT;AAAqB,IAAA,SAAS,EAAEC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAnBD;;KAAMJ,S;AAqBNA,SAAS,CAACZ,SAAV,GAAsBA,SAAtB;AACAY,SAAS,CAACD,YAAV,GAAyBA,YAAzB;AAEA,eAAeC,SAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  inline: PropTypes.bool,\n  check: PropTypes.bool,\n  row: PropTypes.bool,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  tag: \"div\"\n}\n\nconst FormGroup = props => {\n  const { className, cssModule, disabled, inline, check, row, tag: Tag, ...attributes } = props\n\n  const classes = mapToCssModules(\n    classNames(\n      className,\n      row ? \"row\" : false,\n      check ? \"form-check\" : \"form-group\",\n      check && inline ? \"form-check-inline\" : false,\n      check && disabled ? \"disabled\" : false\n    ),\n    cssModule\n  )\n\n  if (Tag === \"fieldset\") {\n    attributes.disabled = disabled\n  }\n\n  return <Tag {...attributes} className={classes} />\n}\n\nFormGroup.propTypes = propTypes\nFormGroup.defaultProps = defaultProps\n\nexport default FormGroup\n"]},"metadata":{},"sourceType":"module"}