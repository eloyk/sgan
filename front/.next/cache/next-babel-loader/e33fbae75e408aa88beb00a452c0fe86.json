{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Button, Marker, Portlet, Container, DemoWrapper } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { pageChangeHeaderTitle, breadcrumbChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport * as FeatherIcon from \"react-feather\";\nimport withLayout from \"components/layout/withLayout\"; //import withAuth from \"components/firebase/firebaseWithAuth\"\n\nimport Head from \"next/head\";\nimport Link from \"next/link\";\n\nclass ButtonPage extends React.Component {\n  componentDidMount() {\n    // Set header title\n    this.props.pageChangeHeaderTitle(\"Button\"); // Set breadcrumb data\n\n    this.props.breadcrumbChange([{\n      text: \"Dashboard\",\n      link: \"/\"\n    }, {\n      text: \"Elements\"\n    }, {\n      text: \"Base\"\n    }, {\n      text: \"Button\",\n      link: \"/elements/base/button\"\n    }]);\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Button | Panely\")), __jsx(Container, {\n      fluid: true\n    }, __jsx(Row, null, __jsx(Col, {\n      xs: \"12\"\n    }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Variants\")), __jsx(Portlet.Body, null, __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Solid\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"These is a standard button variant, you can use it by setting\", \" \", __jsx(\"code\", null, \"variant\"), \" property with contextual color\"), __jsx(DemoWrapper, null, __jsx(Button, {\n      variant: \"primary\"\n    }, \"Primary\"), \" \", __jsx(Button, {\n      variant: \"secondary\"\n    }, \"Secondary\"), \" \", __jsx(Button, {\n      variant: \"success\"\n    }, \"Success\"), \" \", __jsx(Button, {\n      variant: \"warning\"\n    }, \"Warning\"), \" \", __jsx(Button, {\n      variant: \"danger\"\n    }, \"Danger\"), \" \", __jsx(Button, {\n      variant: \"info\"\n    }, \"Info\"), \" \", __jsx(Button, {\n      variant: \"dark\"\n    }, \"Dark\"), \" \", __jsx(Button, {\n      variant: \"light\"\n    }, \"Light\")))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Outline\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Replace the default \", __jsx(\"code\", null, \"variant\"), \" property value with\", \" \", __jsx(\"code\", null, \"outline-(color)\"), \" to apply these variants\"), __jsx(DemoWrapper, null, __jsx(Button, {\n      variant: \"outline-primary\"\n    }, \"Primary\"), \" \", __jsx(Button, {\n      variant: \"outline-secondary\"\n    }, \"Secondary\"), \" \", __jsx(Button, {\n      variant: \"outline-success\"\n    }, \"Success\"), \" \", __jsx(Button, {\n      variant: \"outline-warning\"\n    }, \"Warning\"), \" \", __jsx(Button, {\n      variant: \"outline-danger\"\n    }, \"Danger\"), \" \", __jsx(Button, {\n      variant: \"outline-info\"\n    }, \"Info\"), \" \", __jsx(Button, {\n      variant: \"outline-dark\"\n    }, \"Dark\"), \" \", __jsx(Button, {\n      variant: \"outline-light\"\n    }, \"Light\")))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Flat\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Replace the default \", __jsx(\"code\", null, \"variant\"), \" property value with\", \" \", __jsx(\"code\", null, \"flat-(color)\"), \" to apply these variants\"), __jsx(DemoWrapper, null, __jsx(Button, {\n      variant: \"flat-primary\"\n    }, \"Primary\"), \" \", __jsx(Button, {\n      variant: \"flat-secondary\"\n    }, \"Secondary\"), \" \", __jsx(Button, {\n      variant: \"flat-success\"\n    }, \"Success\"), \" \", __jsx(Button, {\n      variant: \"flat-warning\"\n    }, \"Warning\"), \" \", __jsx(Button, {\n      variant: \"flat-danger\"\n    }, \"Danger\"), \" \", __jsx(Button, {\n      variant: \"flat-info\"\n    }, \"Info\"), \" \", __jsx(Button, {\n      variant: \"flat-dark\"\n    }, \"Dark\"), \" \", __jsx(Button, {\n      variant: \"flat-light\"\n    }, \"Light\")))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Label\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Replace the default \", __jsx(\"code\", null, \"variant\"), \" property value with\", \" \", __jsx(\"code\", null, \"label-(color)\"), \" to apply these variants\"), __jsx(DemoWrapper, null, __jsx(Button, {\n      variant: \"label-primary\"\n    }, \"Primary\"), \" \", __jsx(Button, {\n      variant: \"label-secondary\"\n    }, \"Secondary\"), \" \", __jsx(Button, {\n      variant: \"label-success\"\n    }, \"Success\"), \" \", __jsx(Button, {\n      variant: \"label-warning\"\n    }, \"Warning\"), \" \", __jsx(Button, {\n      variant: \"label-danger\"\n    }, \"Danger\"), \" \", __jsx(Button, {\n      variant: \"label-info\"\n    }, \"Info\"), \" \", __jsx(Button, {\n      variant: \"label-dark\"\n    }, \"Dark\"), \" \", __jsx(Button, {\n      variant: \"label-light\"\n    }, \"Light\")))), __jsx(Portlet, {\n      className: \"mb-0\"\n    }, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Text\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Replace the default \", __jsx(\"code\", null, \"variant\"), \" property value with\", \" \", __jsx(\"code\", null, \"text-(color)\"), \" to apply these variants\"), __jsx(DemoWrapper, null, __jsx(Button, {\n      variant: \"text-primary\"\n    }, \"Primary\"), \" \", __jsx(Button, {\n      variant: \"text-secondary\"\n    }, \"Secondary\"), \" \", __jsx(Button, {\n      variant: \"text-success\"\n    }, \"Success\"), \" \", __jsx(Button, {\n      variant: \"text-warning\"\n    }, \"Warning\"), \" \", __jsx(Button, {\n      variant: \"text-danger\"\n    }, \"Danger\"), \" \", __jsx(Button, {\n      variant: \"text-info\"\n    }, \"Info\"), \" \", __jsx(Button, {\n      variant: \"text-dark\"\n    }, \"Dark\"), \" \", __jsx(Button, {\n      variant: \"text-light\"\n    }, \"Light\")))))))), __jsx(Row, null, __jsx(Col, {\n      md: \"7\"\n    }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Pill buttons\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Extend button element with \", __jsx(\"code\", null, \"pill\"), \" property to make the button more rounded.\"), __jsx(DemoWrapper, null, __jsx(Button, {\n      pill: true,\n      variant: \"label-primary\"\n    }, \"Primary\"), \" \", __jsx(Button, {\n      pill: true,\n      variant: \"label-secondary\"\n    }, \"Secondary\"), \" \", __jsx(Button, {\n      pill: true,\n      variant: \"outline-success\"\n    }, \"Success\"), \" \", __jsx(Button, {\n      pill: true,\n      variant: \"outline-warning\"\n    }, \"Warning\"), \" \", __jsx(Button, {\n      pill: true,\n      variant: \"flat-danger\"\n    }, \"Danger\"), \" \", __jsx(Button, {\n      pill: true,\n      variant: \"flat-info\"\n    }, \"Info\"), \" \", __jsx(Button, {\n      pill: true,\n      variant: \"dark\"\n    }, \"Dark\"), \" \", __jsx(Button, {\n      pill: true,\n      variant: \"light\"\n    }, \"Light\")))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Sizing\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Make your button larger or smaller by setting \", __jsx(\"code\", null, \"size\"), \" property with\", \" \", __jsx(\"code\", null, \"sm|lg\"), \" to button.\"), __jsx(DemoWrapper, null, __jsx(Button, {\n      variant: \"primary\",\n      size: \"sm\"\n    }, \"Smaller\"), \" \", __jsx(Button, {\n      variant: \"secondary\"\n    }, \"Default\"), \" \", __jsx(Button, {\n      variant: \"success\",\n      size: \"lg\"\n    }, \"Larger\"), \" \", __jsx(Button, {\n      icon: true,\n      variant: \"warning\",\n      size: \"sm\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faStar\n    })), \" \", __jsx(Button, {\n      icon: true,\n      variant: \"danger\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faCog\n    })), \" \", __jsx(Button, {\n      icon: true,\n      variant: \"info\",\n      size: \"lg\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faWrench\n    })), \" \", __jsx(Button, {\n      icon: true,\n      circle: true,\n      variant: \"warning\",\n      size: \"sm\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faStar\n    })), \" \", __jsx(Button, {\n      icon: true,\n      circle: true,\n      variant: \"danger\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faCog\n    })), \" \", __jsx(Button, {\n      icon: true,\n      circle: true,\n      variant: \"info\",\n      size: \"lg\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faWrench\n    })), \" \", __jsx(Button, {\n      pill: true,\n      variant: \"dark\",\n      size: \"sm\"\n    }, \"Smaller\"), \" \", __jsx(Button, {\n      pill: true,\n      variant: \"success\"\n    }, \"Default\"), \" \", __jsx(Button, {\n      pill: true,\n      variant: \"info\",\n      size: \"lg\"\n    }, \"Larger\")))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Taller, wider and block\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"You can't use the properties below together with \", __jsx(\"code\", null, \"icon\"), \" property\"), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Wide\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Fill \", __jsx(\"code\", null, \"width\"), \" property with \", __jsx(\"code\", null, \"wide|wider|widest\"), \" to make your button wider\"), __jsx(DemoWrapper, null, __jsx(Button, {\n      variant: \"primary\",\n      width: \"wide\"\n    }, \"Wide\"), \" \", __jsx(Button, {\n      variant: \"primary\",\n      width: \"wider\"\n    }, \"Wider\"), \" \", __jsx(Button, {\n      variant: \"primary\",\n      width: \"widest\"\n    }, \"Widest\")))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Tall\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Fill \", __jsx(\"code\", null, \"height\"), \" property with \", __jsx(\"code\", null, \"tall|taller|tallest\"), \" to make your button taller\"), __jsx(DemoWrapper, null, __jsx(Button, {\n      variant: \"primary\",\n      height: \"tall\"\n    }, \"Tall\"), \" \", __jsx(Button, {\n      variant: \"primary\",\n      height: \"taller\"\n    }, \"Taller\"), \" \", __jsx(Button, {\n      variant: \"primary\",\n      height: \"tallest\"\n    }, \"Tallest\")))), __jsx(Portlet, {\n      className: \"mb-0\"\n    }, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Block\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Add \", __jsx(\"code\", null, \"block\"), \" property for full width button style.\"), __jsx(Button, {\n      block: true,\n      variant: \"primary\"\n    }, \"Block\"), \" \", __jsx(Button, {\n      block: true,\n      variant: \"label-primary\"\n    }, \"Block\")))))), __jsx(Col, {\n      md: \"5\"\n    }, __jsx(Portlet, null, __jsx(Portlet.Header, null, __jsx(Portlet.Title, null, \"Button icon\")), __jsx(Portlet.Body, null, __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Square buttons\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"If you need square button with an icon inside, you can use \", __jsx(\"code\", null, \"icon\"), \" \", \"property.\"), __jsx(DemoWrapper, null, __jsx(Button, {\n      icon: true,\n      variant: \"secondary\"\n    }, __jsx(FeatherIcon.Anchor, null)), \" \", __jsx(Button, {\n      icon: true,\n      variant: \"outline-success\"\n    }, __jsx(FeatherIcon.Archive, null)), \" \", __jsx(Button, {\n      icon: true,\n      variant: \"outline-warning\"\n    }, __jsx(FeatherIcon.Camera, null)), \" \", __jsx(Button, {\n      icon: true,\n      variant: \"outline-info\"\n    }, __jsx(FeatherIcon.Eye, null)), \" \", __jsx(Button, {\n      icon: true,\n      variant: \"primary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faTimes\n    })), \" \", __jsx(Button, {\n      icon: true,\n      variant: \"label-danger\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faWrench\n    })), \" \", __jsx(Button, {\n      icon: true,\n      variant: \"label-info\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faCog\n    })), \" \", __jsx(Button, {\n      icon: true,\n      variant: \"flat-primary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faBars\n    }))))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Circle buttons\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Make your icon buttons circular by extending button element with\", \" \", __jsx(\"code\", null, \"circle\"), \" property.\"), __jsx(DemoWrapper, null, __jsx(Button, {\n      icon: true,\n      circle: true,\n      variant: \"secondary\"\n    }, __jsx(FeatherIcon.Anchor, null)), \" \", __jsx(Button, {\n      icon: true,\n      circle: true,\n      variant: \"outline-success\"\n    }, __jsx(FeatherIcon.Archive, null)), \" \", __jsx(Button, {\n      icon: true,\n      circle: true,\n      variant: \"outline-warning\"\n    }, __jsx(FeatherIcon.Camera, null)), \" \", __jsx(Button, {\n      icon: true,\n      circle: true,\n      variant: \"outline-info\"\n    }, __jsx(FeatherIcon.Eye, null)), \" \", __jsx(Button, {\n      icon: true,\n      circle: true,\n      variant: \"primary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faTimes\n    })), \" \", __jsx(Button, {\n      icon: true,\n      circle: true,\n      variant: \"label-danger\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faWrench\n    })), \" \", __jsx(Button, {\n      icon: true,\n      circle: true,\n      variant: \"label-info\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faCog\n    })), \" \", __jsx(Button, {\n      icon: true,\n      circle: true,\n      variant: \"flat-primary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faBars\n    }))))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Icon with text\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"If you want to use icon with text, you don't need to apply \", __jsx(\"code\", null, \"icon\"), \" \", \"property\"), __jsx(DemoWrapper, null, __jsx(Button, {\n      variant: \"primary\"\n    }, __jsx(FeatherIcon.Eye, {\n      className: \"mr-2\"\n    }), \" Button\"), \" \", __jsx(Button, {\n      variant: \"label-info\"\n    }, \"Button \", __jsx(FeatherIcon.Camera, {\n      className: \"ml-2\"\n    })), \" \", __jsx(Button, {\n      variant: \"outline-danger\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faCog,\n      className: \"mr-2\"\n    }), \" Button\"), \" \", __jsx(Button, {\n      variant: \"flat-success\"\n    }, \"Button \", __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faCheck,\n      className: \"ml-2\"\n    }))))))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"States\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"Add \", __jsx(\"code\", null, \"active\"), \" or \", __jsx(\"code\", null, \"disabled\"), \" properties for the active or inactive button appearance.\"), __jsx(Button, {\n      variant: \"primary\",\n      active: true\n    }, \"Active\"), \" \", __jsx(Button, {\n      variant: \"primary\",\n      disabled: true\n    }, \"Disabled\"))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Addon\")), __jsx(Portlet.Body, null, __jsx(\"p\", null, \"You can add a counter or marker to button by adding \", __jsx(\"code\", null, \"Button.Marker\"), \" \", \"and \", __jsx(\"code\", null, \"Button.Counter\"), \" element and combine with\", \" \", __jsx(Link, {\n      href: \"/elements/base/badge\"\n    }, \"badge\"), \" or\", \" \", __jsx(Link, {\n      href: \"/elements/base/marker\"\n    }, \"marker\"), \" component.\"), __jsx(DemoWrapper, null, __jsx(Button, {\n      variant: \"primary\"\n    }, \"Button\", __jsx(Button.Marker, null, __jsx(Button.Counter, {\n      variant: \"secondary\"\n    }, \"12\"))), \" \", __jsx(Button, {\n      variant: \"primary\"\n    }, \"Button\", __jsx(Button.Marker, null, __jsx(Button.Counter, {\n      pill: true,\n      variant: \"secondary\"\n    }, \"12\"))), \" \", __jsx(Button, {\n      variant: \"primary\"\n    }, \"Button\", __jsx(Button.Marker, null, __jsx(Marker, {\n      variant: \"dot\",\n      variant: \"success\"\n    }))), \" \", __jsx(Button, {\n      icon: true,\n      variant: \"primary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faCog\n    }), __jsx(Button.Marker, null, __jsx(Button.Counter, {\n      variant: \"secondary\"\n    }, \"12\"))), \" \", __jsx(Button, {\n      icon: true,\n      variant: \"primary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faStar\n    }), __jsx(Button.Marker, null, __jsx(Button.Counter, {\n      pill: true,\n      variant: \"secondary\"\n    }, \"12\"))), \" \", __jsx(Button, {\n      icon: true,\n      variant: \"primary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faWrench\n    }), __jsx(Button.Marker, null, __jsx(Marker, {\n      variant: \"dot\",\n      variant: \"success\"\n    }))))))))));\n  }\n\n}\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle,\n    breadcrumbChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withLayout(ButtonPage));","map":null,"metadata":{},"sourceType":"module"}