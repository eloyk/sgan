{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\components\\\\layout\\\\part\\\\HeaderNotification.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Badge, Caret, Avatar, Button, Marker, Portlet, Dropdown, RichList } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as RegularIcon from \"@fortawesome/free-regular-svg-icons\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport SimpleBar from \"simplebar\";\n\nvar HeaderNotification = /*#__PURE__*/function (_React$Component) {\n  _inherits(HeaderNotification, _React$Component);\n\n  var _super = _createSuper(HeaderNotification);\n\n  function HeaderNotification() {\n    var _this;\n\n    _classCallCheck(this, HeaderNotification);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"bodyRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: [{\n        avatar: function avatar() {\n          return __jsx(Avatar, {\n            display: true,\n            variant: \"label-info\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 11\n            }\n          }, __jsx(FontAwesomeIcon, {\n            icon: SolidIcon.faFileInvoice,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 13\n            }\n          }));\n        },\n        content: \"New report has been received\",\n        time: \"2 min ago\"\n      }, {\n        avatar: function avatar() {\n          return __jsx(Avatar, {\n            display: true,\n            variant: \"label-success\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 11\n            }\n          }, __jsx(FontAwesomeIcon, {\n            icon: SolidIcon.faShoppingBasket,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 13\n            }\n          }));\n        },\n        content: \"Last order was completed\",\n        time: \"1 hrs ago\"\n      }, {\n        avatar: function avatar() {\n          return __jsx(Avatar, {\n            display: true,\n            variant: \"label-danger\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 11\n            }\n          }, __jsx(FontAwesomeIcon, {\n            icon: SolidIcon.faUsers,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }\n          }));\n        },\n        content: \"Company meeting canceled\",\n        time: \"5 hrs ago\"\n      }, {\n        avatar: function avatar() {\n          return __jsx(Avatar, {\n            display: true,\n            variant: \"label-warning\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 11\n            }\n          }, __jsx(FontAwesomeIcon, {\n            icon: SolidIcon.faPaperPlane,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }\n          }));\n        },\n        content: \"New feedback received\",\n        time: \"6 hrs ago\"\n      }, {\n        avatar: function avatar() {\n          return __jsx(Avatar, {\n            display: true,\n            variant: \"label-primary\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 11\n            }\n          }, __jsx(FontAwesomeIcon, {\n            icon: SolidIcon.faDownload,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }\n          }));\n        },\n        content: \"New update was available\",\n        time: \"1 day ago\"\n      }, {\n        avatar: function avatar() {\n          return __jsx(Avatar, {\n            display: true,\n            variant: \"label-success\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 11\n            }\n          }, __jsx(FontAwesomeIcon, {\n            icon: SolidIcon.faAsterisk,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }\n          }));\n        },\n        content: \"Your password was changed\",\n        time: \"2 day ago\"\n      }, {\n        avatar: function avatar() {\n          return __jsx(Avatar, {\n            display: true,\n            variant: \"label-info\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 11\n            }\n          }, __jsx(FontAwesomeIcon, {\n            icon: SolidIcon.faUserPlus,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 13\n            }\n          }));\n        },\n        content: \"New account has been registered\",\n        time: \"5 day ago\"\n      }]\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggle\", function (e, opened) {\n      // Initialize custom scrollbar\n      if (opened) {\n        new SimpleBar(_this.bodyRef.current);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(HeaderNotification, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          variant = _this$props.variant,\n          attributes = _objectWithoutProperties(_this$props, [\"variant\"]);\n\n      var count = this.state.data.length;\n      return __jsx(Dropdown.Uncontrolled, _extends({\n        onToggle: this.onToggle\n      }, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }), __jsx(Dropdown.Toggle, {\n        icon: true,\n        variant: variant,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: RegularIcon.faBell,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }), count > 0 ? __jsx(Button.Marker, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, __jsx(Marker, {\n        type: \"dot\",\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      })) : null), __jsx(Dropdown.Menu, {\n        right: true,\n        wide: true,\n        animated: true,\n        className: \"overflow-hidden py-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, __jsx(Portlet, {\n        scroll: true,\n        className: \"border-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, __jsx(Portlet.Header, {\n        className: \"bg-primary rounded-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, __jsx(Portlet.Icon, {\n        className: \"text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: RegularIcon.faBell,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      })), __jsx(Portlet.Title, {\n        className: \"text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }, \"Notification\"), __jsx(Portlet.Addon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, __jsx(Badge, {\n        variant: \"warning\",\n        shape: \"square\",\n        size: \"lg\",\n        children: count > 9 ? \"9+\" : count,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }))), __jsx(Portlet.Body, {\n        innerRef: this.bodyRef,\n        className: \"p-0 rounded-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, __jsx(RichList, {\n        action: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, this.state.data.map(function (data, index) {\n        var NotificationAvatar = data.avatar,\n            content = data.content,\n            time = data.time;\n        return __jsx(RichList.Item, {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }\n        }, __jsx(RichList.Addon, {\n          addonType: \"prepend\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 23\n          }\n        }, __jsx(NotificationAvatar, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }\n        })), __jsx(RichList.Content, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 23\n          }\n        }, __jsx(RichList.Title, {\n          children: content,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }\n        }), __jsx(RichList.Subtitle, {\n          children: time,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }\n        })), __jsx(RichList.Addon, {\n          addonType: \"append\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 23\n          }\n        }, __jsx(Caret, {\n          className: \"mx-2\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }\n        })));\n      }))))));\n    }\n  }]);\n\n  return HeaderNotification;\n}(React.Component);\n\nexport default HeaderNotification;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/components/layout/part/HeaderNotification.jsx"],"names":["Badge","Caret","Avatar","Button","Marker","Portlet","Dropdown","RichList","FontAwesomeIcon","RegularIcon","SolidIcon","SimpleBar","HeaderNotification","React","createRef","data","avatar","faFileInvoice","content","time","faShoppingBasket","faUsers","faPaperPlane","faDownload","faAsterisk","faUserPlus","e","opened","bodyRef","current","props","variant","attributes","count","state","length","onToggle","faBell","map","index","NotificationAvatar","Component"],"mappings":"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","sourcesContent":["import {\n  Badge,\n  Caret,\n  Avatar,\n  Button,\n  Marker,\n  Portlet,\n  Dropdown,\n  RichList\n} from \"@panely/components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport * as RegularIcon from \"@fortawesome/free-regular-svg-icons\"\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\"\nimport SimpleBar from \"simplebar\"\n\nclass HeaderNotification extends React.Component {\n  bodyRef = React.createRef()\n\n  state = {\n    data: [\n      {\n        avatar: () => (\n          <Avatar display variant=\"label-info\">\n            <FontAwesomeIcon icon={SolidIcon.faFileInvoice} />\n          </Avatar>\n        ),\n        content: \"New report has been received\",\n        time: \"2 min ago\"\n      },\n      {\n        avatar: () => (\n          <Avatar display variant=\"label-success\">\n            <FontAwesomeIcon icon={SolidIcon.faShoppingBasket} />\n          </Avatar>\n        ),\n        content: \"Last order was completed\",\n        time: \"1 hrs ago\"\n      },\n      {\n        avatar: () => (\n          <Avatar display variant=\"label-danger\">\n            <FontAwesomeIcon icon={SolidIcon.faUsers} />\n          </Avatar>\n        ),\n        content: \"Company meeting canceled\",\n        time: \"5 hrs ago\"\n      },\n      {\n        avatar: () => (\n          <Avatar display variant=\"label-warning\">\n            <FontAwesomeIcon icon={SolidIcon.faPaperPlane} />\n          </Avatar>\n        ),\n        content: \"New feedback received\",\n        time: \"6 hrs ago\"\n      },\n      {\n        avatar: () => (\n          <Avatar display variant=\"label-primary\">\n            <FontAwesomeIcon icon={SolidIcon.faDownload} />\n          </Avatar>\n        ),\n        content: \"New update was available\",\n        time: \"1 day ago\"\n      },\n      {\n        avatar: () => (\n          <Avatar display variant=\"label-success\">\n            <FontAwesomeIcon icon={SolidIcon.faAsterisk} />\n          </Avatar>\n        ),\n        content: \"Your password was changed\",\n        time: \"2 day ago\"\n      },\n      {\n        avatar: () => (\n          <Avatar display variant=\"label-info\">\n            <FontAwesomeIcon icon={SolidIcon.faUserPlus} />\n          </Avatar>\n        ),\n        content: \"New account has been registered\",\n        time: \"5 day ago\"\n      }\n    ]\n  }\n\n  onToggle = (e, opened) => {\n    // Initialize custom scrollbar\n    if (opened) {\n      new SimpleBar(this.bodyRef.current)\n    }\n  }\n\n  render() {\n    const { variant, ...attributes } = this.props\n    let count = this.state.data.length\n\n    return (\n      <Dropdown.Uncontrolled onToggle={this.onToggle} {...attributes}>\n        <Dropdown.Toggle icon variant={variant}>\n          <FontAwesomeIcon icon={RegularIcon.faBell} />\n          {count > 0 ? (\n            <Button.Marker>\n              <Marker type=\"dot\" variant=\"success\" />\n            </Button.Marker>\n          ) : null}\n        </Dropdown.Toggle>\n        <Dropdown.Menu right wide animated className=\"overflow-hidden py-0\">\n          {/* BEGIN Portlet */}\n          <Portlet scroll className=\"border-0\">\n            <Portlet.Header className=\"bg-primary rounded-0\">\n              <Portlet.Icon className=\"text-white\">\n                <FontAwesomeIcon icon={RegularIcon.faBell} />\n              </Portlet.Icon>\n              <Portlet.Title className=\"text-white\">Notification</Portlet.Title>\n              <Portlet.Addon>\n                <Badge\n                  variant=\"warning\"\n                  shape=\"square\"\n                  size=\"lg\"\n                  children={count > 9 ? \"9+\" : count}\n                />\n              </Portlet.Addon>\n            </Portlet.Header>\n            <Portlet.Body innerRef={this.bodyRef} className=\"p-0 rounded-0\">\n              {/* BEGIN Rich List */}\n              <RichList action>\n                {this.state.data.map((data, index) => {\n                  const { avatar: NotificationAvatar, content, time } = data\n\n                  return (\n                    <RichList.Item key={index}>\n                      <RichList.Addon addonType=\"prepend\">\n                        <NotificationAvatar />\n                      </RichList.Addon>\n                      <RichList.Content>\n                        <RichList.Title children={content} />\n                        <RichList.Subtitle children={time} />\n                      </RichList.Content>\n                      <RichList.Addon addonType=\"append\">\n                        <Caret className=\"mx-2\" />\n                      </RichList.Addon>\n                    </RichList.Item>\n                  )\n                })}\n              </RichList>\n              {/* END Rich List */}\n            </Portlet.Body>\n          </Portlet>\n          {/* END Portlet */}\n        </Dropdown.Menu>\n      </Dropdown.Uncontrolled>\n    )\n  }\n}\n\nexport default HeaderNotification\n"]},"metadata":{},"sourceType":"module"}