{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form, Portlet, CustomInput } from \"@panely/components\";\n\nclass SidemenuSettingProject extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      setting1: false,\n      setting2: true,\n      setting3: false\n    });\n\n    _defineProperty(this, \"handleClick\", (e, identifier) => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        [identifier]: e.target.checked\n      }));\n    });\n  }\n\n  render() {\n    return __jsx(Portlet, _extends({\n      bordered: true\n    }, this.props), __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Title, null, \"Projects\")), __jsx(Portlet.Body, null, __jsx(Form.Group, null, __jsx(CustomInput, {\n      type: \"switch\",\n      id: \"projectSetting1\",\n      label: \"Enable create projects\",\n      checked: this.state.setting1,\n      onChange: e => this.handleClick(e, \"setting1\")\n    })), __jsx(Form.Group, null, __jsx(CustomInput, {\n      type: \"switch\",\n      id: \"projectSetting2\",\n      label: \"Enable custom projects\",\n      checked: this.state.setting2,\n      onChange: e => this.handleClick(e, \"setting2\")\n    })), __jsx(Form.Group, {\n      className: \"mb-0\"\n    }, __jsx(CustomInput, {\n      type: \"switch\",\n      id: \"projectSetting3\",\n      label: \"Enable project review\",\n      checked: this.state.setting3,\n      onChange: e => this.handleClick(e, \"setting3\")\n    }))));\n  }\n\n}\n\nexport default SidemenuSettingProject;","map":null,"metadata":{},"sourceType":"module"}