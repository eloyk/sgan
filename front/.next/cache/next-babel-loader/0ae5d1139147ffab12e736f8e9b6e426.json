{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Manager } from \"react-popper\";\nimport classNames from \"classnames\";\nimport { DropdownContext } from \"./DropdownContext\";\nimport { mapToCssModules, omit, keyCodes, tagPropType } from \"./utils\";\nimport DropdownItem from \"./DropdownItem\";\nimport DropdownMenu from \"./DropdownMenu\";\nimport DropdownToggle from \"./DropdownToggle\";\nimport DropdownHeader from \"./DropdownHeader\";\nimport DropdownDivider from \"./DropdownDivider\";\nimport DropdownSubmenu from \"./DropdownSubmenu\";\nimport DropdownSubmenuMenu from \"./DropdownSubmenuMenu\";\nimport DropdownRow from \"./DropdownRow\";\nimport DropdownCol from \"./DropdownCol\";\nvar defaultProps = {\n  setActiveFromChild: false,\n  direction: \"down\",\n  addonType: false,\n  active: false,\n  isOpen: false,\n  a11y: true,\n  nav: false\n};\nvar preventDefaultKeys = [keyCodes.space, keyCodes.enter, keyCodes.up, keyCodes.down, keyCodes.end, keyCodes.home];\nvar omitKeys = [\"defaultOpen\"];\n\nvar Dropdown = /*#__PURE__*/function (_React$Component) {\n  _inherits(Dropdown, _React$Component);\n\n  var _super = _createSuper(Dropdown);\n\n  function Dropdown(props) {\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    _this = _super.call(this, props);\n    _this.addEvents = _this.addEvents.bind(_assertThisInitialized(_this));\n    _this.handleDocumentClick = _this.handleDocumentClick.bind(_assertThisInitialized(_this));\n    _this.handleKeyDown = _this.handleKeyDown.bind(_assertThisInitialized(_this));\n    _this.removeEvents = _this.removeEvents.bind(_assertThisInitialized(_this));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.containerRef = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"getContextValue\",\n    value: function getContextValue() {\n      return {\n        toggle: this.toggle,\n        isOpen: this.props.isOpen,\n        direction: this.props.direction === \"down\" && this.props.dropup ? \"up\" : this.props.direction,\n        disabled: this.props.disabled\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleProps();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.isOpen !== prevProps.isOpen) {\n        this.handleProps();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeEvents();\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      return this.containerRef.current;\n    }\n  }, {\n    key: \"getMenuCtrl\",\n    value: function getMenuCtrl() {\n      if (this._$menuCtrl) return this._$menuCtrl;\n      this._$menuCtrl = this.getContainer().querySelector(\"[aria-expanded]\");\n      return this._$menuCtrl;\n    }\n  }, {\n    key: \"getMenuItems\",\n    value: function getMenuItems() {\n      return [].slice.call(this.getContainer().querySelectorAll('[role=\"menuitem\"]'));\n    }\n  }, {\n    key: \"addEvents\",\n    value: function addEvents() {\n      var _this2 = this;\n\n      [\"click\", \"touchstart\", \"keyup\"].forEach(function (event) {\n        return document.addEventListener(event, _this2.handleDocumentClick, true);\n      });\n    }\n  }, {\n    key: \"removeEvents\",\n    value: function removeEvents() {\n      var _this3 = this;\n\n      [\"click\", \"touchstart\", \"keyup\"].forEach(function (event) {\n        return document.removeEventListener(event, _this3.handleDocumentClick, true);\n      });\n    }\n  }, {\n    key: \"handleDocumentClick\",\n    value: function handleDocumentClick(e) {\n      if (e && (e.which === 3 || e.type === \"keyup\" && e.which !== keyCodes.tab)) return;\n      var container = this.getContainer();\n\n      if (container.contains(e.target) && container !== e.target && (e.type !== \"keyup\" || e.which === keyCodes.tab)) {\n        return;\n      }\n\n      this.toggle(e);\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(e) {\n      var _this4 = this;\n\n      if (/input|textarea/i.test(e.target.tagName) || keyCodes.tab === e.which && (e.target.getAttribute(\"role\") !== \"menuitem\" || !this.props.a11y)) {\n        return;\n      }\n\n      if (preventDefaultKeys.indexOf(e.which) !== -1 || e.which >= 48 && e.which <= 90) {\n        e.preventDefault();\n      }\n\n      if (this.props.disabled) return;\n\n      if (this.getMenuCtrl() === e.target) {\n        if (!this.props.isOpen && [keyCodes.space, keyCodes.enter, keyCodes.up, keyCodes.down].indexOf(e.which) > -1) {\n          this.toggle(e);\n          setTimeout(function () {\n            return _this4.getMenuItems()[0].focus();\n          });\n        } else if (this.props.isOpen && e.which === keyCodes.esc) {\n          this.toggle(e);\n        }\n      }\n\n      if (this.props.isOpen && e.target.getAttribute(\"role\") === \"menuitem\") {\n        if ([keyCodes.tab, keyCodes.esc].indexOf(e.which) > -1) {\n          this.toggle(e);\n          this.getMenuCtrl().focus();\n        } else if ([keyCodes.space, keyCodes.enter].indexOf(e.which) > -1) {\n          e.target.click();\n          this.getMenuCtrl().focus();\n        } else if ([keyCodes.down, keyCodes.up].indexOf(e.which) > -1 || [keyCodes.n, keyCodes.p].indexOf(e.which) > -1 && e.ctrlKey) {\n          var $menuitems = this.getMenuItems();\n          var index = $menuitems.indexOf(e.target);\n\n          if (keyCodes.up === e.which || keyCodes.p === e.which && e.ctrlKey) {\n            index = index !== 0 ? index - 1 : $menuitems.length - 1;\n          } else if (keyCodes.down === e.which || keyCodes.n === e.which && e.ctrlKey) {\n            index = index === $menuitems.length - 1 ? 0 : index + 1;\n          }\n\n          $menuitems[index].focus();\n        } else if (keyCodes.end === e.which) {\n          var _$menuitems = this.getMenuItems();\n\n          _$menuitems[_$menuitems.length - 1].focus();\n        } else if (keyCodes.home === e.which) {\n          var _$menuitems2 = this.getMenuItems();\n\n          _$menuitems2[0].focus();\n        } else if (e.which >= 48 && e.which <= 90) {\n          var _$menuitems3 = this.getMenuItems();\n\n          var charPressed = String.fromCharCode(e.which).toLowerCase();\n\n          for (var i = 0; i < _$menuitems3.length; i += 1) {\n            var firstLetter = _$menuitems3[i].textContent && _$menuitems3[i].textContent[0].toLowerCase();\n\n            if (firstLetter === charPressed) {\n              _$menuitems3[i].focus();\n\n              break;\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"handleProps\",\n    value: function handleProps() {\n      if (this.props.isOpen) {\n        this.addEvents();\n      } else {\n        this.removeEvents();\n      }\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(e) {\n      if (this.props.disabled) {\n        return e && e.preventDefault();\n      }\n\n      return this.props.toggle(e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _omit = omit(this.props, [\"toggle\", \"disabled\", \"a11y\"]),\n          setActiveFromChild = _omit.setActiveFromChild,\n          addonType = _omit.addonType,\n          className = _omit.className,\n          cssModule = _omit.cssModule,\n          direction = _omit.direction,\n          active = _omit.active,\n          isOpen = _omit.isOpen,\n          group = _omit.group,\n          size = _omit.size,\n          nav = _omit.nav,\n          tag = _omit.tag,\n          attrs = _objectWithoutProperties(_omit, [\"setActiveFromChild\", \"addonType\", \"className\", \"cssModule\", \"direction\", \"active\", \"isOpen\", \"group\", \"size\", \"nav\", \"tag\"]);\n\n      var Tag = tag || (nav ? \"div\" : \"div\");\n      var subItemIsActive = false;\n\n      if (setActiveFromChild) {\n        React.Children.map(this.props.children[1].props.children, function (dropdownItem) {\n          if (dropdownItem && dropdownItem.props.active) subItemIsActive = true;\n        });\n      }\n\n      var classes = mapToCssModules(classNames(className, direction !== \"down\" && \"drop\".concat(direction), nav && active ? \"active\" : false, setActiveFromChild && subItemIsActive ? \"active\" : false, (_classNames = {}, _defineProperty(_classNames, \"input-group-\".concat(addonType), addonType), _defineProperty(_classNames, \"btn-group\", group), _defineProperty(_classNames, \"btn-group-\".concat(size), !!size), _defineProperty(_classNames, \"dropdown\", !group && !addonType), _defineProperty(_classNames, \"show\", isOpen), _defineProperty(_classNames, \"nav-item\", nav), _classNames)), cssModule);\n      return __jsx(DropdownContext.Provider, {\n        value: this.getContextValue()\n      }, __jsx(Manager, null, __jsx(Tag, _extends({}, attrs, _defineProperty({}, typeof Tag === \"string\" ? \"ref\" : \"innerRef\", this.containerRef), {\n        onKeyDown: this.handleKeyDown,\n        className: classes\n      }))));\n    }\n  }]);\n\n  return Dropdown;\n}(React.Component);\n\nvar DropdownUncontrolled = /*#__PURE__*/function (_React$Component2) {\n  _inherits(DropdownUncontrolled, _React$Component2);\n\n  var _super2 = _createSuper(DropdownUncontrolled);\n\n  function DropdownUncontrolled(props) {\n    var _this5;\n\n    _classCallCheck(this, DropdownUncontrolled);\n\n    _this5 = _super2.call(this, props);\n    _this5.state = {\n      isOpen: props.defaultOpen || false\n    };\n    _this5.toggle = _this5.toggle.bind(_assertThisInitialized(_this5));\n    return _this5;\n  }\n\n  _createClass(DropdownUncontrolled, [{\n    key: \"toggle\",\n    value: function toggle(e) {\n      var _this6 = this;\n\n      this.setState({\n        isOpen: !this.state.isOpen\n      }, function () {\n        if (_this6.props.onToggle) {\n          _this6.props.onToggle(e, _this6.state.isOpen);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Dropdown, _extends({\n        isOpen: this.state.isOpen,\n        toggle: this.toggle\n      }, omit(this.props, omitKeys)));\n    }\n  }]);\n\n  return DropdownUncontrolled;\n}(React.Component);\n\nDropdown.defaultProps = defaultProps;\nDropdown.Item = DropdownItem;\nDropdown.Menu = DropdownMenu;\nDropdown.Submenu = DropdownSubmenu;\nDropdown.SubmenuMenu = DropdownSubmenuMenu;\nDropdown.Toggle = DropdownToggle;\nDropdown.Header = DropdownHeader;\nDropdown.Divider = DropdownDivider;\nDropdown.Row = DropdownRow;\nDropdown.Col = DropdownCol;\nDropdown.Uncontrolled = DropdownUncontrolled;\nexport default Dropdown;","map":null,"metadata":{},"sourceType":"module"}