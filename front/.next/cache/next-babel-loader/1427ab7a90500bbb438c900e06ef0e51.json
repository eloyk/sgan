{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\modules\\\\components\\\\Aside.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Portal from \"./Portal\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\";\nimport AsideHeader from \"./AsideHeader\";\nimport AsideBody from \"./AsideBody\";\nimport AsideTitle from \"./AsideTitle\";\nimport AsideAddon from \"./AsideAddon\";\nconst propTypes = {\n  desktopMinimized: PropTypes.bool,\n  mobileMinimized: PropTypes.bool,\n  backdropOnClick: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  innerRef: refPropType,\n  tag: tagPropType\n};\nconst defaultProps = {\n  desktopMinimized: false,\n  mobileMinimized: true,\n  tag: \"div\"\n};\n\nclass Aside extends React.Component {\n  constructor(props) {\n    super(props);\n    this.breakpoint = 1025;\n    this.transitionDuration = 200;\n    this.state = {\n      desktopMinimized: this.props.desktopMinimized,\n      mobileMinimized: this.props.mobileMinimized,\n      asideHover: false\n    };\n    this.classes = {\n      active: \"aside-active\",\n      desktop: {\n        minimized: \"aside-desktop-minimized\",\n        maximized: \"aside-desktop-maximized\"\n      },\n      mobile: {\n        minimized: \"aside-mobile-minimized\",\n        maximized: \"aside-mobile-maximized\"\n      }\n    };\n    this.backdropClick = this.backdropClick.bind(this);\n    this.toggleMinimizedBodyClass = this.toggleMinimizedBodyClass.bind(this);\n  }\n\n  toggleMinimizedBodyClass(viewport, minimized) {\n    if (minimized) {\n      document.body.classList.add(this.classes[viewport].minimized);\n      document.body.classList.remove(this.classes[viewport].maximized);\n    } else {\n      document.body.classList.remove(this.classes[viewport].minimized);\n      document.body.classList.add(this.classes[viewport].maximized);\n    }\n  }\n\n  backdropClick(e) {\n    let newState = this.state;\n    newState.mobileMinimized = true;\n    this.toggleMinimizedBodyClass(\"mobile\", true);\n    this.setState(newState);\n\n    if (this.props.backdropOnClick) {\n      this.props.backdropOnClick(e);\n    }\n  }\n\n  componentDidMount() {\n    let newState = this.state;\n    document.body.classList.add(this.classes.active);\n    newState.asideHover = this.state.desktopMinimized;\n    this.toggleMinimizedBodyClass(\"desktop\", this.state.desktopMinimized);\n    this.toggleMinimizedBodyClass(\"mobile\", this.state.mobileMinimized);\n    this.setState(newState);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      let newState = this.state;\n\n      if (window.innerWidth >= this.breakpoint) {\n        newState.desktopMinimized = this.props.desktopMinimized;\n        this.toggleMinimizedBodyClass(\"desktop\", this.state.desktopMinimized);\n        this.setState(newState);\n\n        if (this.props.desktopMinimized) {\n          setTimeout(() => {\n            newState.asideHover = true;\n            this.setState(newState);\n          }, this.transitionDuration);\n        } else {\n          newState.asideHover = false;\n          this.setState(newState);\n        }\n      } else {\n        newState.mobileMinimized = this.props.mobileMinimized;\n        this.toggleMinimizedBodyClass(\"mobile\", this.state.mobileMinimized);\n        this.setState(newState);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const removedClasses = [this.classes.active, this.classes.desktop.minimized, this.classes.desktop.maximized, this.classes.mobile.minimized, this.classes.mobile.maximized];\n    removedClasses.forEach(removedClass => {\n      document.body.classList.remove(removedClass);\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      desktopMinimized,\n      mobileMinimized,\n      backdropOnClick,\n      className,\n      cssModule,\n      children,\n      innerRef,\n      tag: Tag\n    } = _this$props,\n          attributes = _objectWithoutProperties(_this$props, [\"desktopMinimized\", \"mobileMinimized\", \"backdropOnClick\", \"className\", \"cssModule\", \"children\", \"innerRef\", \"tag\"]);\n\n    const classes = mapToCssModules(classNames(\"aside\", {\n      \"aside-hover\": this.state.asideHover\n    }, className), cssModule);\n    return __jsx(Tag, _extends({}, attributes, {\n      className: classes,\n      ref: innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }), children, !this.state.mobileMinimized ? __jsx(Portal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      id: \"aside-backdrop\",\n      onClick: this.backdropClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    })) : null);\n  }\n\n}\n\nAside.propTypes = propTypes;\nAside.defaultProps = defaultProps;\nAside.Header = AsideHeader;\nAside.Body = AsideBody;\nAside.Title = AsideTitle;\nAside.Addon = AsideAddon;\nexport default Aside;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/modules/components/Aside.jsx"],"names":["React","PropTypes","Portal","classNames","mapToCssModules","tagPropType","refPropType","AsideHeader","AsideBody","AsideTitle","AsideAddon","propTypes","desktopMinimized","bool","mobileMinimized","backdropOnClick","func","className","string","cssModule","object","children","node","innerRef","tag","defaultProps","Aside","Component","constructor","props","breakpoint","transitionDuration","state","asideHover","classes","active","desktop","minimized","maximized","mobile","backdropClick","bind","toggleMinimizedBodyClass","viewport","document","body","classList","add","remove","e","newState","setState","componentDidMount","componentDidUpdate","prevProps","window","innerWidth","setTimeout","componentWillUnmount","removedClasses","forEach","removedClass","render","Tag","attributes","Header","Body","Title","Addon"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Portal from \"./Portal\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\"\nimport AsideHeader from \"./AsideHeader\"\nimport AsideBody from \"./AsideBody\"\nimport AsideTitle from \"./AsideTitle\"\nimport AsideAddon from \"./AsideAddon\"\n\nconst propTypes = {\n  desktopMinimized: PropTypes.bool,\n  mobileMinimized: PropTypes.bool,\n  backdropOnClick: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  innerRef: refPropType,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  desktopMinimized: false,\n  mobileMinimized: true,\n  tag: \"div\"\n}\n\nclass Aside extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.breakpoint = 1025\n    this.transitionDuration = 200\n    this.state = {\n      desktopMinimized: this.props.desktopMinimized,\n      mobileMinimized: this.props.mobileMinimized,\n      asideHover: false\n    }\n    this.classes = {\n      active: \"aside-active\",\n      desktop: {\n        minimized: \"aside-desktop-minimized\",\n        maximized: \"aside-desktop-maximized\"\n      },\n      mobile: {\n        minimized: \"aside-mobile-minimized\",\n        maximized: \"aside-mobile-maximized\"\n      }\n    }\n    this.backdropClick = this.backdropClick.bind(this)\n    this.toggleMinimizedBodyClass = this.toggleMinimizedBodyClass.bind(this)\n  }\n\n  toggleMinimizedBodyClass(viewport, minimized) {\n    if (minimized) {\n      document.body.classList.add(this.classes[viewport].minimized)\n      document.body.classList.remove(this.classes[viewport].maximized)\n    } else {\n      document.body.classList.remove(this.classes[viewport].minimized)\n      document.body.classList.add(this.classes[viewport].maximized)\n    }\n  }\n\n  backdropClick(e) {\n    let newState = this.state\n    newState.mobileMinimized = true\n    this.toggleMinimizedBodyClass(\"mobile\", true)\n    this.setState(newState)\n\n    if (this.props.backdropOnClick) {\n      this.props.backdropOnClick(e)\n    }\n  }\n\n  componentDidMount() {\n    let newState = this.state\n\n    document.body.classList.add(this.classes.active)\n    newState.asideHover = this.state.desktopMinimized\n\n    this.toggleMinimizedBodyClass(\"desktop\", this.state.desktopMinimized)\n    this.toggleMinimizedBodyClass(\"mobile\", this.state.mobileMinimized)\n\n    this.setState(newState)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      let newState = this.state\n\n      if (window.innerWidth >= this.breakpoint) {\n        newState.desktopMinimized = this.props.desktopMinimized\n        this.toggleMinimizedBodyClass(\"desktop\", this.state.desktopMinimized)\n        this.setState(newState)\n        if (this.props.desktopMinimized) {\n          setTimeout(() => {\n            newState.asideHover = true\n            this.setState(newState)\n          }, this.transitionDuration)\n        } else {\n          newState.asideHover = false\n          this.setState(newState)\n        }\n      } else {\n        newState.mobileMinimized = this.props.mobileMinimized\n        this.toggleMinimizedBodyClass(\"mobile\", this.state.mobileMinimized)\n        this.setState(newState)\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const removedClasses = [\n      this.classes.active,\n      this.classes.desktop.minimized,\n      this.classes.desktop.maximized,\n      this.classes.mobile.minimized,\n      this.classes.mobile.maximized\n    ]\n\n    removedClasses.forEach(removedClass => {\n      document.body.classList.remove(removedClass)\n    })\n  }\n\n  render() {\n    const {\n      desktopMinimized,\n      mobileMinimized,\n      backdropOnClick,\n      className,\n      cssModule,\n      children,\n      innerRef,\n      tag: Tag,\n      ...attributes\n    } = this.props\n\n    const classes = mapToCssModules(\n      classNames(\"aside\", { \"aside-hover\": this.state.asideHover }, className),\n      cssModule\n    )\n\n    return (\n      <Tag {...attributes} className={classes} ref={innerRef}>\n        {children}\n        {!this.state.mobileMinimized ? (\n          <Portal>\n            <div id=\"aside-backdrop\" onClick={this.backdropClick} />\n          </Portal>\n        ) : null}\n      </Tag>\n    )\n  }\n}\n\nAside.propTypes = propTypes\nAside.defaultProps = defaultProps\n\nAside.Header = AsideHeader\nAside.Body = AsideBody\nAside.Title = AsideTitle\nAside.Addon = AsideAddon\n\nexport default Aside\n"]},"metadata":{},"sourceType":"module"}