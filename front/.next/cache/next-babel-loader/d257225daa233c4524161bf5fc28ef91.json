{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction withLayout(Page, layout = \"default\") {\n  class LayoutWrapper extends React.Component {\n    static async getInitialProps(ctx) {\n      let initialProps = {}; // Get initial properties\n\n      if (Page.getInitialProps) {\n        initialProps = await Page.getInitialProps(ctx);\n      }\n\n      return _objectSpread(_objectSpread({}, initialProps), {}, {\n        layout\n      });\n    }\n\n    render() {\n      return __jsx(Page, this.props);\n    }\n\n  }\n\n  return LayoutWrapper;\n}\n\nexport default withLayout;","map":null,"metadata":{},"sourceType":"module"}