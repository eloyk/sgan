{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\";\nimport ButtonMarker from \"./ButtonMarker\";\nimport ButtonCounter from \"./ButtonCounter\";\nvar defaultProps = {\n  variant: \"primary\",\n  tag: \"button\"\n};\n\nvar Button = /*#__PURE__*/function (_React$Component) {\n  _inherits(Button, _React$Component);\n\n  var _super = _createSuper(Button);\n\n  function Button(props) {\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    _this = _super.call(this, props);\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"onClick\",\n    value: function onClick(e) {\n      if (this.props.disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      if (this.props.onClick) {\n        this.props.onClick(e);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$props = this.props,\n          label = _this$props[\"aria-label\"],\n          className = _this$props.className,\n          cssModule = _this$props.cssModule,\n          innerRef = _this$props.innerRef,\n          onClick = _this$props.onClick,\n          disabled = _this$props.disabled,\n          variant = _this$props.variant,\n          height = _this$props.height,\n          active = _this$props.active,\n          circle = _this$props.circle,\n          width = _this$props.width,\n          block = _this$props.block,\n          icon = _this$props.icon,\n          pill = _this$props.pill,\n          size = _this$props.size,\n          Tag = _this$props.tag,\n          attributes = _objectWithoutProperties(_this$props, [\"aria-label\", \"className\", \"cssModule\", \"innerRef\", \"onClick\", \"disabled\", \"variant\", \"height\", \"active\", \"circle\", \"width\", \"block\", \"icon\", \"pill\", \"size\", \"tag\"]);\n\n      var classes = mapToCssModules(classNames(\"btn\", \"btn-\".concat(variant), (_classNames = {\n        \"btn-icon\": icon,\n        \"btn-pill\": pill,\n        \"btn-block\": block,\n        \"btn-circle\": circle\n      }, _defineProperty(_classNames, \"btn-\".concat(size), size), _defineProperty(_classNames, \"btn-\".concat(width), width), _defineProperty(_classNames, \"btn-\".concat(height), height), _defineProperty(_classNames, \"active\", active), _defineProperty(_classNames, \"disabled\", disabled), _classNames), className), cssModule);\n\n      if (attributes.href && Tag === \"button\") {\n        Tag = \"a\";\n      }\n\n      return __jsx(Tag, _extends({\n        type: Tag === \"button\" && attributes.onClick ? \"button\" : undefined\n      }, attributes, {\n        className: classes,\n        ref: innerRef,\n        onClick: this.onClick,\n        \"aria-label\": label\n      }));\n    }\n  }]);\n\n  return Button;\n}(React.Component);\n\nButton.defaultProps = defaultProps;\nButton.Marker = ButtonMarker;\nButton.Counter = ButtonCounter;\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}