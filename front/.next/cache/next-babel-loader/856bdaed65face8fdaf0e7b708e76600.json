{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\BreadcrumbItem.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\";\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  innerRef: refPropType,\n  iconTag: tagPropType,\n  textTag: tagPropType,\n  active: PropTypes.bool,\n  icon: PropTypes.node,\n  tag: tagPropType\n};\nconst defaultProps = {\n  iconTag: \"div\",\n  textTag: \"div\",\n  tag: \"li\"\n};\n\nconst BreadcrumbItem = props => {\n  let {\n    className,\n    cssModule,\n    children,\n    innerRef,\n    iconTag: IconTag,\n    textTag: TextTag,\n    active,\n    icon,\n    tag: Tag\n  } = props,\n      attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"children\", \"innerRef\", \"iconTag\", \"textTag\", \"active\", \"icon\", \"tag\"]);\n\n  const classes = mapToCssModules(classNames(\"breadcrumb-item\", {\n    active\n  }, className), cssModule);\n  const iconClasses = mapToCssModules(classNames(\"breadcrumb-icon\"), cssModule);\n  const textClasses = mapToCssModules(classNames(\"breadcrumb-text\"), cssModule);\n\n  if (attributes.href) {\n    Tag = \"a\";\n  }\n\n  return __jsx(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes,\n    \"aria-current\": active ? \"page\" : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), icon ? __jsx(IconTag, {\n    className: iconClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, icon) : false, __jsx(TextTag, {\n    className: textClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/BreadcrumbItem.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","refPropType","propTypes","className","string","cssModule","object","children","node","innerRef","iconTag","textTag","active","bool","icon","tag","defaultProps","BreadcrumbItem","props","IconTag","TextTag","Tag","attributes","classes","iconClasses","textClasses","href","undefined"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,WAAvC,QAA0D,SAA1D;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEN,SAAS,CAACO,MADL;AAEhBC,EAAAA,SAAS,EAAER,SAAS,CAACS,MAFL;AAGhBC,EAAAA,QAAQ,EAAEV,SAAS,CAACW,IAHJ;AAIhBC,EAAAA,QAAQ,EAAER,WAJM;AAKhBS,EAAAA,OAAO,EAAEV,WALO;AAMhBW,EAAAA,OAAO,EAAEX,WANO;AAOhBY,EAAAA,MAAM,EAAEf,SAAS,CAACgB,IAPF;AAQhBC,EAAAA,IAAI,EAAEjB,SAAS,CAACW,IARA;AAShBO,EAAAA,GAAG,EAAEf;AATW,CAAlB;AAYA,MAAMgB,YAAY,GAAG;AACnBN,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBI,EAAAA,GAAG,EAAE;AAHc,CAArB;;AAMA,MAAME,cAAc,GAAGC,KAAK,IAAI;AAC9B,MAAI;AACFf,IAAAA,SADE;AAEFE,IAAAA,SAFE;AAGFE,IAAAA,QAHE;AAIFE,IAAAA,QAJE;AAKFC,IAAAA,OAAO,EAAES,OALP;AAMFR,IAAAA,OAAO,EAAES,OANP;AAOFR,IAAAA,MAPE;AAQFE,IAAAA,IARE;AASFC,IAAAA,GAAG,EAAEM;AATH,MAWAH,KAXJ;AAAA,MAUKI,UAVL,4BAWIJ,KAXJ;;AAaA,QAAMK,OAAO,GAAGxB,eAAe,CAACD,UAAU,CAAC,iBAAD,EAAoB;AAAEc,IAAAA;AAAF,GAApB,EAAgCT,SAAhC,CAAX,EAAuDE,SAAvD,CAA/B;AACA,QAAMmB,WAAW,GAAGzB,eAAe,CAACD,UAAU,CAAC,iBAAD,CAAX,EAAgCO,SAAhC,CAAnC;AACA,QAAMoB,WAAW,GAAG1B,eAAe,CAACD,UAAU,CAAC,iBAAD,CAAX,EAAgCO,SAAhC,CAAnC;;AAEA,MAAIiB,UAAU,CAACI,IAAf,EAAqB;AACnBL,IAAAA,GAAG,GAAG,GAAN;AACD;;AAED,SACE,MAAC,GAAD,eAASC,UAAT;AAAqB,IAAA,GAAG,EAAEb,QAA1B;AAAoC,IAAA,SAAS,EAAEc,OAA/C;AAAwD,oBAAcX,MAAM,GAAG,MAAH,GAAYe,SAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGb,IAAI,GAAG,MAAC,OAAD;AAAS,IAAA,SAAS,EAAEU,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCV,IAAlC,CAAH,GAAuD,KAD9D,EAEE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAEW,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkClB,QAAlC,CAFF,CADF;AAMD,CA5BD;;AA8BAU,cAAc,CAACf,SAAf,GAA2BA,SAA3B;AACAe,cAAc,CAACD,YAAf,GAA8BA,YAA9B;AAEA,eAAeC,cAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  innerRef: refPropType,\n  iconTag: tagPropType,\n  textTag: tagPropType,\n  active: PropTypes.bool,\n  icon: PropTypes.node,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  iconTag: \"div\",\n  textTag: \"div\",\n  tag: \"li\"\n}\n\nconst BreadcrumbItem = props => {\n  let {\n    className,\n    cssModule,\n    children,\n    innerRef,\n    iconTag: IconTag,\n    textTag: TextTag,\n    active,\n    icon,\n    tag: Tag,\n    ...attributes\n  } = props\n\n  const classes = mapToCssModules(classNames(\"breadcrumb-item\", { active }, className), cssModule)\n  const iconClasses = mapToCssModules(classNames(\"breadcrumb-icon\"), cssModule)\n  const textClasses = mapToCssModules(classNames(\"breadcrumb-text\"), cssModule)\n\n  if (attributes.href) {\n    Tag = \"a\"\n  }\n\n  return (\n    <Tag {...attributes} ref={innerRef} className={classes} aria-current={active ? \"page\" : undefined}>\n      {icon ? <IconTag className={iconClasses}>{icon}</IconTag> : false}\n      <TextTag className={textClasses}>{children}</TextTag>\n    </Tag>\n  )\n}\n\nBreadcrumbItem.propTypes = propTypes\nBreadcrumbItem.defaultProps = defaultProps\n\nexport default BreadcrumbItem\n"]},"metadata":{},"sourceType":"module"}