{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\ButtonToggle.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules } from \"./utils\";\nimport Button from \"./Button\";\nvar propTypes = {\n  onClick: PropTypes.func,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  defaultValue: PropTypes.bool\n};\nvar defaultProps = {\n  defaultValue: false\n};\n\nvar ButtonToggle = /*#__PURE__*/function (_React$Component) {\n  _inherits(ButtonToggle, _React$Component);\n\n  var _super = _createSuper(ButtonToggle);\n\n  function ButtonToggle(props) {\n    var _this;\n\n    _classCallCheck(this, ButtonToggle);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      toggled: props.defaultValue,\n      focus: false\n    };\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ButtonToggle, [{\n    key: \"onBlur\",\n    value: function onBlur(e) {\n      if (this.props.onBlur) {\n        this.props.onBlur(e);\n      }\n\n      this.setState({\n        focus: false\n      });\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(e) {\n      if (this.props.onFocus) {\n        this.props.onFocus(e);\n      }\n\n      this.setState({\n        focus: true\n      });\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(e) {\n      if (this.props.onClick) {\n        this.props.onClick(e);\n      }\n\n      this.setState(function (_ref) {\n        var toggled = _ref.toggled;\n        return {\n          toggled: !toggled\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          attributes = _objectWithoutProperties(_this$props, [\"className\"]);\n\n      var classes = mapToCssModules(classNames(className, {\n        focus: this.state.focus\n      }), this.props.cssModule);\n      return __jsx(Button, _extends({\n        active: this.state.toggled,\n        onBlur: this.onBlur,\n        onFocus: this.onFocus,\n        onClick: this.onClick,\n        className: classes\n      }, attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return ButtonToggle;\n}(React.Component);\n\nButtonToggle.propTypes = propTypes;\nButtonToggle.defaultProps = defaultProps;\nexport default ButtonToggle;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/ButtonToggle.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","Button","propTypes","onClick","func","onBlur","onFocus","defaultValue","bool","defaultProps","ButtonToggle","props","state","toggled","focus","bind","e","setState","className","attributes","classes","cssModule","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAEL,SAAS,CAACM,IADH;AAEhBC,EAAAA,MAAM,EAAEP,SAAS,CAACM,IAFF;AAGhBE,EAAAA,OAAO,EAAER,SAAS,CAACM,IAHH;AAIhBG,EAAAA,YAAY,EAAET,SAAS,CAACU;AAJR,CAAlB;AAOA,IAAMC,YAAY,GAAG;AACnBF,EAAAA,YAAY,EAAE;AADK,CAArB;;IAIMG,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAEF,KAAK,CAACJ,YADJ;AAEXO,MAAAA,KAAK,EAAE;AAFI,KAAb;AAKA,UAAKT,MAAL,GAAc,MAAKA,MAAL,CAAYU,IAAZ,+BAAd;AACA,UAAKT,OAAL,GAAe,MAAKA,OAAL,CAAaS,IAAb,+BAAf;AACA,UAAKZ,OAAL,GAAe,MAAKA,OAAL,CAAaY,IAAb,+BAAf;AAViB;AAWlB;;;;WAED,gBAAOC,CAAP,EAAU;AACR,UAAI,KAAKL,KAAL,CAAWN,MAAf,EAAuB;AACrB,aAAKM,KAAL,CAAWN,MAAX,CAAkBW,CAAlB;AACD;;AAED,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE;AADK,OAAd;AAGD;;;WAED,iBAAQE,CAAR,EAAW;AACT,UAAI,KAAKL,KAAL,CAAWL,OAAf,EAAwB;AACtB,aAAKK,KAAL,CAAWL,OAAX,CAAmBU,CAAnB;AACD;;AAED,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE;AADK,OAAd;AAGD;;;WAED,iBAAQE,CAAR,EAAW;AACT,UAAI,KAAKL,KAAL,CAAWR,OAAf,EAAwB;AACtB,aAAKQ,KAAL,CAAWR,OAAX,CAAmBa,CAAnB;AACD;;AAED,WAAKC,QAAL,CAAc;AAAA,YAAGJ,OAAH,QAAGA,OAAH;AAAA,eAAkB;AAC9BA,UAAAA,OAAO,EAAE,CAACA;AADoB,SAAlB;AAAA,OAAd;AAGD;;;WAED,kBAAS;AAAA,wBAC8B,KAAKF,KADnC;AAAA,UACCO,SADD,eACCA,SADD;AAAA,UACeC,UADf;;AAGP,UAAMC,OAAO,GAAGpB,eAAe,CAC7BD,UAAU,CAACmB,SAAD,EAAY;AACpBJ,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AADE,OAAZ,CADmB,EAI7B,KAAKH,KAAL,CAAWU,SAJkB,CAA/B;AAOA,aACE,MAAC,MAAD;AACE,QAAA,MAAM,EAAE,KAAKT,KAAL,CAAWC,OADrB;AAEE,QAAA,MAAM,EAAE,KAAKR,MAFf;AAGE,QAAA,OAAO,EAAE,KAAKC,OAHhB;AAIE,QAAA,OAAO,EAAE,KAAKH,OAJhB;AAKE,QAAA,SAAS,EAAEiB;AALb,SAMMD,UANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAUD;;;;EAhEwBtB,KAAK,CAACyB,S;;AAmEjCZ,YAAY,CAACR,SAAb,GAAyBA,SAAzB;AACAQ,YAAY,CAACD,YAAb,GAA4BA,YAA5B;AAEA,eAAeC,YAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules } from \"./utils\"\nimport Button from \"./Button\"\n\nconst propTypes = {\n  onClick: PropTypes.func,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  defaultValue: PropTypes.bool\n}\n\nconst defaultProps = {\n  defaultValue: false\n}\n\nclass ButtonToggle extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      toggled: props.defaultValue,\n      focus: false\n    }\n\n    this.onBlur = this.onBlur.bind(this)\n    this.onFocus = this.onFocus.bind(this)\n    this.onClick = this.onClick.bind(this)\n  }\n\n  onBlur(e) {\n    if (this.props.onBlur) {\n      this.props.onBlur(e)\n    }\n\n    this.setState({\n      focus: false\n    })\n  }\n\n  onFocus(e) {\n    if (this.props.onFocus) {\n      this.props.onFocus(e)\n    }\n\n    this.setState({\n      focus: true\n    })\n  }\n\n  onClick(e) {\n    if (this.props.onClick) {\n      this.props.onClick(e)\n    }\n\n    this.setState(({ toggled }) => ({\n      toggled: !toggled\n    }))\n  }\n\n  render() {\n    const { className, ...attributes } = this.props\n\n    const classes = mapToCssModules(\n      classNames(className, {\n        focus: this.state.focus\n      }),\n      this.props.cssModule\n    )\n\n    return (\n      <Button\n        active={this.state.toggled}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n        onClick={this.onClick}\n        className={classes}\n        {...attributes}\n      />\n    )\n  }\n}\n\nButtonToggle.propTypes = propTypes\nButtonToggle.defaultProps = defaultProps\n\nexport default ButtonToggle\n"]},"metadata":{},"sourceType":"module"}