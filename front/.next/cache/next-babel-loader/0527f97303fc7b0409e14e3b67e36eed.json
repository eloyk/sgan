{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\modules\\\\slick\\\\slider.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { InnerSlider } from \"./inner-slider\";\nimport json2mq from \"json2mq\";\nimport defaultProps from \"./default-props\";\nimport { canUseDOM } from \"./utils/innerSliderUtils\";\n\nvar enquire = canUseDOM() && require(\"enquire.js\");\n\nvar Slider = /*#__PURE__*/function (_React$Component) {\n  _inherits(Slider, _React$Component);\n\n  var _super = _createSuper(Slider);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"innerSliderRefHandler\", function (ref) {\n      return _this.innerSlider = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickPrev\", function () {\n      return _this.innerSlider.slickPrev();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickNext\", function () {\n      return _this.innerSlider.slickNext();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickGoTo\", function (slide) {\n      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return _this.innerSlider.slickGoTo(slide, dontAnimate);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickPause\", function () {\n      return _this.innerSlider.pause(\"paused\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickPlay\", function () {\n      return _this.innerSlider.autoPlay(\"play\");\n    });\n\n    _this.state = {\n      breakpoint: null\n    };\n    _this._responsiveMediaHandlers = [];\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"media\",\n    value: function media(query, handler) {\n      // javascript handler for  css media query\n      enquire.register(query, handler);\n\n      this._responsiveMediaHandlers.push({\n        query: query,\n        handler: handler\n      });\n    } // handles responsive breakpoints\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // performance monitoring\n      //if (process.env.NODE_ENV !== 'production') {\n      //const { whyDidYouUpdate } = require('why-did-you-update')\n      //whyDidYouUpdate(React)\n      //}\n      if (this.props.responsive) {\n        var breakpoints = this.props.responsive.map(function (breakpt) {\n          return breakpt.breakpoint;\n        }); // sort them in increasing order of their numerical value\n\n        breakpoints.sort(function (x, y) {\n          return x - y;\n        });\n        breakpoints.forEach(function (breakpoint, index) {\n          // media query for each breakpoint\n          var bQuery;\n\n          if (index === 0) {\n            bQuery = json2mq({\n              minWidth: 0,\n              maxWidth: breakpoint\n            });\n          } else {\n            bQuery = json2mq({\n              minWidth: breakpoints[index - 1] + 1,\n              maxWidth: breakpoint\n            });\n          } // when not using server side rendering\n\n\n          canUseDOM() && _this2.media(bQuery, function () {\n            _this2.setState({\n              breakpoint: breakpoint\n            });\n          });\n        }); // Register media query for full screen. Need to support resize from small to large\n        // convert javascript object to media query string\n\n        var query = json2mq({\n          minWidth: breakpoints.slice(-1)[0]\n        });\n        canUseDOM() && this.media(query, function () {\n          _this2.setState({\n            breakpoint: null\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._responsiveMediaHandlers.forEach(function (obj) {\n        enquire.unregister(obj.query, obj.handler);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var settings;\n      var newProps;\n\n      if (this.state.breakpoint) {\n        newProps = this.props.responsive.filter(function (resp) {\n          return resp.breakpoint === _this3.state.breakpoint;\n        });\n        settings = newProps[0].settings === \"unslick\" ? \"unslick\" : _objectSpread(_objectSpread(_objectSpread({}, defaultProps), this.props), newProps[0].settings);\n      } else {\n        settings = _objectSpread(_objectSpread({}, defaultProps), this.props);\n      } // force scrolling by one if centerMode is on\n\n\n      if (settings.centerMode) {\n        if (settings.slidesToScroll > 1 && true) {\n          console.warn(\"slidesToScroll should be equal to 1 in centerMode, you are using \".concat(settings.slidesToScroll));\n        }\n\n        settings.slidesToScroll = 1;\n      } // force showing one slide and scrolling by one if the fade mode is on\n\n\n      if (settings.fade) {\n        if (settings.slidesToShow > 1 && true) {\n          console.warn(\"slidesToShow should be equal to 1 when fade is true, you're using \".concat(settings.slidesToShow));\n        }\n\n        if (settings.slidesToScroll > 1 && true) {\n          console.warn(\"slidesToScroll should be equal to 1 when fade is true, you're using \".concat(settings.slidesToScroll));\n        }\n\n        settings.slidesToShow = 1;\n        settings.slidesToScroll = 1;\n      } // makes sure that children is an array, even when there is only 1 child\n\n\n      var children = React.Children.toArray(this.props.children); // Children may contain false or null, so we should filter them\n      // children may also contain string filled with spaces (in certain cases where we use jsx strings)\n\n      children = children.filter(function (child) {\n        if (typeof child === \"string\") {\n          return !!child.trim();\n        }\n\n        return !!child;\n      }); // rows and slidesPerRow logic is handled here\n\n      if (settings.variableWidth && (settings.rows > 1 || settings.slidesPerRow > 1)) {\n        console.warn(\"variableWidth is not supported in case of rows > 1 or slidesPerRow > 1\");\n        settings.variableWidth = false;\n      }\n\n      var newChildren = [];\n      var currentWidth = null;\n\n      for (var i = 0; i < children.length; i += settings.rows * settings.slidesPerRow) {\n        var newSlide = [];\n\n        for (var j = i; j < i + settings.rows * settings.slidesPerRow; j += settings.slidesPerRow) {\n          var row = [];\n\n          for (var k = j; k < j + settings.slidesPerRow; k += 1) {\n            if (settings.variableWidth && children[k].props.style) {\n              currentWidth = children[k].props.style.width;\n            }\n\n            if (k >= children.length) break;\n            row.push( /*#__PURE__*/React.cloneElement(children[k], {\n              key: 100 * i + 10 * j + k,\n              tabIndex: -1,\n              style: {\n                width: \"\".concat(100 / settings.slidesPerRow, \"%\"),\n                display: \"inline-block\"\n              }\n            }));\n          }\n\n          newSlide.push(__jsx(\"div\", {\n            key: 10 * i + j,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 23\n            }\n          }, row));\n        }\n\n        if (settings.variableWidth) {\n          newChildren.push(__jsx(\"div\", {\n            key: i,\n            style: {\n              width: currentWidth\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 11\n            }\n          }, newSlide));\n        } else {\n          newChildren.push(__jsx(\"div\", {\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 26\n            }\n          }, newSlide));\n        }\n      }\n\n      if (settings === \"unslick\") {\n        var className = \"regular slider \" + (this.props.className || \"\");\n        return __jsx(\"div\", {\n          className: className,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 14\n          }\n        }, children);\n      } else if (newChildren.length <= settings.slidesToShow) {\n        settings.unslick = true;\n      }\n\n      return __jsx(InnerSlider, _extends({\n        style: this.props.style,\n        ref: this.innerSliderRefHandler\n      }, settings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }\n      }), newChildren);\n    }\n  }]);\n\n  return Slider;\n}(React.Component);\n\nexport { Slider as default };","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/modules/slick/slider.jsx"],"names":["React","InnerSlider","json2mq","defaultProps","canUseDOM","enquire","require","Slider","props","ref","innerSlider","slickPrev","slickNext","slide","dontAnimate","slickGoTo","pause","autoPlay","state","breakpoint","_responsiveMediaHandlers","query","handler","register","push","responsive","breakpoints","map","breakpt","sort","x","y","forEach","index","bQuery","minWidth","maxWidth","media","setState","slice","obj","unregister","settings","newProps","filter","resp","centerMode","slidesToScroll","console","warn","fade","slidesToShow","children","Children","toArray","child","trim","variableWidth","rows","slidesPerRow","newChildren","currentWidth","i","length","newSlide","j","row","k","style","width","cloneElement","key","tabIndex","display","className","unslick","innerSliderRefHandler","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { InnerSlider } from \"./inner-slider\"\nimport json2mq from \"json2mq\"\nimport defaultProps from \"./default-props\"\nimport { canUseDOM } from \"./utils/innerSliderUtils\"\nconst enquire = canUseDOM() && require(\"enquire.js\")\n\nexport default class Slider extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      breakpoint: null\n    }\n    this._responsiveMediaHandlers = []\n  }\n\n  innerSliderRefHandler = ref => (this.innerSlider = ref)\n\n  media(query, handler) {\n    // javascript handler for  css media query\n    enquire.register(query, handler)\n    this._responsiveMediaHandlers.push({ query, handler })\n  }\n\n  // handles responsive breakpoints\n  componentDidMount() {\n    // performance monitoring\n    //if (process.env.NODE_ENV !== 'production') {\n    //const { whyDidYouUpdate } = require('why-did-you-update')\n    //whyDidYouUpdate(React)\n    //}\n    if (this.props.responsive) {\n      let breakpoints = this.props.responsive.map(breakpt => breakpt.breakpoint)\n      // sort them in increasing order of their numerical value\n      breakpoints.sort((x, y) => x - y)\n\n      breakpoints.forEach((breakpoint, index) => {\n        // media query for each breakpoint\n        let bQuery\n        if (index === 0) {\n          bQuery = json2mq({ minWidth: 0, maxWidth: breakpoint })\n        } else {\n          bQuery = json2mq({\n            minWidth: breakpoints[index - 1] + 1,\n            maxWidth: breakpoint\n          })\n        }\n        // when not using server side rendering\n        canUseDOM() &&\n          this.media(bQuery, () => {\n            this.setState({ breakpoint: breakpoint })\n          })\n      })\n\n      // Register media query for full screen. Need to support resize from small to large\n      // convert javascript object to media query string\n      let query = json2mq({ minWidth: breakpoints.slice(-1)[0] })\n\n      canUseDOM() &&\n        this.media(query, () => {\n          this.setState({ breakpoint: null })\n        })\n    }\n  }\n\n  componentWillUnmount() {\n    this._responsiveMediaHandlers.forEach(function(obj) {\n      enquire.unregister(obj.query, obj.handler)\n    })\n  }\n\n  slickPrev = () => this.innerSlider.slickPrev()\n\n  slickNext = () => this.innerSlider.slickNext()\n\n  slickGoTo = (slide, dontAnimate = false) => this.innerSlider.slickGoTo(slide, dontAnimate)\n\n  slickPause = () => this.innerSlider.pause(\"paused\")\n\n  slickPlay = () => this.innerSlider.autoPlay(\"play\")\n\n  render() {\n    var settings\n    var newProps\n    if (this.state.breakpoint) {\n      newProps = this.props.responsive.filter(resp => resp.breakpoint === this.state.breakpoint)\n      settings =\n        newProps[0].settings === \"unslick\"\n          ? \"unslick\"\n          : { ...defaultProps, ...this.props, ...newProps[0].settings }\n    } else {\n      settings = { ...defaultProps, ...this.props }\n    }\n\n    // force scrolling by one if centerMode is on\n    if (settings.centerMode) {\n      if (settings.slidesToScroll > 1 && process.env.NODE_ENV !== \"production\") {\n        console.warn(\n          `slidesToScroll should be equal to 1 in centerMode, you are using ${settings.slidesToScroll}`\n        )\n      }\n      settings.slidesToScroll = 1\n    }\n    // force showing one slide and scrolling by one if the fade mode is on\n    if (settings.fade) {\n      if (settings.slidesToShow > 1 && process.env.NODE_ENV !== \"production\") {\n        console.warn(\n          `slidesToShow should be equal to 1 when fade is true, you're using ${settings.slidesToShow}`\n        )\n      }\n      if (settings.slidesToScroll > 1 && process.env.NODE_ENV !== \"production\") {\n        console.warn(\n          `slidesToScroll should be equal to 1 when fade is true, you're using ${settings.slidesToScroll}`\n        )\n      }\n      settings.slidesToShow = 1\n      settings.slidesToScroll = 1\n    }\n\n    // makes sure that children is an array, even when there is only 1 child\n    let children = React.Children.toArray(this.props.children)\n\n    // Children may contain false or null, so we should filter them\n    // children may also contain string filled with spaces (in certain cases where we use jsx strings)\n    children = children.filter(child => {\n      if (typeof child === \"string\") {\n        return !!child.trim()\n      }\n      return !!child\n    })\n\n    // rows and slidesPerRow logic is handled here\n    if (settings.variableWidth && (settings.rows > 1 || settings.slidesPerRow > 1)) {\n      console.warn(`variableWidth is not supported in case of rows > 1 or slidesPerRow > 1`)\n      settings.variableWidth = false\n    }\n    let newChildren = []\n    let currentWidth = null\n    for (let i = 0; i < children.length; i += settings.rows * settings.slidesPerRow) {\n      let newSlide = []\n      for (let j = i; j < i + settings.rows * settings.slidesPerRow; j += settings.slidesPerRow) {\n        let row = []\n        for (let k = j; k < j + settings.slidesPerRow; k += 1) {\n          if (settings.variableWidth && children[k].props.style) {\n            currentWidth = children[k].props.style.width\n          }\n          if (k >= children.length) break\n          row.push(\n            React.cloneElement(children[k], {\n              key: 100 * i + 10 * j + k,\n              tabIndex: -1,\n              style: {\n                width: `${100 / settings.slidesPerRow}%`,\n                display: \"inline-block\"\n              }\n            })\n          )\n        }\n        newSlide.push(<div key={10 * i + j}>{row}</div>)\n      }\n      if (settings.variableWidth) {\n        newChildren.push(\n          <div key={i} style={{ width: currentWidth }}>\n            {newSlide}\n          </div>\n        )\n      } else {\n        newChildren.push(<div key={i}>{newSlide}</div>)\n      }\n    }\n\n    if (settings === \"unslick\") {\n      const className = \"regular slider \" + (this.props.className || \"\")\n      return <div className={className}>{children}</div>\n    } else if (newChildren.length <= settings.slidesToShow) {\n      settings.unslick = true\n    }\n    return (\n      <InnerSlider style={this.props.style} ref={this.innerSliderRefHandler} {...settings}>\n        {newChildren}\n      </InnerSlider>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}