{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\components\\\\firebase\\\\firebaseAuth.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useContext, createContext } from \"react\";\nimport { firebaseClient } from \"./firebaseClient\";\nimport nookies from \"nookies\"; // Set authentication context\n\nvar AuthContext = /*#__PURE__*/createContext({\n  user: null\n});\nexport function AuthProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  useEffect(function () {\n    // Set Cookie when firebase authentication token is changed\n    return firebaseClient.auth().onIdTokenChanged( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n        var cookieExpireIn, token;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                cookieExpireIn = 30 * 24 * 60 * 60; // Check whether user has logged in\n\n                if (user) {\n                  _context.next = 6;\n                  break;\n                }\n\n                setUser(null); // Remove token from cookie\n\n                nookies.set(null, \"token\", \"\", {\n                  maxAge: cookieExpireIn\n                });\n                _context.next = 11;\n                break;\n\n              case 6:\n                _context.next = 8;\n                return user.getIdToken();\n\n              case 8:\n                token = _context.sent;\n                setUser(user); // Store token to cookie\n\n                nookies.set(null, \"token\", token, {\n                  maxAge: cookieExpireIn\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  }, []); // Force refresh the token every 10 minutes\n\n  useEffect(function () {\n    var handle = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var user;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              user = firebaseClient.auth().currentUser;\n\n              if (!user) {\n                _context2.next = 4;\n                break;\n              }\n\n              _context2.next = 4;\n              return user.getIdToken(true);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })), 10 * 60 * 1000);\n    return function () {\n      return clearInterval(handle);\n    };\n  }, []);\n  return __jsx(AuthContext.Provider, {\n    value: {\n      user: user\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  }, children);\n}\n\n_s(AuthProvider, \"yy5ZvVAQsprr2pHcLIzfQbyK1Yg=\");\n\n_c = AuthProvider;\nexport var useAuth = function useAuth() {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/components/firebase/firebaseAuth.jsx"],"names":["useState","useEffect","useContext","createContext","firebaseClient","nookies","AuthContext","user","AuthProvider","children","setUser","auth","onIdTokenChanged","cookieExpireIn","set","maxAge","getIdToken","token","handle","setInterval","currentUser","clearInterval","useAuth"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,aAA1C,QAA+D,OAA/D;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,OAAP,MAAoB,SAApB,C,CAEA;;AACA,IAAMC,WAAW,gBAAGH,aAAa,CAAC;AAChCI,EAAAA,IAAI,EAAE;AAD0B,CAAD,CAAjC;AAIA,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACjBT,QAAQ,CAAC,IAAD,CADS;AAAA,MAClCO,IADkC;AAAA,MAC5BG,OAD4B;;AAGzCT,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,WAAOG,cAAc,CAACO,IAAf,GAAsBC,gBAAtB;AAAA,2EAAuC,iBAAML,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACtCM,gBAAAA,cADsC,GACrB,KAAK,EAAL,GAAU,EAAV,GAAe,EADM,EAG5C;;AAH4C,oBAIvCN,IAJuC;AAAA;AAAA;AAAA;;AAK1CG,gBAAAA,OAAO,CAAC,IAAD,CAAP,CAL0C,CAO1C;;AACAL,gBAAAA,OAAO,CAACS,GAAR,CAAY,IAAZ,EAAkB,OAAlB,EAA2B,EAA3B,EAA+B;AAC7BC,kBAAAA,MAAM,EAAEF;AADqB,iBAA/B;AAR0C;AAAA;;AAAA;AAAA;AAAA,uBAYtBN,IAAI,CAACS,UAAL,EAZsB;;AAAA;AAYpCC,gBAAAA,KAZoC;AAa1CP,gBAAAA,OAAO,CAACH,IAAD,CAAP,CAb0C,CAe1C;;AACAF,gBAAAA,OAAO,CAACS,GAAR,CAAY,IAAZ,EAAkB,OAAlB,EAA2BG,KAA3B,EAAkC;AAChCF,kBAAAA,MAAM,EAAEF;AADwB,iBAAlC;;AAhB0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvC;;AAAA;AAAA;AAAA;AAAA,QAAP;AAqBD,GAvBQ,EAuBN,EAvBM,CAAT,CAHyC,CA4BzC;;AACAZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMiB,MAAM,GAAGC,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBZ,cAAAA,IADmB,GACZH,cAAc,CAACO,IAAf,GAAsBS,WADV;;AAAA,mBAGrBb,IAHqB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGTA,IAAI,CAACS,UAAL,CAAgB,IAAhB,CAHS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,IAIvB,KAAK,EAAL,GAAU,IAJa,CAA1B;AAMA,WAAO;AAAA,aAAMK,aAAa,CAACH,MAAD,CAAnB;AAAA,KAAP;AACD,GARQ,EAQN,EARM,CAAT;AAUA,SAAO,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEX,MAAAA,IAAI,EAAJA;AAAF,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCE,QAAxC,CAAP;AACD;;GAxCeD,Y;;KAAAA,Y;AA0ChB,OAAO,IAAMc,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAC3B,SAAOpB,UAAU,CAACI,WAAD,CAAjB;AACD,CAFM;;IAAMgB,O","sourcesContent":["import { useState, useEffect, useContext, createContext } from \"react\"\nimport { firebaseClient } from \"./firebaseClient\"\nimport nookies from \"nookies\"\n\n// Set authentication context\nconst AuthContext = createContext({\n  user: null\n})\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    // Set Cookie when firebase authentication token is changed\n    return firebaseClient.auth().onIdTokenChanged(async user => {\n      const cookieExpireIn = 30 * 24 * 60 * 60\n\n      // Check whether user has logged in\n      if (!user) {\n        setUser(null)\n\n        // Remove token from cookie\n        nookies.set(null, \"token\", \"\", {\n          maxAge: cookieExpireIn\n        })\n      } else {\n        const token = await user.getIdToken()\n        setUser(user)\n\n        // Store token to cookie\n        nookies.set(null, \"token\", token, {\n          maxAge: cookieExpireIn\n        })\n      }\n    })\n  }, [])\n\n  // Force refresh the token every 10 minutes\n  useEffect(() => {\n    const handle = setInterval(async () => {\n      const user = firebaseClient.auth().currentUser\n\n      if (user) await user.getIdToken(true)\n    }, 10 * 60 * 1000)\n\n    return () => clearInterval(handle)\n  }, [])\n\n  return <AuthContext.Provider value={{ user }}>{children}</AuthContext.Provider>\n}\n\nexport const useAuth = () => {\n  return useContext(AuthContext)\n}\n"]},"metadata":{},"sourceType":"module"}