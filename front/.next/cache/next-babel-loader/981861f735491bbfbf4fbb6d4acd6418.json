{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\DropdownToggle.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Reference } from \"react-popper\";\nimport { DropdownContext } from \"./DropdownContext\";\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\";\nimport Button from \"./Button\";\nvar propTypes = {\n  \"aria-haspopup\": PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: refPropType,\n  disabled: PropTypes.bool,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  variant: PropTypes.string,\n  active: PropTypes.bool,\n  caret: PropTypes.bool,\n  split: PropTypes.bool,\n  tag: tagPropType,\n  nav: PropTypes.bool\n};\nvar defaultProps = {\n  \"aria-haspopup\": true,\n  variant: \"primary\"\n};\n\nvar DropdownToggle = /*#__PURE__*/function (_React$Component) {\n  _inherits(DropdownToggle, _React$Component);\n\n  var _super = _createSuper(DropdownToggle);\n\n  function DropdownToggle(props) {\n    var _this;\n\n    _classCallCheck(this, DropdownToggle);\n\n    _this = _super.call(this, props);\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DropdownToggle, [{\n    key: \"onClick\",\n    value: function onClick(e) {\n      if (this.props.disabled || this.context.disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      if (this.props.nav && !this.props.tag) {\n        e.preventDefault();\n      }\n\n      if (this.props.onClick) {\n        this.props.onClick(e);\n      }\n\n      this.context.toggle(e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          cssModule = _this$props.cssModule,\n          innerRef = _this$props.innerRef,\n          disabled = _this$props.disabled,\n          children = _this$props.children,\n          onClick = _this$props.onClick,\n          variant = _this$props.variant,\n          active = _this$props.active,\n          caret = _this$props.caret,\n          split = _this$props.split,\n          tag = _this$props.tag,\n          nav = _this$props.nav,\n          attributes = _objectWithoutProperties(_this$props, [\"className\", \"cssModule\", \"innerRef\", \"disabled\", \"children\", \"onClick\", \"variant\", \"active\", \"caret\", \"split\", \"tag\", \"nav\"]);\n\n      var ariaLabel = attributes[\"aria-label\"] || \"Toggle Dropdown\";\n      var classes = mapToCssModules(classNames({\n        \"dropdown-toggle\": caret || split,\n        \"dropdown-toggle-split\": split,\n        \"nav-link\": nav,\n        active: active\n      }, className), cssModule);\n      var Tag;\n\n      if (nav && !tag) {\n        Tag = \"a\";\n        attributes.href = \"#\";\n      } else if (!tag) {\n        Tag = Button;\n        attributes.variant = variant;\n        attributes.cssModule = cssModule;\n      } else {\n        Tag = tag;\n      }\n\n      return __jsx(Reference, {\n        innerRef: innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, function (_ref) {\n        var ref = _ref.ref;\n        return __jsx(Tag, _extends({}, attributes, _defineProperty({}, typeof Tag === \"string\" ? \"ref\" : \"innerRef\", ref), {\n          className: classes,\n          onClick: _this2.onClick,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }\n        }), typeof children !== \"undefined\" ? children : __jsx(\"span\", {\n          className: \"sr-only\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }\n        }, ariaLabel));\n      });\n    }\n  }]);\n\n  return DropdownToggle;\n}(React.Component);\n\nDropdownToggle.propTypes = propTypes;\nDropdownToggle.defaultProps = defaultProps;\nDropdownToggle.contextType = DropdownContext;\nexport default DropdownToggle;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/DropdownToggle.jsx"],"names":["React","PropTypes","classNames","Reference","DropdownContext","mapToCssModules","tagPropType","refPropType","Button","propTypes","bool","className","string","cssModule","object","innerRef","disabled","children","node","onClick","func","variant","active","caret","split","tag","nav","defaultProps","DropdownToggle","props","bind","e","context","preventDefault","toggle","attributes","ariaLabel","classes","Tag","href","ref","Component","contextType"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { Reference } from \"react-popper\"\nimport { DropdownContext } from \"./DropdownContext\"\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\"\nimport Button from \"./Button\"\n\nconst propTypes = {\n  \"aria-haspopup\": PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: refPropType,\n  disabled: PropTypes.bool,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  variant: PropTypes.string,\n  active: PropTypes.bool,\n  caret: PropTypes.bool,\n  split: PropTypes.bool,\n  tag: tagPropType,\n  nav: PropTypes.bool\n}\n\nconst defaultProps = {\n  \"aria-haspopup\": true,\n  variant: \"primary\"\n}\n\nclass DropdownToggle extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.onClick = this.onClick.bind(this)\n  }\n\n  onClick(e) {\n    if (this.props.disabled || this.context.disabled) {\n      e.preventDefault()\n      return\n    }\n\n    if (this.props.nav && !this.props.tag) {\n      e.preventDefault()\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e)\n    }\n\n    this.context.toggle(e)\n  }\n\n  render() {\n    const {\n      className,\n      cssModule,\n      innerRef,\n      disabled,\n      children,\n      onClick,\n      variant,\n      active,\n      caret,\n      split,\n      tag,\n      nav,\n      ...attributes\n    } = this.props\n\n    const ariaLabel = attributes[\"aria-label\"] || \"Toggle Dropdown\"\n    const classes = mapToCssModules(\n      classNames(\n        {\n          \"dropdown-toggle\": caret || split,\n          \"dropdown-toggle-split\": split,\n          \"nav-link\": nav,\n          active: active\n        },\n        className\n      ),\n      cssModule\n    )\n\n    let Tag\n\n    if (nav && !tag) {\n      Tag = \"a\"\n      attributes.href = \"#\"\n    } else if (!tag) {\n      Tag = Button\n      attributes.variant = variant\n      attributes.cssModule = cssModule\n    } else {\n      Tag = tag\n    }\n\n    return (\n      <Reference innerRef={innerRef}>\n        {({ ref }) => (\n          <Tag\n            {...attributes}\n            {...{ [typeof Tag === \"string\" ? \"ref\" : \"innerRef\"]: ref }}\n            className={classes}\n            onClick={this.onClick}\n          >\n            {typeof children !== \"undefined\" ? (\n              children\n            ) : (\n              <span className=\"sr-only\">{ariaLabel}</span>\n            )}\n          </Tag>\n        )}\n      </Reference>\n    )\n  }\n}\n\nDropdownToggle.propTypes = propTypes\nDropdownToggle.defaultProps = defaultProps\nDropdownToggle.contextType = DropdownContext\n\nexport default DropdownToggle\n"]},"metadata":{},"sourceType":"module"}