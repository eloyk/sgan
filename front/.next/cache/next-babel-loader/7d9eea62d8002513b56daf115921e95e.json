{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Portlet } from \"@panely/components\";\nimport { connect } from \"react-redux\";\nimport Chart from \"@panely/apexcharts\";\n\nclass Widget30Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      title: \"Daily Income\",\n      subtitle: \"Check out each collumn for more details\"\n    });\n  }\n\n  render() {\n    const {\n      title,\n      subtitle\n    } = this.state;\n    return __jsx(Portlet, null, __jsx(Portlet.Body, null, __jsx(\"h4\", {\n      className: \"text-level-2\",\n      children: title\n    }), __jsx(\"span\", {\n      className: \"text-muted\",\n      children: subtitle\n    }), __jsx(Widget30Chart, {\n      theme: this.props.theme\n    })));\n  }\n\n}\n\nclass Widget30Chart extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"currency\", new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n      minimumFractionDigits: 0\n    }));\n\n    _defineProperty(this, \"state\", {\n      // Chart options\n      options: {\n        theme: {\n          mode: this.props.theme,\n          palette: \"palette1\"\n        },\n        chart: {\n          sparkline: {\n            enabled: true\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        stroke: {\n          show: true,\n          width: 2,\n          colors: [\"transparent\"]\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: [\"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\"]\n        },\n        tooltip: {\n          y: {\n            formatter: val => this.currency.format(val) // Format chart tooltip value\n\n          }\n        }\n      },\n      // Chart series data\n      series: [{\n        name: \"Profit\",\n        data: [4400, 5500, 5700, 5600, 6100, 5800, 6300, 6000]\n      }, {\n        name: \"Revenue\",\n        data: [7600, 8500, 10100, 9800, 8700, 10500, 9100, 11400]\n      }, {\n        name: \"Free Cash\",\n        data: [3500, 4100, 3600, 2600, 4500, 4800, 5200, 5300]\n      }]\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.theme !== prevProps.theme) {\n      let newState = this.state; // Change chart options\n\n      newState.options.theme = {\n        mode: this.props.theme,\n        palette: \"palette1\"\n      };\n      this.setState(newState);\n    }\n  }\n\n  render() {\n    const {\n      options,\n      series\n    } = this.state;\n    return __jsx(Chart, {\n      type: \"bar\",\n      options: options,\n      series: series,\n      height: 200\n    });\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.page.theme\n  };\n}\n\nexport default connect(mapStateToProps)(Widget30Component);","map":null,"metadata":{},"sourceType":"module"}