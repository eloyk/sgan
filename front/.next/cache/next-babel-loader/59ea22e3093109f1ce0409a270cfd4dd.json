{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\components\\\\layout\\\\part\\\\Aside.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Aside, Button } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { asideChange, asideToggle } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport AsideBody from \"./AsideBody\";\nimport Router from \"next/router\";\n\nvar AsideComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(AsideComponent, _React$Component);\n\n  var _super = _createSuper(AsideComponent);\n\n  function AsideComponent() {\n    _classCallCheck(this, AsideComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AsideComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      // Collapse aside when the routing start for mobile device\n      Router.events.on(\"routeChangeStart\", function () {\n        return _this.props.asideChange({\n          mobileMinimized: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          desktopMinimized = _this$props.desktopMinimized,\n          mobileMinimized = _this$props.mobileMinimized,\n          asideChange = _this$props.asideChange,\n          asideToggle = _this$props.asideToggle;\n      return __jsx(Aside, {\n        desktopMinimized: desktopMinimized,\n        mobileMinimized: mobileMinimized,\n        backdropOnClick: function backdropOnClick() {\n          return asideChange({\n            mobileMinimized: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }, __jsx(Aside.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, __jsx(Aside.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, \"Panely\"), __jsx(Aside.Addon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        icon: true,\n        size: \"lg\",\n        variant: \"label-primary\",\n        onClick: function onClick() {\n          return asideToggle();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faTimes,\n        className: \"aside-icon-minimize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }), __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faThumbtack,\n        className: \"aside-icon-maximize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      })))), __jsx(AsideBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return AsideComponent;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return state.aside;\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    asideChange: asideChange,\n    asideToggle: asideToggle\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AsideComponent);","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/components/layout/part/Aside.jsx"],"names":["Aside","Button","FontAwesomeIcon","asideChange","asideToggle","bindActionCreators","connect","SolidIcon","AsideBody","Router","AsideComponent","events","on","props","mobileMinimized","desktopMinimized","faTimes","faThumbtack","React","Component","mapStateToProps","state","aside","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,oBAA9B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,eAAzC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,SAAZ,MAA2B,mCAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;IAEMC,c;;;;;;;;;;;;;wCACgB;AAAA;;AAClB;AACAD,MAAAA,MAAM,CAACE,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC;AAAA,eAAM,KAAI,CAACC,KAAL,CAAWV,WAAX,CAAuB;AAAEW,UAAAA,eAAe,EAAE;AAAnB,SAAvB,CAAN;AAAA,OAArC;AACD;;;6BAEQ;AAAA,wBACiE,KAAKD,KADtE;AAAA,UACCE,gBADD,eACCA,gBADD;AAAA,UACmBD,eADnB,eACmBA,eADnB;AAAA,UACoCX,WADpC,eACoCA,WADpC;AAAA,UACiDC,WADjD,eACiDA,WADjD;AAGP,aACE,MAAC,KAAD;AACE,QAAA,gBAAgB,EAAEW,gBADpB;AAEE,QAAA,eAAe,EAAED,eAFnB;AAGE,QAAA,eAAe,EAAE;AAAA,iBAAMX,WAAW,CAAC;AAAEW,YAAAA,eAAe,EAAE;AAAnB,WAAD,CAAjB;AAAA,SAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,IAAI,EAAC,IAAlB;AAAuB,QAAA,OAAO,EAAC,eAA/B;AAA+C,QAAA,OAAO,EAAE;AAAA,iBAAMV,WAAW,EAAjB;AAAA,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,eAAD;AAAiB,QAAA,IAAI,EAAEG,SAAS,CAACS,OAAjC;AAA0C,QAAA,SAAS,EAAC,qBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,eAAD;AAAiB,QAAA,IAAI,EAAET,SAAS,CAACU,WAAjC;AAA8C,QAAA,SAAS,EAAC,qBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CAFF,CALF,EAcE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CADF;AAkBD;;;;EA3B0BC,KAAK,CAACC,S;;AA8BnC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAOA,KAAK,CAACC,KAAb;AACD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAOnB,kBAAkB,CAAC;AAAEF,IAAAA,WAAW,EAAXA,WAAF;AAAeC,IAAAA,WAAW,EAAXA;AAAf,GAAD,EAA+BoB,QAA/B,CAAzB;AACD;;AAED,eAAelB,OAAO,CAACc,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cb,cAA7C,CAAf","sourcesContent":["import { Aside, Button } from \"@panely/components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { asideChange, asideToggle } from \"store/actions\"\nimport { bindActionCreators } from \"redux\"\nimport { connect } from \"react-redux\"\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\"\nimport AsideBody from \"./AsideBody\"\nimport Router from \"next/router\"\n\nclass AsideComponent extends React.Component {\n  componentDidMount() {\n    // Collapse aside when the routing start for mobile device\n    Router.events.on(\"routeChangeStart\", () => this.props.asideChange({ mobileMinimized: true }))\n  }\n\n  render() {\n    const { desktopMinimized, mobileMinimized, asideChange, asideToggle } = this.props\n\n    return (\n      <Aside\n        desktopMinimized={desktopMinimized}\n        mobileMinimized={mobileMinimized}\n        backdropOnClick={() => asideChange({ mobileMinimized: true })}\n      >\n        <Aside.Header>\n          <Aside.Title>Panely</Aside.Title>\n          <Aside.Addon>\n            <Button icon size=\"lg\" variant=\"label-primary\" onClick={() => asideToggle()}>\n              <FontAwesomeIcon icon={SolidIcon.faTimes} className=\"aside-icon-minimize\" />\n              <FontAwesomeIcon icon={SolidIcon.faThumbtack} className=\"aside-icon-maximize\" />\n            </Button>\n          </Aside.Addon>\n        </Aside.Header>\n        <AsideBody />\n      </Aside>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return state.aside\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ asideChange, asideToggle }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AsideComponent)\n"]},"metadata":{},"sourceType":"module"}