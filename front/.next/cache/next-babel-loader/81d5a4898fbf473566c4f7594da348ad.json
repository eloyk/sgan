{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\Blockquote.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType } from \"./utils\";\nimport BlockquoteFooter from \"./BlockquoteFooter\";\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  align: PropTypes.oneOf([\"left\", \"center\", \"right\"]),\n  tag: tagPropType\n};\nconst defaultProps = {\n  tag: \"blockquote\"\n};\n\nconst Blockquote = props => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    align\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"tag\", \"align\"]);\n\n  const classes = mapToCssModules(classNames(\"blockquote\", {\n    [`text-${align}`]: align\n  }, className), cssModule);\n  return __jsx(Tag, _extends({}, attributes, {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }));\n};\n\nBlockquote.propTypes = propTypes;\nBlockquote.defaultProps = defaultProps;\nBlockquote.Footer = BlockquoteFooter;\nexport default Blockquote;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/Blockquote.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","BlockquoteFooter","propTypes","className","string","cssModule","object","align","oneOf","tag","defaultProps","Blockquote","props","Tag","attributes","classes","Footer"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,SAA7C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEN,SAAS,CAACO,MADL;AAEhBC,EAAAA,SAAS,EAAER,SAAS,CAACS,MAFL;AAGhBC,EAAAA,KAAK,EAAEV,SAAS,CAACW,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAhB,CAHS;AAIhBC,EAAAA,GAAG,EAAET;AAJW,CAAlB;AAOA,MAAMU,YAAY,GAAG;AACnBD,EAAAA,GAAG,EAAE;AADc,CAArB;;AAIA,MAAME,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAM;AAAET,IAAAA,SAAF;AAAaE,IAAAA,SAAb;AAAwBI,IAAAA,GAAG,EAAEI,GAA7B;AAAkCN,IAAAA;AAAlC,MAA2DK,KAAjE;AAAA,QAAkDE,UAAlD,4BAAiEF,KAAjE;;AAEA,QAAMG,OAAO,GAAGhB,eAAe,CAC7BD,UAAU,CAAC,YAAD,EAAe;AAAE,KAAE,QAAOS,KAAM,EAAf,GAAmBA;AAArB,GAAf,EAA6CJ,SAA7C,CADmB,EAE7BE,SAF6B,CAA/B;AAKA,SAAO,MAAC,GAAD,eAASS,UAAT;AAAqB,IAAA,SAAS,EAAEC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CATD;;AAWAJ,UAAU,CAACT,SAAX,GAAuBA,SAAvB;AACAS,UAAU,CAACD,YAAX,GAA0BA,YAA1B;AAEAC,UAAU,CAACK,MAAX,GAAoBf,gBAApB;AAEA,eAAeU,UAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType } from \"./utils\"\nimport BlockquoteFooter from \"./BlockquoteFooter\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  align: PropTypes.oneOf([\"left\", \"center\", \"right\"]),\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  tag: \"blockquote\"\n}\n\nconst Blockquote = props => {\n  const { className, cssModule, tag: Tag, align, ...attributes } = props\n\n  const classes = mapToCssModules(\n    classNames(\"blockquote\", { [`text-${align}`]: align }, className),\n    cssModule\n  )\n\n  return <Tag {...attributes} className={classes} />\n}\n\nBlockquote.propTypes = propTypes\nBlockquote.defaultProps = defaultProps\n\nBlockquote.Footer = BlockquoteFooter\n\nexport default Blockquote\n"]},"metadata":{},"sourceType":"module"}