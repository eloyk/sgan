{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\";\nimport SidemenuAddon from \"./SidemenuAddon\";\nimport SidemenuBody from \"./SidemenuBody\";\nimport SidemenuHeader from \"./SidemenuHeader\";\nimport SidemenuTitle from \"./SidemenuTitle\";\nvar defaultProps = {\n  align: \"left\",\n  show: false,\n  tag: \"div\"\n};\n\nvar Sidemenu = /*#__PURE__*/function (_React$Component) {\n  _inherits(Sidemenu, _React$Component);\n\n  var _super = _createSuper(Sidemenu);\n\n  function Sidemenu(props) {\n    var _this;\n\n    _classCallCheck(this, Sidemenu);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      show: _this.props.show\n    };\n    _this.openedClass = \"sidemenu-open\";\n    _this.setBodyClass = _this.setBodyClass.bind(_assertThisInitialized(_this));\n    _this.backdropClick = _this.backdropClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Sidemenu, [{\n    key: \"setBodyClass\",\n    value: function setBodyClass(show) {\n      if (show) {\n        document.body.classList.add(this.openedClass);\n      } else {\n        document.body.classList.remove(this.openedClass);\n      }\n    }\n  }, {\n    key: \"backdropClick\",\n    value: function backdropClick(e) {\n      var _this2 = this;\n\n      this.setState({\n        show: false\n      }, function () {\n        _this2.setBodyClass(false);\n      });\n\n      if (this.props.backdropOnClick) {\n        this.props.backdropOnClick(e);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setBodyClass(this.state.show);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this3 = this;\n\n      if (this.props.show !== prevProps.show) {\n        this.setState({\n          show: this.props.show\n        }, function () {\n          _this3.setBodyClass(_this3.state.show);\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setBodyClass(false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$props = this.props,\n          backdropOnClick = _this$props.backdropOnClick,\n          className = _this$props.className,\n          cssModule = _this$props.cssModule,\n          innerRef = _this$props.innerRef,\n          children = _this$props.children,\n          width = _this$props.width,\n          align = _this$props.align,\n          show = _this$props.show,\n          Tag = _this$props.tag,\n          attributes = _objectWithoutProperties(_this$props, [\"backdropOnClick\", \"className\", \"cssModule\", \"innerRef\", \"children\", \"width\", \"align\", \"show\", \"tag\"]);\n\n      var classes = mapToCssModules(classNames(\"sidemenu\", (_classNames = {}, _defineProperty(_classNames, \"sidemenu-\".concat(align), align), _defineProperty(_classNames, \"sidemenu-\".concat(width), width), _defineProperty(_classNames, \"active\", this.state.show), _classNames), className), cssModule);\n      return __jsx(React.Fragment, null, __jsx(Tag, _extends({}, attributes, {\n        ref: innerRef,\n        className: classes,\n        children: children\n      })), this.state.show ? __jsx(\"div\", {\n        id: \"sidemenu-backdrop\",\n        onClick: this.backdropClick\n      }) : null);\n    }\n  }]);\n\n  return Sidemenu;\n}(React.Component);\n\nSidemenu.defaultProps = defaultProps;\nSidemenu.Addon = SidemenuAddon;\nSidemenu.Body = SidemenuBody;\nSidemenu.Header = SidemenuHeader;\nSidemenu.Title = SidemenuTitle;\nexport default Sidemenu;","map":null,"metadata":{},"sourceType":"module"}