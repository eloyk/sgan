{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\FormGroup.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType } from \"./utils\";\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  inline: PropTypes.bool,\n  check: PropTypes.bool,\n  row: PropTypes.bool,\n  tag: tagPropType\n};\nconst defaultProps = {\n  tag: \"div\"\n};\n\nconst FormGroup = props => {\n  const {\n    className,\n    cssModule,\n    disabled,\n    inline,\n    check,\n    row,\n    tag: Tag\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"disabled\", \"inline\", \"check\", \"row\", \"tag\"]);\n\n  const classes = mapToCssModules(classNames(className, row ? \"row\" : false, check ? \"form-check\" : \"form-group\", check && inline ? \"form-check-inline\" : false, check && disabled ? \"disabled\" : false), cssModule);\n\n  if (Tag === \"fieldset\") {\n    attributes.disabled = disabled;\n  }\n\n  return __jsx(Tag, _extends({}, attributes, {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/FormGroup.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","propTypes","className","string","cssModule","object","disabled","bool","inline","check","row","tag","defaultProps","FormGroup","props","Tag","attributes","classes"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,SAA7C;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEL,SAAS,CAACM,MADL;AAEhBC,EAAAA,SAAS,EAAEP,SAAS,CAACQ,MAFL;AAGhBC,EAAAA,QAAQ,EAAET,SAAS,CAACU,IAHJ;AAIhBC,EAAAA,MAAM,EAAEX,SAAS,CAACU,IAJF;AAKhBE,EAAAA,KAAK,EAAEZ,SAAS,CAACU,IALD;AAMhBG,EAAAA,GAAG,EAAEb,SAAS,CAACU,IANC;AAOhBI,EAAAA,GAAG,EAAEX;AAPW,CAAlB;AAUA,MAAMY,YAAY,GAAG;AACnBD,EAAAA,GAAG,EAAE;AADc,CAArB;;AAIA,MAAME,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAEZ,IAAAA,SAAF;AAAaE,IAAAA,SAAb;AAAwBE,IAAAA,QAAxB;AAAkCE,IAAAA,MAAlC;AAA0CC,IAAAA,KAA1C;AAAiDC,IAAAA,GAAjD;AAAsDC,IAAAA,GAAG,EAAEI;AAA3D,MAAkFD,KAAxF;AAAA,QAAyEE,UAAzE,4BAAwFF,KAAxF;;AAEA,QAAMG,OAAO,GAAGlB,eAAe,CAC7BD,UAAU,CACRI,SADQ,EAERQ,GAAG,GAAG,KAAH,GAAW,KAFN,EAGRD,KAAK,GAAG,YAAH,GAAkB,YAHf,EAIRA,KAAK,IAAID,MAAT,GAAkB,mBAAlB,GAAwC,KAJhC,EAKRC,KAAK,IAAIH,QAAT,GAAoB,UAApB,GAAiC,KALzB,CADmB,EAQ7BF,SAR6B,CAA/B;;AAWA,MAAIW,GAAG,KAAK,UAAZ,EAAwB;AACtBC,IAAAA,UAAU,CAACV,QAAX,GAAsBA,QAAtB;AACD;;AAED,SAAO,MAAC,GAAD,eAASU,UAAT;AAAqB,IAAA,SAAS,EAAEC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAnBD;;AAqBAJ,SAAS,CAACZ,SAAV,GAAsBA,SAAtB;AACAY,SAAS,CAACD,YAAV,GAAyBA,YAAzB;AAEA,eAAeC,SAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  inline: PropTypes.bool,\n  check: PropTypes.bool,\n  row: PropTypes.bool,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  tag: \"div\"\n}\n\nconst FormGroup = props => {\n  const { className, cssModule, disabled, inline, check, row, tag: Tag, ...attributes } = props\n\n  const classes = mapToCssModules(\n    classNames(\n      className,\n      row ? \"row\" : false,\n      check ? \"form-check\" : \"form-group\",\n      check && inline ? \"form-check-inline\" : false,\n      check && disabled ? \"disabled\" : false\n    ),\n    cssModule\n  )\n\n  if (Tag === \"fieldset\") {\n    attributes.disabled = disabled\n  }\n\n  return <Tag {...attributes} className={classes} />\n}\n\nFormGroup.propTypes = propTypes\nFormGroup.defaultProps = defaultProps\n\nexport default FormGroup\n"]},"metadata":{},"sourceType":"module"}