{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Avatar, Portlet, RichList, Dropdown } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport * as BrandsIcon from \"@fortawesome/free-brands-svg-icons\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport Chart from \"@panely/apexcharts\";\n\nclass Widget27Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: [{\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-warning\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: BrandsIcon.faPython\n        })),\n        brand: \"Python\",\n        category: \"Programming language\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-primary\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: BrandsIcon.faFacebook\n        })),\n        brand: \"Facebook\",\n        category: \"Social media\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-success\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: BrandsIcon.faAndroid\n        })),\n        brand: \"Android\",\n        category: \"Operating system\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-secondary\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: BrandsIcon.faApple\n        })),\n        brand: \"Apple\",\n        category: \"Technology brand\"\n      }]\n    });\n  }\n\n  render() {\n    return __jsx(Portlet, null, __jsx(Portlet.Header, null, __jsx(Portlet.Icon, null, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faBullhorn\n    })), __jsx(Portlet.Title, null, \"Trends\"), __jsx(Portlet.Addon, null, __jsx(Dropdown.Uncontrolled, null, __jsx(Dropdown.Toggle, {\n      icon: true,\n      variant: \"label-light\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faEllipsisH\n    })), __jsx(Dropdown.Menu, null, __jsx(Dropdown.Item, {\n      icon: __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faPoll\n      })\n    }, \"Report\"), __jsx(Dropdown.Item, {\n      icon: __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faChartPie\n      })\n    }, \"Charts\"), __jsx(Dropdown.Item, {\n      icon: __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faChartLine\n      })\n    }, \"Statistics\"), __jsx(Dropdown.Divider, null), __jsx(Dropdown.Item, {\n      icon: __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faCog\n      })\n    }, \"Customize\"))))), __jsx(Widget27Chart, {\n      theme: this.props.theme\n    }), __jsx(Portlet.Body, null, __jsx(RichList, {\n      flush: true\n    }, this.state.data.map((data, index) => {\n      const {\n        avatar: WidgetAvatar,\n        brand,\n        category\n      } = data;\n      return __jsx(RichList.Item, {\n        key: index\n      }, __jsx(RichList.Addon, {\n        addonType: \"prepend\"\n      }, __jsx(WidgetAvatar, null)), __jsx(RichList.Content, null, __jsx(RichList.Title, {\n        children: brand\n      }), __jsx(RichList.Subtitle, {\n        children: category\n      })));\n    }))));\n  }\n\n}\n\nclass Widget27Chart extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      // Chart options\n      options: {\n        theme: {\n          mode: this.props.theme,\n          palette: \"palette1\"\n        },\n        chart: {\n          sparkline: {\n            enabled: true\n          }\n        },\n        markers: {\n          strokeColors: this.props.theme === \"dark\" ? \"#424242\" : \"#fff\"\n        },\n        fill: {\n          type: \"gradient\",\n          gradient: {\n            shade: \"light\",\n            type: \"vertical\",\n            opacityFrom: 1,\n            opacityTo: 0,\n            stops: [0, 100]\n          }\n        },\n        tooltip: {\n          marker: {\n            show: false\n          },\n          y: {\n            formatter: val => `${val} Visited` // Format chart tooltip value\n\n          }\n        },\n        xaxis: {\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\"],\n          crosshairs: {\n            show: false\n          }\n        }\n      },\n      // Chart series data\n      series: [{\n        name: \"Unique\",\n        data: [6400, 4000, 7600, 6200, 9800, 6400, 8600, 7000]\n      }]\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.theme !== prevProps.theme) {\n      let newState = this.state; // Change chart options\n\n      newState.options.theme = {\n        mode: this.props.theme,\n        palette: \"palette1\"\n      };\n      newState.options.markers.strokeColors = this.props.theme === \"dark\" ? \"#424242\" : \"#fff\";\n      this.setState(newState);\n    }\n  }\n\n  render() {\n    const {\n      options,\n      series\n    } = this.state;\n    return __jsx(Chart, {\n      type: \"area\",\n      className: \"my-3\",\n      options: options,\n      series: series,\n      height: 300\n    });\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.page.theme\n  };\n}\n\nexport default connect(mapStateToProps)(Widget27Component);","map":null,"metadata":{},"sourceType":"module"}