{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Form, Label, Input, Button, Portlet, Container, CustomInput, FloatLabel, Widget12 } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport * as yup from \"yup\";\nimport withLayout from \"components/layout/withLayout\"; //import withAuth from \"components/firebase/firebaseWithAuth\"\n\nimport Link from \"next/link\";\nimport Head from \"next/head\";\n\nfunction Register1Page() {\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Register 1 | Panely\")), __jsx(Container, {\n    fluid: true\n  }, __jsx(Row, {\n    noGutters: true,\n    className: \"align-items-center justify-content-center h-100\"\n  }, __jsx(Col, {\n    sm: \"8\",\n    md: \"6\",\n    lg: \"4\"\n  }, __jsx(Portlet, null, __jsx(Portlet.Body, null, __jsx(\"div\", {\n    className: \"text-center mt-2 mb-4\"\n  }, __jsx(Widget12, {\n    display: true,\n    circle: true,\n    variant: \"label-primary\",\n    className: \"mb-4\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: SolidIcon.faUserAlt\n  }))), __jsx(Register1Form, null)))))));\n}\n\nfunction Register1Form() {\n  // Define Yup schema for form validation\n  var schema = yup.object().shape({\n    firstName: yup.string().min(5, \"Please enter at least 5 characters\").required(\"Please enter your lastname\"),\n    lastName: yup.string().min(5, \"Please enter at least 5 characters\").required(\"Please enter your lastname\"),\n    email: yup.string().email(\"Your email is not valid\").required(\"Please enter your email\"),\n    password1: yup.string().min(6, \"Please enter at least 6 characters\").required(\"Please provide your password\"),\n    password2: yup.string().min(6, \"Please enter at least 6 characters\").oneOf([yup.ref(\"password1\")], \"Your password not match\").required(\"Please repeat your password\"),\n    agreement: yup[\"boolean\"]().oneOf([true], \"You must accept the agreement\")\n  });\n\n  var _useForm = useForm({\n    // Apply Yup as resolver for react-hook-form\n    resolver: yupResolver(schema),\n    // Define the default values for all input forms\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password1: \"\",\n      password2: \"\",\n      agreement: false\n    }\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors; // Handle form submit event\n\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n  };\n\n  return __jsx(Form, {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(Row, null, __jsx(Col, {\n    xs: \"6\"\n  }, __jsx(Form.Group, null, __jsx(FloatLabel, {\n    size: \"lg\"\n  }, __jsx(Controller, {\n    as: Input,\n    size: \"lg\",\n    type: \"text\",\n    id: \"first-name\",\n    name: \"firstName\",\n    control: control,\n    invalid: Boolean(errors.firstName),\n    placeholder: \"Insert your firstname\"\n  }), __jsx(Label, {\n    \"for\": \"first-name\"\n  }, \"First name\"), errors.firstName && __jsx(Form.Feedback, {\n    children: errors.firstName.message\n  })))), __jsx(Col, {\n    xs: \"6\"\n  }, __jsx(Form.Group, null, __jsx(FloatLabel, {\n    size: \"lg\"\n  }, __jsx(Controller, {\n    as: Input,\n    size: \"lg\",\n    type: \"text\",\n    id: \"last-name\",\n    name: \"lastName\",\n    control: control,\n    invalid: Boolean(errors.lastName),\n    placeholder: \"Insert your lastname\"\n  }), __jsx(Label, {\n    \"for\": \"last-name\"\n  }, \"last name\"), errors.lastName && __jsx(Form.Feedback, {\n    children: errors.lastName.message\n  }))))), __jsx(Form.Group, null, __jsx(FloatLabel, {\n    size: \"lg\"\n  }, __jsx(Controller, {\n    as: Input,\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    size: \"lg\",\n    control: control,\n    invalid: Boolean(errors.email),\n    placeholder: \"Please insert your email\"\n  }), __jsx(Label, {\n    \"for\": \"email\"\n  }, \"Email\"), errors.email && __jsx(Form.Feedback, {\n    children: errors.email.message\n  }))), __jsx(Form.Group, null, __jsx(FloatLabel, {\n    size: \"lg\"\n  }, __jsx(Controller, {\n    as: Input,\n    size: \"lg\",\n    type: \"password\",\n    id: \"password1\",\n    name: \"password1\",\n    control: control,\n    invalid: Boolean(errors.password1),\n    placeholder: \"Please provide your password\"\n  }), __jsx(Label, {\n    \"for\": \"password1\"\n  }, \"Password\"), errors.password1 && __jsx(Form.Feedback, {\n    children: errors.password1.message\n  }))), __jsx(Form.Group, null, __jsx(FloatLabel, {\n    size: \"lg\"\n  }, __jsx(Controller, {\n    as: Input,\n    size: \"lg\",\n    type: \"password\",\n    id: \"password2\",\n    name: \"password2\",\n    control: control,\n    invalid: Boolean(errors.password2),\n    placeholder: \"Repeat your password\"\n  }), __jsx(Label, {\n    \"for\": \"password2\"\n  }, \"Confirm password\"), errors.password2 && __jsx(Form.Feedback, {\n    children: errors.password2.message\n  }))), __jsx(\"div\", {\n    className: \"d-flex align-items-center justify-content-between mb-3\"\n  }, __jsx(Form.Group, {\n    className: \"mb-0\"\n  }, __jsx(Controller, {\n    control: control,\n    name: \"agreement\",\n    render: function render(_ref) {\n      var _onChange = _ref.onChange,\n          onBlur = _ref.onBlur,\n          value = _ref.value,\n          name = _ref.name,\n          ref = _ref.ref;\n      return __jsx(CustomInput, {\n        type: \"checkbox\",\n        size: \"lg\",\n        id: \"agreement\",\n        label: \"Accept agreement\",\n        invalid: Boolean(errors.agreement),\n        onBlur: onBlur,\n        onChange: function onChange(e) {\n          return _onChange(e.target.checked);\n        },\n        checked: value,\n        innerRef: ref\n      });\n    }\n  })), __jsx(Link, {\n    href: \"#\"\n  }, \"Forgot password?\")), __jsx(\"div\", {\n    className: \"d-flex align-items-center justify-content-between\"\n  }, __jsx(\"span\", null, \"Already have an account ? \", __jsx(Link, {\n    href: \"/pages/login/login-1\"\n  }, \"Sign In\")), __jsx(Button, {\n    type: \"submit\",\n    variant: \"label-primary\",\n    size: \"lg\",\n    width: \"widest\"\n  }, \"Register\")));\n}\n\nexport default withLayout(Register1Page, \"blank\");","map":null,"metadata":{},"sourceType":"module"}