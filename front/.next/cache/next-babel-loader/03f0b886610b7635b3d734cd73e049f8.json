{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\Progress.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType, toNumber } from \"./utils\";\nconst propTypes = {\n  barAriaValueText: PropTypes.string,\n  barAriaLabelledBy: PropTypes.string,\n  barClassName: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  animated: PropTypes.bool,\n  striped: PropTypes.bool,\n  variant: PropTypes.string,\n  multi: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.object,\n  size: PropTypes.string,\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  bar: PropTypes.bool,\n  tag: tagPropType\n};\nconst defaultProps = {\n  value: 0,\n  style: {},\n  tag: \"div\",\n  min: 0,\n  max: 100\n};\n\nconst Progress = props => {\n  const {\n    barAriaValueText,\n    barAriaLabelledBy,\n    barClassName,\n    className,\n    cssModule,\n    children,\n    animated,\n    striped,\n    variant,\n    multi,\n    value,\n    style,\n    size,\n    min,\n    max,\n    bar,\n    tag: Tag\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"barAriaValueText\", \"barAriaLabelledBy\", \"barClassName\", \"className\", \"cssModule\", \"children\", \"animated\", \"striped\", \"variant\", \"multi\", \"value\", \"style\", \"size\", \"min\", \"max\", \"bar\", \"tag\"]);\n\n  const percent = toNumber(value) / toNumber(max) * 100;\n  const progressClasses = mapToCssModules(classNames(\"progress\", size ? `progress-${size}` : false, className), cssModule);\n  const progressBarClasses = mapToCssModules(classNames(\"progress-bar\", bar ? className || barClassName : barClassName, animated ? \"progress-bar-animated\" : false, variant ? `bg-${variant}` : false, striped || animated ? \"progress-bar-striped\" : false), cssModule);\n  const ProgressBar = multi ? children : __jsx(\"div\", {\n    style: {\n      width: `${percent}%`\n    },\n    className: progressBarClasses,\n    role: \"progressbar\",\n    \"aria-valuenow\": value,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuetext\": barAriaValueText,\n    \"aria-labelledby\": barAriaLabelledBy,\n    children: children,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  });\n\n  if (bar) {\n    return ProgressBar;\n  }\n\n  return __jsx(Tag, _extends({\n    style: style\n  }, attributes, {\n    className: progressClasses,\n    children: ProgressBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 10\n    }\n  }));\n};\n\nProgress.propTypes = propTypes;\nProgress.defaultProps = defaultProps;\nexport default Progress;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/Progress.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","toNumber","propTypes","barAriaValueText","string","barAriaLabelledBy","barClassName","className","cssModule","object","children","node","animated","bool","striped","variant","multi","value","oneOfType","number","style","size","min","max","bar","tag","defaultProps","Progress","props","Tag","attributes","percent","progressClasses","progressBarClasses","ProgressBar","width"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType, toNumber } from \"./utils\"\n\nconst propTypes = {\n  barAriaValueText: PropTypes.string,\n  barAriaLabelledBy: PropTypes.string,\n  barClassName: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  animated: PropTypes.bool,\n  striped: PropTypes.bool,\n  variant: PropTypes.string,\n  multi: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.object,\n  size: PropTypes.string,\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  bar: PropTypes.bool,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  value: 0,\n  style: {},\n  tag: \"div\",\n  min: 0,\n  max: 100\n}\n\nconst Progress = props => {\n  const {\n    barAriaValueText,\n    barAriaLabelledBy,\n    barClassName,\n    className,\n    cssModule,\n    children,\n    animated,\n    striped,\n    variant,\n    multi,\n    value,\n    style,\n    size,\n    min,\n    max,\n    bar,\n    tag: Tag,\n    ...attributes\n  } = props\n\n  const percent = (toNumber(value) / toNumber(max)) * 100\n\n  const progressClasses = mapToCssModules(\n    classNames(\"progress\", size ? `progress-${size}` : false, className),\n    cssModule\n  )\n\n  const progressBarClasses = mapToCssModules(\n    classNames(\n      \"progress-bar\",\n      bar ? className || barClassName : barClassName,\n      animated ? \"progress-bar-animated\" : false,\n      variant ? `bg-${variant}` : false,\n      striped || animated ? \"progress-bar-striped\" : false\n    ),\n    cssModule\n  )\n\n  const ProgressBar = multi ? (\n    children\n  ) : (\n    <div\n      style={{\n        width: `${percent}%`\n      }}\n      className={progressBarClasses}\n      role=\"progressbar\"\n      aria-valuenow={value}\n      aria-valuemin={min}\n      aria-valuemax={max}\n      aria-valuetext={barAriaValueText}\n      aria-labelledby={barAriaLabelledBy}\n      children={children}\n    />\n  )\n\n  if (bar) {\n    return ProgressBar\n  }\n\n  return <Tag style={style} {...attributes} className={progressClasses} children={ProgressBar} />\n}\n\nProgress.propTypes = propTypes\nProgress.defaultProps = defaultProps\n\nexport default Progress\n"]},"metadata":{},"sourceType":"module"}