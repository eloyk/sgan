{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Badge, Avatar, Button, Marker, Portlet, RichList } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\n\nclass SidemenuAgendaContact extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: [{\n        name: \"Charlie Stone\",\n        title: \"Art Director\",\n        time: \"1 min\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 1,\n        online: false,\n        avatarMarker: () => __jsx(Avatar.Icon, {\n          variant: \"info\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faThumbtack\n        }))\n      }, {\n        name: \"Freddie Stevens\",\n        title: \"Journalist\",\n        time: \"2 hour\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 12,\n        online: true\n      }, {\n        name: \"Tyler Clark\",\n        title: \"Programmer\",\n        time: \"5 hour\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 0,\n        online: true\n      }, {\n        name: \"Darcy Harrison\",\n        title: \"Internet Marketer\",\n        time: \"1 day\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 2,\n        online: false,\n        avatarMarker: () => __jsx(Avatar.Icon, {\n          variant: \"success\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faCheck\n        }))\n      }, {\n        name: \"Victor Payne\",\n        title: \"Accountant\",\n        time: \"1 day\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 5,\n        online: true\n      }, {\n        name: \"Alberta Harris\",\n        title: \"UI Designer\",\n        time: \"2 day\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 4,\n        online: false\n      }]\n    });\n  }\n\n  render() {\n    return __jsx(Portlet, _extends({\n      bordered: true\n    }, this.props), __jsx(Portlet.Header, {\n      bordered: true\n    }, __jsx(Portlet.Icon, null, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUsers\n    })), __jsx(Portlet.Title, null, \"Contacts\"), __jsx(Portlet.Addon, null, __jsx(Button, {\n      icon: true,\n      variant: \"label-primary\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faPlus\n    })))), __jsx(Portlet.Body, {\n      className: \"p-0\"\n    }, __jsx(RichList, {\n      flush: true,\n      action: true\n    }, this.state.data.map((data, index) => {\n      const {\n        name,\n        title,\n        time,\n        link,\n        image,\n        count,\n        online,\n        avatarMarker: AvatarMarker\n      } = data;\n      return __jsx(RichList.Item, {\n        key: index,\n        href: \"#\"\n      }, __jsx(RichList.Addon, {\n        addonType: \"prepend\"\n      }, __jsx(Avatar, {\n        circle: true\n      }, Boolean(AvatarMarker) ? __jsx(Avatar.Addon, {\n        position: \"top\"\n      }, __jsx(AvatarMarker, null)) : null, __jsx(Avatar.Display, null, __jsx(\"img\", {\n        src: image,\n        alt: \"Avatar image\"\n      })), __jsx(Avatar.Addon, {\n        position: \"bottom\"\n      }, online ? __jsx(Marker, {\n        type: \"dot\",\n        variant: \"success\"\n      }) : __jsx(Marker, {\n        type: \"dot\",\n        variant: \"secondary\"\n      })))), __jsx(RichList.Content, null, __jsx(RichList.Title, {\n        children: name\n      }), __jsx(RichList.Subtitle, {\n        children: title\n      })), __jsx(RichList.Addon, {\n        addonType: \"append\",\n        className: \"flex-column align-items-end\"\n      }, __jsx(\"span\", {\n        className: \"text-muted text-nowrap\",\n        children: time\n      }), count > 0 ? __jsx(Badge, {\n        pill: true,\n        variant: \"success\",\n        children: count\n      }) : null));\n    }))));\n  }\n\n}\n\nexport default SidemenuAgendaContact;","map":null,"metadata":{},"sourceType":"module"}