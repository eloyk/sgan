{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\components\\\\layout\\\\part\\\\SidemenuSetting.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Button, Sidemenu } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { bindActionCreators } from \"redux\";\nimport { sidemenuToggle } from \"store/actions\";\nimport { connect } from \"react-redux\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport SidemenuSettingPerformance from \"./SidemenuSettingPerformance\";\nimport SidemenuSettingCustomer from \"./SidemenuSettingCustomer\";\nimport SidemenuSettingProject from \"./SidemenuSettingProject\";\nimport SidemenuSettingReport from \"./SidemenuSettingReport\";\nimport SimpleBar from \"simplebar\";\n\nvar SidemenuSetting = /*#__PURE__*/function (_React$Component) {\n  _inherits(SidemenuSetting, _React$Component);\n\n  var _super = _createSuper(SidemenuSetting);\n\n  function SidemenuSetting() {\n    var _this;\n\n    _classCallCheck(this, SidemenuSetting);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"bodyRef\", /*#__PURE__*/React.createRef());\n\n    return _this;\n  }\n\n  _createClass(SidemenuSetting, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Initialize custom scrollbar\n      new SimpleBar(this.bodyRef.current);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          show = _this$props.show,\n          sidemenuToggle = _this$props.sidemenuToggle;\n      return __jsx(Sidemenu, {\n        show: show,\n        align: \"right\",\n        width: \"wider\",\n        backdropOnClick: function backdropOnClick() {\n          return sidemenuToggle(\"setting\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, __jsx(Sidemenu.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, __jsx(Sidemenu.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, \"Settings\"), __jsx(Sidemenu.Addon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        icon: true,\n        variant: \"label-danger\",\n        onClick: function onClick() {\n          return sidemenuToggle(\"setting\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faTimes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      })))), __jsx(Sidemenu.Body, {\n        innerRef: this.bodyRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, __jsx(SidemenuSettingPerformance, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }), __jsx(SidemenuSettingCustomer, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }), __jsx(SidemenuSettingReport, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }), __jsx(SidemenuSettingProject, {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return SidemenuSetting;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    show: state.sidemenu.setting\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    sidemenuToggle: sidemenuToggle\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidemenuSetting);","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/components/layout/part/SidemenuSetting.jsx"],"names":["Button","Sidemenu","FontAwesomeIcon","bindActionCreators","sidemenuToggle","connect","SolidIcon","SidemenuSettingPerformance","SidemenuSettingCustomer","SidemenuSettingProject","SidemenuSettingReport","SimpleBar","SidemenuSetting","React","createRef","bodyRef","current","props","show","faTimes","Component","mapStateToProps","state","sidemenu","setting","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,oBAAjC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,SAAZ,MAA2B,mCAA3B;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,SAAP,MAAsB,WAAtB;;IAEMC,e;;;;;;;;;;;;;;;;2EACMC,KAAK,CAACC,SAAN,E;;;;;;;wCAEU;AAClB;AACA,UAAIH,SAAJ,CAAc,KAAKI,OAAL,CAAaC,OAA3B;AACD;;;6BAEQ;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOd,cADP,eACOA,cADP;AAGP,aACE,MAAC,QAAD;AACE,QAAA,IAAI,EAAEc,IADR;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,KAAK,EAAC,OAHR;AAIE,QAAA,eAAe,EAAE;AAAA,iBAAMd,cAAc,CAAC,SAAD,CAApB;AAAA,SAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,MAAC,QAAD,CAAU,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD,CAAU,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,QAAD,CAAU,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,OAAO,EAAC,cAArB;AAAoC,QAAA,OAAO,EAAE;AAAA,iBAAMA,cAAc,CAAC,SAAD,CAApB;AAAA,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,eAAD;AAAiB,QAAA,IAAI,EAAEE,SAAS,CAACa,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAFF,CANF,EAcE,MAAC,QAAD,CAAU,IAAV;AAAe,QAAA,QAAQ,EAAE,KAAKJ,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,0BAAD;AAA4B,QAAA,SAAS,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,uBAAD;AAAyB,QAAA,SAAS,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,MAAC,qBAAD;AAAuB,QAAA,SAAS,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,MAAC,sBAAD;AAAwB,QAAA,SAAS,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAdF,CADF;AAuBD;;;;EAlC2BF,KAAK,CAACO,S;;AAqCpC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLJ,IAAAA,IAAI,EAAEI,KAAK,CAACC,QAAN,CAAeC;AADhB,GAAP;AAGD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAOvB,kBAAkB,CAAC;AAAEC,IAAAA,cAAc,EAAdA;AAAF,GAAD,EAAqBsB,QAArB,CAAzB;AACD;;AAED,eAAerB,OAAO,CAACgB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cb,eAA7C,CAAf","sourcesContent":["import { Button, Sidemenu } from \"@panely/components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { bindActionCreators } from \"redux\"\nimport { sidemenuToggle } from \"store/actions\"\nimport { connect } from \"react-redux\"\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\"\nimport SidemenuSettingPerformance from \"./SidemenuSettingPerformance\"\nimport SidemenuSettingCustomer from \"./SidemenuSettingCustomer\"\nimport SidemenuSettingProject from \"./SidemenuSettingProject\"\nimport SidemenuSettingReport from \"./SidemenuSettingReport\"\nimport SimpleBar from \"simplebar\"\n\nclass SidemenuSetting extends React.Component {\n  bodyRef = React.createRef()\n\n  componentDidMount() {\n    // Initialize custom scrollbar\n    new SimpleBar(this.bodyRef.current)\n  }\n\n  render() {\n    const { show, sidemenuToggle } = this.props\n\n    return (\n      <Sidemenu\n        show={show}\n        align=\"right\"\n        width=\"wider\"\n        backdropOnClick={() => sidemenuToggle(\"setting\")}\n      >\n        <Sidemenu.Header>\n          <Sidemenu.Title>Settings</Sidemenu.Title>\n          <Sidemenu.Addon>\n            <Button icon variant=\"label-danger\" onClick={() => sidemenuToggle(\"setting\")}>\n              <FontAwesomeIcon icon={SolidIcon.faTimes} />\n            </Button>\n          </Sidemenu.Addon>\n        </Sidemenu.Header>\n        <Sidemenu.Body innerRef={this.bodyRef}>\n          <SidemenuSettingPerformance className=\"mb-3\" />\n          <SidemenuSettingCustomer className=\"mb-3\" />\n          <SidemenuSettingReport className=\"mb-3\" />\n          <SidemenuSettingProject className=\"mb-0\" />\n        </Sidemenu.Body>\n      </Sidemenu>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    show: state.sidemenu.setting\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ sidemenuToggle }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidemenuSetting)\n"]},"metadata":{},"sourceType":"module"}