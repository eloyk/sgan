{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\CardBody.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\";\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  blockquote: PropTypes.bool,\n  innerRef: refPropType,\n  tag: tagPropType\n};\nconst defaultProps = {\n  tag: \"div\"\n};\n\nconst CardBody = props => {\n  let {\n    className,\n    cssModule,\n    blockquote,\n    innerRef,\n    tag: Tag\n  } = props,\n      attributes = _objectWithoutProperties(props, [\"className\", \"cssModule\", \"blockquote\", \"innerRef\", \"tag\"]);\n\n  const classes = mapToCssModules(classNames(\"card-body\", {\n    blockquote: blockquote\n  }, className), cssModule);\n\n  if (blockquote) {\n    Tag = \"blockquote\";\n  }\n\n  return __jsx(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/CardBody.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","refPropType","propTypes","className","string","cssModule","object","blockquote","bool","innerRef","tag","defaultProps","CardBody","props","Tag","attributes","classes"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,WAAvC,QAA0D,SAA1D;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEN,SAAS,CAACO,MADL;AAEhBC,EAAAA,SAAS,EAAER,SAAS,CAACS,MAFL;AAGhBC,EAAAA,UAAU,EAAEV,SAAS,CAACW,IAHN;AAIhBC,EAAAA,QAAQ,EAAER,WAJM;AAKhBS,EAAAA,GAAG,EAAEV;AALW,CAAlB;AAQA,MAAMW,YAAY,GAAG;AACnBD,EAAAA,GAAG,EAAE;AADc,CAArB;;AAIA,MAAME,QAAQ,GAAGC,KAAK,IAAI;AACxB,MAAI;AAAEV,IAAAA,SAAF;AAAaE,IAAAA,SAAb;AAAwBE,IAAAA,UAAxB;AAAoCE,IAAAA,QAApC;AAA8CC,IAAAA,GAAG,EAAEI;AAAnD,MAA0ED,KAA9E;AAAA,MAA+DE,UAA/D,4BAA8EF,KAA9E;;AAEA,QAAMG,OAAO,GAAGjB,eAAe,CAC7BD,UAAU,CAAC,WAAD,EAAc;AAAES,IAAAA,UAAU,EAAEA;AAAd,GAAd,EAA0CJ,SAA1C,CADmB,EAE7BE,SAF6B,CAA/B;;AAKA,MAAIE,UAAJ,EAAgB;AACdO,IAAAA,GAAG,GAAG,YAAN;AACD;;AAED,SAAO,MAAC,GAAD,eAASC,UAAT;AAAqB,IAAA,SAAS,EAAEC,OAAhC;AAAyC,IAAA,GAAG,EAAEP,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAbD;;AAeAG,QAAQ,CAACV,SAAT,GAAqBA,SAArB;AACAU,QAAQ,CAACD,YAAT,GAAwBA,YAAxB;AAEA,eAAeC,QAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  blockquote: PropTypes.bool,\n  innerRef: refPropType,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  tag: \"div\"\n}\n\nconst CardBody = props => {\n  let { className, cssModule, blockquote, innerRef, tag: Tag, ...attributes } = props\n\n  const classes = mapToCssModules(\n    classNames(\"card-body\", { blockquote: blockquote }, className),\n    cssModule\n  )\n\n  if (blockquote) {\n    Tag = \"blockquote\"\n  }\n\n  return <Tag {...attributes} className={classes} ref={innerRef} />\n}\n\nCardBody.propTypes = propTypes\nCardBody.defaultProps = defaultProps\n\nexport default CardBody\n"]},"metadata":{},"sourceType":"module"}