{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useContext, createContext } from \"react\";\nimport axios from \"axios\";\nvar API_URL = \"https://www.sgerd.com/api/usuario/\"; // Set authentication context\n\nvar AuthContext = /*#__PURE__*/createContext({\n  user: null\n});\nexport function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  useEffect(function () {\n    var currentUser = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$axios$get, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(API_URL + \"usuarioactual\");\n\n              case 2:\n                _yield$axios$get = _context.sent;\n                data = _yield$axios$get.data;\n\n                // Check whether user has logged in\n                if (!data.usuarioActual) {\n                  setUser(null);\n                  axios.post(API_URL + \"cerrarsesion\");\n                } else {\n                  setUser(data.usuarioActual);\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function currentUser() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return function () {\n      return currentUser();\n    };\n  }, []);\n  return __jsx(AuthContext.Provider, {\n    value: {\n      user: user\n    }\n  }, children);\n}\nexport var useAuth = function useAuth() {\n  return useContext(AuthContext);\n};","map":null,"metadata":{},"sourceType":"module"}