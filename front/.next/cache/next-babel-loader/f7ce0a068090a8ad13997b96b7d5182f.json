{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Badge, Caret, Avatar, Button, Marker, Portlet, Dropdown, RichList } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as RegularIcon from \"@fortawesome/free-regular-svg-icons\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport SimpleBar from \"simplebar\";\n\nclass HeaderNotification extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"bodyRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"state\", {\n      data: [{\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-info\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faFileInvoice\n        })),\n        content: \"New report has been received\",\n        time: \"2 min ago\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-success\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faShoppingBasket\n        })),\n        content: \"Last order was completed\",\n        time: \"1 hrs ago\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-danger\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faUsers\n        })),\n        content: \"Company meeting canceled\",\n        time: \"5 hrs ago\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-warning\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faPaperPlane\n        })),\n        content: \"New feedback received\",\n        time: \"6 hrs ago\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-primary\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faDownload\n        })),\n        content: \"New update was available\",\n        time: \"1 day ago\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-success\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faAsterisk\n        })),\n        content: \"Your password was changed\",\n        time: \"2 day ago\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-info\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faUserPlus\n        })),\n        content: \"New account has been registered\",\n        time: \"5 day ago\"\n      }]\n    });\n\n    _defineProperty(this, \"onToggle\", (e, opened) => {\n      // Initialize custom scrollbar\n      if (opened) {\n        new SimpleBar(this.bodyRef.current);\n      }\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      variant\n    } = _this$props,\n          attributes = _objectWithoutProperties(_this$props, [\"variant\"]);\n\n    let count = this.state.data.length;\n    return __jsx(Dropdown.Uncontrolled, _extends({\n      onToggle: this.onToggle\n    }, attributes), __jsx(Dropdown.Toggle, {\n      icon: true,\n      variant: variant\n    }, __jsx(FontAwesomeIcon, {\n      icon: RegularIcon.faBell\n    }), count > 0 ? __jsx(Button.Marker, null, __jsx(Marker, {\n      type: \"dot\",\n      variant: \"success\"\n    })) : null), __jsx(Dropdown.Menu, {\n      right: true,\n      wide: true,\n      animated: true,\n      className: \"overflow-hidden py-0\"\n    }, __jsx(Portlet, {\n      scroll: true,\n      className: \"border-0\"\n    }, __jsx(Portlet.Header, {\n      className: \"bg-primary rounded-0\"\n    }, __jsx(Portlet.Icon, {\n      className: \"text-white\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: RegularIcon.faBell\n    })), __jsx(Portlet.Title, {\n      className: \"text-white\"\n    }, \"Notification\"), __jsx(Portlet.Addon, null, __jsx(Badge, {\n      variant: \"warning\",\n      shape: \"square\",\n      size: \"lg\",\n      children: count > 9 ? \"9+\" : count\n    }))), __jsx(Portlet.Body, {\n      innerRef: this.bodyRef,\n      className: \"p-0 rounded-0\"\n    }, __jsx(RichList, {\n      action: true\n    }, this.state.data.map((data, index) => {\n      const {\n        avatar: NotificationAvatar,\n        content,\n        time\n      } = data;\n      return __jsx(RichList.Item, {\n        key: index\n      }, __jsx(RichList.Addon, {\n        addonType: \"prepend\"\n      }, __jsx(NotificationAvatar, null)), __jsx(RichList.Content, null, __jsx(RichList.Title, {\n        children: content\n      }), __jsx(RichList.Subtitle, {\n        children: time\n      })), __jsx(RichList.Addon, {\n        addonType: \"append\"\n      }, __jsx(Caret, {\n        className: \"mx-2\"\n      })));\n    }))))));\n  }\n\n}\n\nexport default HeaderNotification;","map":null,"metadata":{},"sourceType":"module"}