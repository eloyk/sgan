{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Badge, Avatar, Portlet, Dropdown, RichList } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\n\nclass Widget14Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: [{\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-info\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faFileInvoice\n        })),\n        content: \"New report has been received\",\n        time: \"2 min ago\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-success\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faShoppingBasket\n        })),\n        content: \"Last order was completed\",\n        time: \"1 hrs ago\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-danger\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faUsers\n        })),\n        content: \"Company meeting canceled\",\n        time: \"5 hrs ago\"\n      }, {\n        avatar: () => __jsx(Avatar, {\n          display: true,\n          variant: \"label-warning\"\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faPaperPlane\n        })),\n        content: \"New feedback received\",\n        time: \"6 hrs ago\"\n      }]\n    });\n  }\n\n  render() {\n    return __jsx(Portlet, null, __jsx(Portlet.Header, null, __jsx(Portlet.Icon, null, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faBell\n    })), __jsx(Portlet.Title, null, \"Notification\"), __jsx(Portlet.Addon, null, __jsx(Dropdown.Uncontrolled, null, __jsx(Dropdown.Toggle, {\n      caret: true,\n      variant: \"label-primary\"\n    }, \"All\"), __jsx(Dropdown.Menu, {\n      right: true,\n      animated: true\n    }, __jsx(Dropdown.Item, {\n      href: \"#\"\n    }, __jsx(Badge, {\n      variant: \"label-primary\"\n    }, \"Personal\")), __jsx(Dropdown.Item, {\n      href: \"#\"\n    }, __jsx(Badge, {\n      variant: \"label-info\"\n    }, \"Work\")), __jsx(Dropdown.Item, {\n      href: \"#\"\n    }, __jsx(Badge, {\n      variant: \"label-success\"\n    }, \"Important\")), __jsx(Dropdown.Item, {\n      href: \"#\"\n    }, __jsx(Badge, {\n      variant: \"label-danger\"\n    }, \"Company\")))))), __jsx(Portlet.Body, null, __jsx(RichList, {\n      bordered: true,\n      action: true\n    }, this.state.data.map((data, index) => {\n      const {\n        avatar: UserAvatar,\n        content,\n        time\n      } = data;\n      return __jsx(RichList.Item, {\n        key: index\n      }, __jsx(RichList.Addon, {\n        addonType: \"prepend\"\n      }, __jsx(UserAvatar, null)), __jsx(RichList.Content, null, __jsx(RichList.Title, {\n        children: content\n      }), __jsx(RichList.Subtitle, {\n        children: time\n      })), __jsx(RichList.Addon, {\n        addonType: \"append\"\n      }, __jsx(Dropdown.Uncontrolled, null, __jsx(Dropdown.Toggle, {\n        icon: true,\n        variant: \"text-secondary\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faEllipsisH\n      })), __jsx(Dropdown.Menu, {\n        right: true,\n        animated: true\n      }, __jsx(Dropdown.Item, {\n        href: \"#\",\n        icon: __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faCheck\n        })\n      }, \"Mark as read\"), __jsx(Dropdown.Item, {\n        href: \"#\",\n        icon: __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faTrashAlt\n        })\n      }, \"Delete\"), __jsx(Dropdown.Divider, null), __jsx(Dropdown.Item, {\n        href: \"#\",\n        icon: __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faCog\n        })\n      }, \"Settings\")))));\n    }))));\n  }\n\n}\n\nexport default Widget14Component;","map":null,"metadata":{},"sourceType":"module"}