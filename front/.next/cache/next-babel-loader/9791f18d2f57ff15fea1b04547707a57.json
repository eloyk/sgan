{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Aside, Button } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { asideChange, asideToggle } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport AsideBody from \"./AsideBody\";\nimport Router from \"next/router\";\n\nvar AsideComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(AsideComponent, _React$Component);\n\n  var _super = _createSuper(AsideComponent);\n\n  function AsideComponent() {\n    _classCallCheck(this, AsideComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AsideComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      // Collapse aside when the routing start for mobile device\n      Router.events.on(\"routeChangeStart\", function () {\n        return _this.props.asideChange({\n          mobileMinimized: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          desktopMinimized = _this$props.desktopMinimized,\n          mobileMinimized = _this$props.mobileMinimized,\n          asideChange = _this$props.asideChange,\n          asideToggle = _this$props.asideToggle;\n      return __jsx(Aside, {\n        desktopMinimized: desktopMinimized,\n        mobileMinimized: mobileMinimized,\n        backdropOnClick: function backdropOnClick() {\n          return asideChange({\n            mobileMinimized: true\n          });\n        }\n      }, __jsx(Aside.Header, null, __jsx(Aside.Title, null, \"Panely\"), __jsx(Aside.Addon, null, __jsx(Button, {\n        icon: true,\n        size: \"lg\",\n        variant: \"label-primary\",\n        onClick: function onClick() {\n          return asideToggle();\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faTimes,\n        className: \"aside-icon-minimize\"\n      }), __jsx(FontAwesomeIcon, {\n        icon: SolidIcon.faThumbtack,\n        className: \"aside-icon-maximize\"\n      })))), __jsx(AsideBody, null));\n    }\n  }]);\n\n  return AsideComponent;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return state.aside;\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    asideChange: asideChange,\n    asideToggle: asideToggle\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AsideComponent);","map":null,"metadata":{},"sourceType":"module"}