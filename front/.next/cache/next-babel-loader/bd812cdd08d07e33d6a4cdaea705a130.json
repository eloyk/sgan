{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\modules\\\\components\\\\Form.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\";\nimport FormFeedback from \"./FormFeedback\";\nimport FormGroup from \"./FormGroup\";\nimport FormText from \"./FormText\";\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: refPropType,\n  inline: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: \"form\"\n};\n\nvar Form = /*#__PURE__*/function (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  var _super = _createSuper(Form);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _super.call(this, props);\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"getRef\",\n    value: function getRef(ref) {\n      if (this.props.innerRef) {\n        this.props.innerRef(ref);\n      }\n\n      this.ref = ref;\n    }\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      if (this.ref) {\n        this.ref.submit();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          cssModule = _this$props.cssModule,\n          innerRef = _this$props.innerRef,\n          inline = _this$props.inline,\n          Tag = _this$props.tag,\n          attributes = _objectWithoutProperties(_this$props, [\"className\", \"cssModule\", \"innerRef\", \"inline\", \"tag\"]);\n\n      var classes = mapToCssModules(classNames({\n        \"form-inline\": inline\n      }, className), cssModule);\n      return __jsx(Tag, _extends({}, attributes, {\n        ref: innerRef,\n        className: classes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nForm.Feedback = FormFeedback;\nForm.Group = FormGroup;\nForm.Text = FormText;\nexport default Form;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/modules/components/Form.jsx"],"names":["React","PropTypes","classNames","mapToCssModules","tagPropType","refPropType","FormFeedback","FormGroup","FormText","propTypes","className","string","cssModule","object","innerRef","inline","bool","tag","defaultProps","Form","props","getRef","bind","submit","ref","Tag","attributes","classes","Component","Feedback","Group","Text"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,WAAvC,QAA0D,SAA1D;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAET,SAAS,CAACU,MADL;AAEhBC,EAAAA,SAAS,EAAEX,SAAS,CAACY,MAFL;AAGhBC,EAAAA,QAAQ,EAAET,WAHM;AAIhBU,EAAAA,MAAM,EAAEd,SAAS,CAACe,IAJF;AAKhBC,EAAAA,GAAG,EAAEb;AALW,CAAlB;AAQA,IAAMc,YAAY,GAAG;AACnBD,EAAAA,GAAG,EAAE;AADc,CAArB;;IAIME,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,+BAAd;AAJiB;AAKlB;;;;2BAEME,G,EAAK;AACV,UAAI,KAAKJ,KAAL,CAAWN,QAAf,EAAyB;AACvB,aAAKM,KAAL,CAAWN,QAAX,CAAoBU,GAApB;AACD;;AACD,WAAKA,GAAL,GAAWA,GAAX;AACD;;;6BAEQ;AACP,UAAI,KAAKA,GAAT,EAAc;AACZ,aAAKA,GAAL,CAASD,MAAT;AACD;AACF;;;6BAEQ;AAAA,wBACqE,KAAKH,KAD1E;AAAA,UACCV,SADD,eACCA,SADD;AAAA,UACYE,SADZ,eACYA,SADZ;AAAA,UACuBE,QADvB,eACuBA,QADvB;AAAA,UACiCC,MADjC,eACiCA,MADjC;AAAA,UAC8CU,GAD9C,eACyCR,GADzC;AAAA,UACsDS,UADtD;;AAGP,UAAMC,OAAO,GAAGxB,eAAe,CAACD,UAAU,CAAC;AAAE,uBAAea;AAAjB,OAAD,EAA4BL,SAA5B,CAAX,EAAmDE,SAAnD,CAA/B;AAEA,aAAO,MAAC,GAAD,eAASc,UAAT;AAAqB,QAAA,GAAG,EAAEZ,QAA1B;AAAoC,QAAA,SAAS,EAAEa,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EA3BgB3B,KAAK,CAAC4B,S;;AA8BzBT,IAAI,CAACV,SAAL,GAAiBA,SAAjB;AACAU,IAAI,CAACD,YAAL,GAAoBA,YAApB;AAEAC,IAAI,CAACU,QAAL,GAAgBvB,YAAhB;AACAa,IAAI,CAACW,KAAL,GAAavB,SAAb;AACAY,IAAI,CAACY,IAAL,GAAYvB,QAAZ;AAEA,eAAeW,IAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\"\nimport FormFeedback from \"./FormFeedback\"\nimport FormGroup from \"./FormGroup\"\nimport FormText from \"./FormText\"\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: refPropType,\n  inline: PropTypes.bool,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  tag: \"form\"\n}\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.getRef = this.getRef.bind(this)\n    this.submit = this.submit.bind(this)\n  }\n\n  getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref)\n    }\n    this.ref = ref\n  }\n\n  submit() {\n    if (this.ref) {\n      this.ref.submit()\n    }\n  }\n\n  render() {\n    const { className, cssModule, innerRef, inline, tag: Tag, ...attributes } = this.props\n\n    const classes = mapToCssModules(classNames({ \"form-inline\": inline }, className), cssModule)\n\n    return <Tag {...attributes} ref={innerRef} className={classes} />\n  }\n}\n\nForm.propTypes = propTypes\nForm.defaultProps = defaultProps\n\nForm.Feedback = FormFeedback\nForm.Group = FormGroup\nForm.Text = FormText\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}