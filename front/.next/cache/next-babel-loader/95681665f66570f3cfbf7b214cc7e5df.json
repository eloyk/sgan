{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\template\\\\src\\\\components\\\\firebase\\\\firebaseWithAuth.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { bindActionCreators } from \"redux\";\nimport { firebaseChange } from \"store/actions\";\nimport { connect } from \"react-redux\";\nimport verifyCookie from \"components/firebase/firebaseVerifyCookie\";\nimport Router from \"next/router\";\nimport PAGE from \"config/page.config\";\n\nfunction firebaseWithAuth(AuthComponent) {\n  class Authentication extends React.Component {\n    static async getInitialProps(ctx) {\n      let initialProps = {}; // Get initial properties\n\n      if (AuthComponent.getInitialProps) {\n        initialProps = await AuthComponent.getInitialProps(ctx);\n      } // Verify cookie\n\n\n      const result = await verifyCookie(ctx); // Check cookie is valid or not\n\n      if (!result) {\n        // Redirect to login page\n        if (ctx.res) {\n          ctx.res.writeHead(302, {\n            Location: PAGE.loginPagePath\n          });\n          ctx.res.end();\n        } else {\n          Router.push(PAGE.loginPagePath);\n        }\n\n        return _objectSpread(_objectSpread({}, initialProps), {}, {\n          firebase: null\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, initialProps), {}, {\n        firebase: result\n      });\n    }\n\n    componentDidMount() {\n      this.props.firebaseChange(this.props.firebase);\n    }\n\n    render() {\n      return __jsx(AuthComponent, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }\n      }));\n    }\n\n  }\n\n  function mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n      firebaseChange\n    }, dispatch);\n  }\n\n  return connect(null, mapDispatchToProps)(Authentication);\n}\n\nexport default firebaseWithAuth;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/template/src/components/firebase/firebaseWithAuth.jsx"],"names":["bindActionCreators","firebaseChange","connect","verifyCookie","Router","PAGE","firebaseWithAuth","AuthComponent","Authentication","React","Component","getInitialProps","ctx","initialProps","result","res","writeHead","Location","loginPagePath","end","push","firebase","componentDidMount","props","render","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;AAAA,SAASA,kBAAT,QAAmC,OAAnC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,SAASC,gBAAT,CAA0BC,aAA1B,EAAyC;AACvC,QAAMC,cAAN,SAA6BC,KAAK,CAACC,SAAnC,CAA6C;AAC3C,iBAAaC,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAIC,YAAY,GAAG,EAAnB,CADgC,CAGhC;;AACA,UAAIN,aAAa,CAACI,eAAlB,EAAmC;AACjCE,QAAAA,YAAY,GAAG,MAAMN,aAAa,CAACI,eAAd,CAA8BC,GAA9B,CAArB;AACD,OAN+B,CAQhC;;;AACA,YAAME,MAAM,GAAG,MAAMX,YAAY,CAACS,GAAD,CAAjC,CATgC,CAWhC;;AACA,UAAI,CAACE,MAAL,EAAa;AACX;AACA,YAAIF,GAAG,CAACG,GAAR,EAAa;AACXH,UAAAA,GAAG,CAACG,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AAAEC,YAAAA,QAAQ,EAAEZ,IAAI,CAACa;AAAjB,WAAvB;AACAN,UAAAA,GAAG,CAACG,GAAJ,CAAQI,GAAR;AACD,SAHD,MAGO;AACLf,UAAAA,MAAM,CAACgB,IAAP,CAAYf,IAAI,CAACa,aAAjB;AACD;;AAED,+CACKL,YADL;AAEEQ,UAAAA,QAAQ,EAAE;AAFZ;AAID;;AAED,6CACKR,YADL;AAEEQ,QAAAA,QAAQ,EAAEP;AAFZ;AAID;;AAEDQ,IAAAA,iBAAiB,GAAG;AAClB,WAAKC,KAAL,CAAWtB,cAAX,CAA0B,KAAKsB,KAAL,CAAWF,QAArC;AACD;;AAEDG,IAAAA,MAAM,GAAG;AACP,aAAO,MAAC,aAAD,eAAmB,KAAKD,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;AAxC0C;;AA2C7C,WAASE,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,WAAO1B,kBAAkB,CAAC;AAAEC,MAAAA;AAAF,KAAD,EAAqByB,QAArB,CAAzB;AACD;;AAED,SAAOxB,OAAO,CAAC,IAAD,EAAOuB,kBAAP,CAAP,CAAkCjB,cAAlC,CAAP;AACD;;AAED,eAAeF,gBAAf","sourcesContent":["import { bindActionCreators } from \"redux\"\nimport { firebaseChange } from \"store/actions\"\nimport { connect } from \"react-redux\"\nimport verifyCookie from \"components/firebase/firebaseVerifyCookie\"\nimport Router from \"next/router\"\nimport PAGE from \"config/page.config\"\n\nfunction firebaseWithAuth(AuthComponent) {\n  class Authentication extends React.Component {\n    static async getInitialProps(ctx) {\n      let initialProps = {}\n\n      // Get initial properties\n      if (AuthComponent.getInitialProps) {\n        initialProps = await AuthComponent.getInitialProps(ctx)\n      }\n\n      // Verify cookie\n      const result = await verifyCookie(ctx)\n\n      // Check cookie is valid or not\n      if (!result) {\n        // Redirect to login page\n        if (ctx.res) {\n          ctx.res.writeHead(302, { Location: PAGE.loginPagePath })\n          ctx.res.end()\n        } else {\n          Router.push(PAGE.loginPagePath)\n        }\n\n        return {\n          ...initialProps,\n          firebase: null\n        }\n      }\n\n      return {\n        ...initialProps,\n        firebase: result\n      }\n    }\n\n    componentDidMount() {\n      this.props.firebaseChange(this.props.firebase)\n    }\n\n    render() {\n      return <AuthComponent {...this.props} />\n    }\n  }\n\n  function mapDispatchToProps(dispatch) {\n    return bindActionCreators({ firebaseChange }, dispatch)\n  }\n\n  return connect(null, mapDispatchToProps)(Authentication)\n}\n\nexport default firebaseWithAuth\n"]},"metadata":{},"sourceType":"module"}