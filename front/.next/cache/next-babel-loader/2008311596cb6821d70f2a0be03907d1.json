{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Row, Col, Portlet, RichList, Container } from \"@panely/components\";\nimport { ReactSortable } from \"react-sortablejs\";\nimport { pageChangeHeaderTitle, breadcrumbChange } from \"store/actions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport withLayout from \"components/layout/withLayout\"; //import withAuth from \"components/firebase/firebaseWithAuth\"\n\nimport Head from \"next/head\";\n\nvar SortablePage = /*#__PURE__*/function (_React$Component) {\n  _inherits(SortablePage, _React$Component);\n\n  var _super = _createSuper(SortablePage);\n\n  function SortablePage() {\n    _classCallCheck(this, SortablePage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SortablePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Set header title\n      this.props.pageChangeHeaderTitle(\"Sortable\"); // Set breadcrumb data\n\n      this.props.breadcrumbChange([{\n        text: \"Dashboard\",\n        link: \"/\"\n      }, {\n        text: \"Elements\"\n      }, {\n        text: \"Advanced\"\n      }, {\n        text: \"Sortable\",\n        link: \"/elements/advanced/sortable\"\n      }]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Sortable | Panely\")), __jsx(Container, {\n        fluid: true\n      }, __jsx(Row, null, __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Basic\")), __jsx(Portlet.Body, null, __jsx(Sortable1, null))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Shared lists\")), __jsx(Portlet.Body, null, __jsx(Sortable2, null))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Disabled sorting\")), __jsx(Portlet.Body, null, __jsx(Sortable3, null)))), __jsx(Col, {\n        md: \"6\"\n      }, __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Cloning\")), __jsx(Portlet.Body, null, __jsx(Sortable4, null))), __jsx(Portlet, null, __jsx(Portlet.Header, {\n        bordered: true\n      }, __jsx(Portlet.Title, null, \"Nested\")), __jsx(Portlet.Body, null, __jsx(Sortable5, null)))))));\n    }\n  }]);\n\n  return SortablePage;\n}(React.Component);\n\nvar Sortable1 = /*#__PURE__*/function (_React$Component2) {\n  _inherits(Sortable1, _React$Component2);\n\n  var _super2 = _createSuper(Sortable1);\n\n  function Sortable1() {\n    var _this;\n\n    _classCallCheck(this, Sortable1);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super2.call.apply(_super2, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: [{\n        id: 1,\n        title: \"List 1\",\n        subtitle: \"Cras justo odio\"\n      }, {\n        id: 2,\n        title: \"List 2\",\n        subtitle: \"Dapibus ac facilisis in\"\n      }, {\n        id: 3,\n        title: \"List 3\",\n        subtitle: \"Morbi leo risus\"\n      }]\n    });\n\n    return _this;\n  }\n\n  _createClass(Sortable1, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(RichList, {\n        bordered: true\n      }, __jsx(ReactSortable, {\n        list: this.state.data,\n        setList: function setList(data) {\n          return _this2.setState({\n            data: data\n          });\n        }\n      }, this.state.data.map(function (data, index) {\n        var title = data.title,\n            subtitle = data.subtitle;\n        return __jsx(RichList.Item, {\n          key: index\n        }, __jsx(RichList.Content, null, __jsx(RichList.Title, {\n          children: title\n        }), __jsx(RichList.Subtitle, {\n          children: subtitle\n        })));\n      })));\n    }\n  }]);\n\n  return Sortable1;\n}(React.Component);\n\nvar Sortable2 = /*#__PURE__*/function (_React$Component3) {\n  _inherits(Sortable2, _React$Component3);\n\n  var _super3 = _createSuper(Sortable2);\n\n  function Sortable2() {\n    var _this3;\n\n    _classCallCheck(this, Sortable2);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _super3.call.apply(_super3, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this3), \"state\", {\n      list1: [{\n        id: 1,\n        title: \"List 1\",\n        subtitle: \"Cras justo odio\",\n        color: \"success\"\n      }, {\n        id: 2,\n        title: \"List 2\",\n        subtitle: \"Dapibus ac facilisis in\",\n        color: \"success\"\n      }, {\n        id: 3,\n        title: \"List 3\",\n        subtitle: \"Morbi leo risus\",\n        color: \"success\"\n      }],\n      list2: [{\n        id: 1,\n        title: \"List 1\",\n        subtitle: \"Cras justo odio\",\n        color: \"danger\"\n      }, {\n        id: 2,\n        title: \"List 2\",\n        subtitle: \"Dapibus ac facilisis in\",\n        color: \"danger\"\n      }, {\n        id: 3,\n        title: \"List 3\",\n        subtitle: \"Morbi leo risus\",\n        color: \"danger\"\n      }]\n    });\n\n    return _this3;\n  }\n\n  _createClass(Sortable2, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return __jsx(Row, null, __jsx(Col, {\n        xs: \"6\"\n      }, __jsx(RichList, {\n        bordered: true\n      }, __jsx(ReactSortable, {\n        group: \"sortable2\",\n        list: this.state.list1,\n        setList: function setList(data) {\n          return _this4.setState(_objectSpread(_objectSpread({}, _this4.state), {}, {\n            list1: data\n          }));\n        }\n      }, this.state.list1.map(function (data, index) {\n        var title = data.title,\n            subtitle = data.subtitle,\n            color = data.color;\n        return __jsx(RichList.Item, {\n          key: index\n        }, __jsx(RichList.Content, null, __jsx(RichList.Title, {\n          className: \"text-\".concat(color),\n          children: title\n        }), __jsx(RichList.Subtitle, {\n          children: subtitle\n        })));\n      })))), __jsx(Col, {\n        xs: \"6\"\n      }, __jsx(RichList, {\n        bordered: true\n      }, __jsx(ReactSortable, {\n        group: \"sortable2\",\n        list: this.state.list2,\n        setList: function setList(data) {\n          return _this4.setState(_objectSpread(_objectSpread({}, _this4.state), {}, {\n            list2: data\n          }));\n        }\n      }, this.state.list2.map(function (data, index) {\n        var title = data.title,\n            subtitle = data.subtitle,\n            color = data.color;\n        return __jsx(RichList.Item, {\n          key: index\n        }, __jsx(RichList.Content, null, __jsx(RichList.Title, {\n          className: \"text-\".concat(color),\n          children: title\n        }), __jsx(RichList.Subtitle, {\n          children: subtitle\n        })));\n      })))));\n    }\n  }]);\n\n  return Sortable2;\n}(React.Component);\n\nvar Sortable3 = /*#__PURE__*/function (_React$Component4) {\n  _inherits(Sortable3, _React$Component4);\n\n  var _super4 = _createSuper(Sortable3);\n\n  function Sortable3() {\n    var _this5;\n\n    _classCallCheck(this, Sortable3);\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this5 = _super4.call.apply(_super4, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this5), \"state\", {\n      list1: [{\n        id: 1,\n        title: \"List 1\",\n        subtitle: \"Cras justo odio\",\n        color: \"success\"\n      }, {\n        id: 2,\n        title: \"List 2\",\n        subtitle: \"Dapibus ac facilisis in\",\n        color: \"success\"\n      }, {\n        id: 3,\n        title: \"List 3\",\n        subtitle: \"Morbi leo risus\",\n        color: \"success\"\n      }],\n      list2: [{\n        id: 1,\n        title: \"List 1\",\n        subtitle: \"Cras justo odio\",\n        color: \"danger\"\n      }, {\n        id: 2,\n        title: \"List 2\",\n        subtitle: \"Dapibus ac facilisis in\",\n        color: \"danger\"\n      }, {\n        id: 3,\n        title: \"List 3\",\n        subtitle: \"Morbi leo risus\",\n        color: \"danger\"\n      }]\n    });\n\n    return _this5;\n  }\n\n  _createClass(Sortable3, [{\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return __jsx(Row, null, __jsx(Col, {\n        xs: \"6\"\n      }, __jsx(RichList, {\n        bordered: true\n      }, __jsx(ReactSortable, {\n        group: {\n          name: \"sortable3\",\n          pull: \"clone\",\n          put: false\n        },\n        sort: false,\n        list: this.state.list1,\n        setList: function setList(data) {\n          return _this6.setState(_objectSpread(_objectSpread({}, _this6.state), {}, {\n            list1: data\n          }));\n        }\n      }, this.state.list1.map(function (data, index) {\n        var title = data.title,\n            subtitle = data.subtitle,\n            color = data.color;\n        return __jsx(RichList.Item, {\n          key: index\n        }, __jsx(RichList.Content, null, __jsx(RichList.Title, {\n          className: \"text-\".concat(color),\n          children: title\n        }), __jsx(RichList.Subtitle, {\n          children: subtitle\n        })));\n      })))), __jsx(Col, {\n        xs: \"6\"\n      }, __jsx(RichList, {\n        bordered: true\n      }, __jsx(ReactSortable, {\n        group: \"sortable3\",\n        list: this.state.list2,\n        setList: function setList(data) {\n          return _this6.setState(_objectSpread(_objectSpread({}, _this6.state), {}, {\n            list2: data\n          }));\n        }\n      }, this.state.list2.map(function (data, index) {\n        var title = data.title,\n            subtitle = data.subtitle,\n            color = data.color;\n        return __jsx(RichList.Item, {\n          key: index\n        }, __jsx(RichList.Content, null, __jsx(RichList.Title, {\n          className: \"text-\".concat(color),\n          children: title\n        }), __jsx(RichList.Subtitle, {\n          children: subtitle\n        })));\n      })))));\n    }\n  }]);\n\n  return Sortable3;\n}(React.Component);\n\nvar Sortable4 = /*#__PURE__*/function (_React$Component5) {\n  _inherits(Sortable4, _React$Component5);\n\n  var _super5 = _createSuper(Sortable4);\n\n  function Sortable4() {\n    var _this7;\n\n    _classCallCheck(this, Sortable4);\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    _this7 = _super5.call.apply(_super5, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this7), \"state\", {\n      list1: [{\n        id: 1,\n        title: \"List 1\",\n        subtitle: \"Cras justo odio\",\n        color: \"success\"\n      }, {\n        id: 2,\n        title: \"List 2\",\n        subtitle: \"Dapibus ac facilisis in\",\n        color: \"success\"\n      }, {\n        id: 3,\n        title: \"List 3\",\n        subtitle: \"Morbi leo risus\",\n        color: \"success\"\n      }],\n      list2: [{\n        id: 1,\n        title: \"List 1\",\n        subtitle: \"Cras justo odio\",\n        color: \"danger\"\n      }, {\n        id: 2,\n        title: \"List 2\",\n        subtitle: \"Dapibus ac facilisis in\",\n        color: \"danger\"\n      }, {\n        id: 3,\n        title: \"List 3\",\n        subtitle: \"Morbi leo risus\",\n        color: \"danger\"\n      }]\n    });\n\n    return _this7;\n  }\n\n  _createClass(Sortable4, [{\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      return __jsx(Row, null, __jsx(Col, {\n        xs: \"6\"\n      }, __jsx(RichList, {\n        bordered: true\n      }, __jsx(ReactSortable, {\n        group: {\n          name: \"sortable4\",\n          pull: \"clone\"\n        },\n        list: this.state.list1,\n        setList: function setList(data) {\n          return _this8.setState(_objectSpread(_objectSpread({}, _this8.state), {}, {\n            list1: data\n          }));\n        }\n      }, this.state.list1.map(function (data, index) {\n        var title = data.title,\n            subtitle = data.subtitle,\n            color = data.color;\n        return __jsx(RichList.Item, {\n          key: index\n        }, __jsx(RichList.Content, null, __jsx(RichList.Title, {\n          className: \"text-\".concat(color),\n          children: title\n        }), __jsx(RichList.Subtitle, {\n          children: subtitle\n        })));\n      })))), __jsx(Col, {\n        xs: \"6\"\n      }, __jsx(RichList, {\n        bordered: true\n      }, __jsx(ReactSortable, {\n        group: {\n          name: \"sortable4\",\n          pull: \"clone\"\n        },\n        list: this.state.list2,\n        setList: function setList(data) {\n          return _this8.setState(_objectSpread(_objectSpread({}, _this8.state), {}, {\n            list2: data\n          }));\n        }\n      }, this.state.list2.map(function (data, index) {\n        var title = data.title,\n            subtitle = data.subtitle,\n            color = data.color;\n        return __jsx(RichList.Item, {\n          key: index\n        }, __jsx(RichList.Content, null, __jsx(RichList.Title, {\n          className: \"text-\".concat(color),\n          children: title\n        }), __jsx(RichList.Subtitle, {\n          children: subtitle\n        })));\n      })))));\n    }\n  }]);\n\n  return Sortable4;\n}(React.Component);\n\nvar Sortable5 = /*#__PURE__*/function (_React$Component6) {\n  _inherits(Sortable5, _React$Component6);\n\n  var _super6 = _createSuper(Sortable5);\n\n  function Sortable5() {\n    var _this9;\n\n    _classCallCheck(this, Sortable5);\n\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    _this9 = _super6.call.apply(_super6, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this9), \"state\", {\n      list: [{\n        id: \"1\",\n        title: \"List 1\",\n        subtitle: \"Cras justo odio\",\n        child: [{\n          id: \"1-1\",\n          title: \"List 1.1\",\n          subtitle: \"Dapibus ac facilisis in\",\n          child: false\n        }, {\n          id: \"1-2\",\n          title: \"List 1.2\",\n          subtitle: \"Morbi leo risus\",\n          child: false\n        }]\n      }, {\n        id: \"2\",\n        title: \"List 2\",\n        subtitle: \"Dapibus ac facilisis in\",\n        child: [{\n          id: \"2-1\",\n          title: \"List 2.1\",\n          subtitle: \"Dapibus ac facilisis in\",\n          child: false\n        }, {\n          id: \"2-2\",\n          title: \"List 2.2\",\n          subtitle: \"Morbi leo risus\",\n          child: [{\n            id: \"2-2-1\",\n            title: \"List 2-2-1\",\n            subtitle: \"Cras justo odio\",\n            child: false\n          }]\n        }]\n      }, {\n        id: \"3\",\n        title: \"List 3\",\n        subtitle: \"Morbi leo risus\",\n        child: false\n      }, {\n        id: \"4\",\n        title: \"List 4\",\n        subtitle: \"Cras justo odio\",\n        child: false\n      }]\n    });\n\n    return _this9;\n  }\n\n  _createClass(Sortable5, [{\n    key: \"render\",\n    value: function render() {\n      var _this10 = this;\n\n      return __jsx(RichList, {\n        bordered: true,\n        className: \"sortable\"\n      }, __jsx(ReactSortable, {\n        group: \"sortable5\",\n        invertSwap: true,\n        list: this.state.list,\n        setList: function setList(data) {\n          return _this10.setState({\n            list: data\n          });\n        }\n      }, this.state.list.map(function (data, index1) {\n        var title = data.title,\n            subtitle = data.subtitle,\n            child = data.child;\n        var hasChild = Boolean(child);\n        var listState = _this10.state.list;\n        return __jsx(\"div\", {\n          className: \"sortable-item\",\n          key: index1\n        }, __jsx(RichList.Item, null, __jsx(RichList.Content, null, __jsx(RichList.Title, {\n          children: title\n        }), __jsx(RichList.Subtitle, {\n          children: subtitle\n        }))), hasChild ? __jsx(RichList, {\n          bordered: true,\n          className: \"sortable\"\n        }, __jsx(ReactSortable, {\n          group: \"sortable5\",\n          invertSwap: true,\n          list: _this10.state.list[index1].child,\n          setList: function setList(data) {\n            listState[index1].child = data;\n\n            _this10.setState({\n              list: listState\n            });\n          }\n        }, child.map(function (data, index2) {\n          var title = data.title,\n              subtitle = data.subtitle,\n              child = data.child;\n          var hasChild = Boolean(child);\n          return __jsx(\"div\", {\n            className: \"sortable-item\",\n            key: index2\n          }, __jsx(RichList.Item, null, __jsx(RichList.Content, null, __jsx(RichList.Title, {\n            children: title\n          }), __jsx(RichList.Subtitle, {\n            children: subtitle\n          }))), hasChild ? __jsx(RichList, {\n            bordered: true,\n            className: \"sortable\"\n          }, __jsx(ReactSortable, {\n            group: \"sortable5\",\n            invertSwap: true,\n            list: _this10.state.list[index1].child[index2].child,\n            setList: function setList(data) {\n              listState[index1].child[index2].child = data;\n\n              _this10.setState({\n                list: listState\n              });\n            }\n          }, child.map(function (data, index3) {\n            var title = data.title,\n                subtitle = data.subtitle;\n            return __jsx(\"div\", {\n              className: \"sortable-item\",\n              key: index3\n            }, __jsx(RichList.Item, null, __jsx(RichList.Content, null, __jsx(RichList.Title, {\n              children: title\n            }), __jsx(RichList.Subtitle, {\n              children: subtitle\n            }))));\n          }))) : null);\n        }))) : null);\n      })));\n    }\n  }]);\n\n  return Sortable5;\n}(React.Component);\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    pageChangeHeaderTitle: pageChangeHeaderTitle,\n    breadcrumbChange: breadcrumbChange\n  }, dispatch);\n}\n\nexport default connect(null, mapDispathToProps)(withLayout(SortablePage));","map":null,"metadata":{},"sourceType":"module"}