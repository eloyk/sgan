{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Form, Label, Input, Button, Portlet, Container, CustomInput, FloatLabel, Widget12 } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport * as yup from \"yup\";\nimport withLayout from \"components/layout/withLayout\";\nimport withAuth from \"components/firebase/firebaseWithAuth\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\n\nfunction Login1Page() {\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Login 1 | Panely\")), __jsx(Container, {\n    fluid: true\n  }, __jsx(Row, {\n    noGutters: true,\n    className: \"align-items-center justify-content-center h-100\"\n  }, __jsx(Col, {\n    sm: \"8\",\n    md: \"6\",\n    lg: \"4\"\n  }, __jsx(Portlet, null, __jsx(Portlet.Body, null, __jsx(\"div\", {\n    className: \"text-center mt-2 mb-4\"\n  }, __jsx(Widget12, {\n    display: true,\n    circle: true,\n    variant: \"label-primary\",\n    className: \"mb-4\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: SolidIcon.faUserAlt\n  }))), __jsx(Login1Form, null)))))));\n}\n\nfunction Login1Form() {\n  // Define Yup schema for form validation\n  const schema = yup.object().shape({\n    email: yup.string().email(\"Your email is not valid\").required(\"Please enter your email\"),\n    password: yup.string().min(6, \"Please enter at least 6 characters\").required(\"Please provide your password\"),\n    remember: yup.boolean()\n  });\n  const {\n    control,\n    handleSubmit,\n    errors\n  } = useForm({\n    // Apply Yup as resolver for react-hook-form\n    resolver: yupResolver(schema),\n    // Define the default values for all input forms\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n      remember: false\n    }\n  }); // Handle form submit event\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return __jsx(Form, {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(Form.Group, null, __jsx(FloatLabel, {\n    size: \"lg\"\n  }, __jsx(Controller, {\n    as: Input,\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    size: \"lg\",\n    control: control,\n    invalid: Boolean(errors.email),\n    placeholder: \"Please insert your email\"\n  }), __jsx(Label, {\n    for: \"email\"\n  }, \"Email\"), errors.email && __jsx(Form.Feedback, {\n    children: errors.email.message\n  }))), __jsx(Form.Group, null, __jsx(FloatLabel, {\n    size: \"lg\"\n  }, __jsx(Controller, {\n    as: Input,\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    size: \"lg\",\n    control: control,\n    invalid: Boolean(errors.password),\n    placeholder: \"Please insert your password\"\n  }), __jsx(Label, {\n    for: \"password\"\n  }, \"Password\"), errors.password && __jsx(Form.Feedback, {\n    children: errors.password.message\n  }))), __jsx(\"div\", {\n    className: \"d-flex align-items-center justify-content-between mb-3\"\n  }, __jsx(Form.Group, {\n    className: \"mb-0\"\n  }, __jsx(Controller, {\n    control: control,\n    name: \"remember\",\n    render: ({\n      onChange,\n      onBlur,\n      value,\n      name,\n      ref\n    }) => __jsx(CustomInput, {\n      type: \"switch\",\n      size: \"lg\",\n      id: \"remember\",\n      label: \"Remember me\",\n      onBlur: onBlur,\n      onChange: e => onChange(e.target.checked),\n      checked: value,\n      innerRef: ref\n    })\n  })), __jsx(Link, {\n    href: \"#\"\n  }, \"Forgot password?\")), __jsx(\"div\", {\n    className: \"d-flex align-items-center justify-content-between\"\n  }, __jsx(\"span\", null, \"Don't have an account ? \", __jsx(Link, {\n    href: \"/pages/register/register-1\"\n  }, \"Sign Up\")), __jsx(Button, {\n    type: \"submit\",\n    variant: \"label-primary\",\n    size: \"lg\",\n    width: \"widest\"\n  }, \"Login\")));\n}\n\nexport default withAuth(withLayout(Login1Page, \"blank\"));","map":null,"metadata":{},"sourceType":"module"}