{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { DropdownContext } from \"./DropdownContext\";\nimport { mapToCssModules, omit, tagPropType } from \"./utils\";\nvar defaultProps = {\n  toggle: true,\n  tag: \"button\"\n};\n\nvar DropdownItem = /*#__PURE__*/function (_React$Component) {\n  _inherits(DropdownItem, _React$Component);\n\n  var _super = _createSuper(DropdownItem);\n\n  function DropdownItem(props) {\n    var _this;\n\n    _classCallCheck(this, DropdownItem);\n\n    _this = _super.call(this, props);\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.getTabIndex = _this.getTabIndex.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DropdownItem, [{\n    key: \"onClick\",\n    value: function onClick(e) {\n      if (this.props.disabled || this.props.header || this.props.divider) {\n        e.preventDefault();\n        return;\n      }\n\n      if (this.props.onClick) {\n        this.props.onClick(e);\n      }\n\n      if (this.props.toggle) {\n        this.context.toggle(e);\n      }\n    }\n  }, {\n    key: \"getTabIndex\",\n    value: function getTabIndex() {\n      if (this.props.disabled || this.props.header || this.props.divider) {\n        return \"-1\";\n      }\n\n      return \"0\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tabIndex = this.getTabIndex();\n      var role = tabIndex > -1 ? \"menuitem\" : undefined;\n\n      var _omit = omit(this.props, [\"toggle\"]),\n          className = _omit.className,\n          cssModule = _omit.cssModule,\n          children = _omit.children,\n          disabled = _omit.disabled,\n          active = _omit.active,\n          bullet = _omit.bullet,\n          addon = _omit.addon,\n          icon = _omit.icon,\n          Tag = _omit.tag,\n          props = _objectWithoutProperties(_omit, [\"className\", \"cssModule\", \"children\", \"disabled\", \"active\", \"bullet\", \"addon\", \"icon\", \"tag\"]);\n\n      var classes = mapToCssModules(classNames(className, \"dropdown-item\", {\n        disabled: disabled,\n        active: active\n      }), cssModule);\n      var iconClasses = mapToCssModules(classNames(\"dropdown-icon\"), cssModule);\n      var bulletClasses = mapToCssModules(classNames(\"dropdown-bullet\"), cssModule);\n      var contentClasses = mapToCssModules(classNames(\"dropdown-content\"), cssModule);\n      var addonClasses = mapToCssModules(classNames(\"dropdown-addon\"), cssModule);\n\n      if (Tag === \"button\") {\n        if (props.href) {\n          Tag = \"a\";\n        }\n      }\n\n      return __jsx(Tag, _extends({\n        type: Tag === \"button\" && (props.onClick || this.props.toggle) ? \"button\" : undefined\n      }, props, {\n        tabIndex: tabIndex,\n        role: role,\n        className: classes,\n        onClick: this.onClick\n      }), icon ? __jsx(\"span\", {\n        className: iconClasses\n      }, icon) : null, bullet && !icon ? __jsx(\"i\", {\n        className: bulletClasses\n      }) : null, __jsx(\"span\", {\n        className: contentClasses\n      }, children), addon ? __jsx(\"span\", {\n        className: addonClasses\n      }, addon) : null);\n    }\n  }]);\n\n  return DropdownItem;\n}(React.Component);\n\nDropdownItem.defaultProps = defaultProps;\nDropdownItem.contextType = DropdownContext;\nexport default DropdownItem;","map":null,"metadata":{},"sourceType":"module"}