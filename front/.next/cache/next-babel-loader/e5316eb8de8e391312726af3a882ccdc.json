{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\pages\\\\login.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Form, Label, Input, Button, Portlet, Spinner, Container, CustomInput, FloatLabel, Widget12 } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { firebaseClient } from \"components/firebase/firebaseClient\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\nimport * as yup from \"yup\";\nimport verifyCookie from \"components/firebase/firebaseVerifyCookie\";\nimport withLayout from \"components/layout/withLayout\";\nimport swalContent from \"sweetalert2-react-content\";\nimport Router from \"next/router\";\nimport Swal from \"@panely/sweetalert2\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport PAGE from \"config/page.config\"; // Use SweetAlert React Content library\n\nvar ReactSwal = swalContent(Swal); // Set SweetAlert options\n\n_c = ReactSwal;\nvar swal = ReactSwal.mixin({\n  customClass: {\n    confirmButton: \"btn btn-label-success btn-wide mx-1\",\n    cancelButton: \"btn btn-label-danger btn-wide mx-1\"\n  },\n  buttonsStyling: false\n});\n\nfunction LoginPage() {\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Login | Panely\")), __jsx(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    noGutters: true,\n    className: \"align-items-center justify-content-center h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    sm: \"8\",\n    md: \"6\",\n    lg: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(Portlet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(Portlet.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"text-center mt-2 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, __jsx(Widget12, {\n    display: true,\n    circle: true,\n    variant: \"label-primary\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: SolidIcon.faUserAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }))), __jsx(LoginForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })))))));\n}\n\n_c2 = LoginPage;\n\nfunction LoginForm() {\n  _s();\n\n  // Loading state\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1]; // Define Yup schema for form validation\n\n\n  var schema = yup.object().shape({\n    email: yup.string().email(\"Your email is not valid\").required(\"Please enter your email\"),\n    password: yup.string().min(6, \"Please enter at least 6 characters\").required(\"Please provide your password\")\n  });\n\n  var _useForm = useForm({\n    // Apply Yup as resolver for react-hook-form\n    resolver: yupResolver(schema),\n    // Define the default values for all input forms\n    defaultValues: {\n      email: \"\",\n      password: \"\"\n    }\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors; // Handle form submit event\n\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var email, password;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = _ref.email, password = _ref.password;\n              // Show loading indicator\n              setLoading(true); // Trying to login with email and password with firebase\n\n              _context.next = 4;\n              return firebaseClient.auth().signInWithEmailAndPassword(email, password).then(function () {\n                // Redirect to dashboard page\n                Router.push(Router.query.redirect || PAGE.dashboardPagePath);\n              })[\"catch\"](function (err) {\n                // Show the error message if authentication is failed\n                swal.fire({\n                  text: err.message,\n                  icon: \"error\"\n                });\n              });\n\n            case 4:\n              // Hide loading indicator\n              setLoading(false);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, __jsx(FloatLabel, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, __jsx(Controller, {\n    as: Input,\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    size: \"lg\",\n    control: control,\n    invalid: Boolean(errors.email),\n    placeholder: \"Please insert your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), __jsx(Label, {\n    \"for\": \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Email\"), errors.email && __jsx(Form.Feedback, {\n    children: errors.email.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 28\n    }\n  }))), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, __jsx(FloatLabel, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, __jsx(Controller, {\n    as: Input,\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    size: \"lg\",\n    control: control,\n    invalid: Boolean(errors.password),\n    placeholder: \"Please insert your password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }), __jsx(Label, {\n    \"for\": \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"Password\"), errors.password && __jsx(Form.Feedback, {\n    children: errors.password.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 31\n    }\n  }))), __jsx(\"div\", {\n    className: \"d-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, \"Don't have an account ? \", __jsx(Link, {\n    href: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 35\n    }\n  }, \"Sign Up\")), __jsx(Button, {\n    type: \"submit\",\n    variant: \"label-primary\",\n    size: \"lg\",\n    width: \"widest\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, loading ? __jsx(Spinner, {\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 22\n    }\n  }) : null, \" Login\")));\n}\n\n_s(LoginForm, \"ZTOZ8ZNn4xJFCUPKfzlrHK+lZ+c=\", false, function () {\n  return [useForm];\n});\n\n_c3 = LoginForm;\n\nLoginPage.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return verifyCookie(ctx);\n\n          case 2:\n            result = _context2.sent;\n\n            // Redirect to dashboard page if the user has logged in\n            if (result) {\n              if (ctx.res) {\n                ctx.res.writeHead(302, {\n                  Location: ctx.query.redirect || PAGE.dashboardPagePath\n                });\n                ctx.res.end();\n              } else {\n                Router.push(Router.query.redirect || PAGE.dashboardPagePath);\n              }\n            }\n\n            return _context2.abrupt(\"return\", {\n              firebase: null\n            });\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default _c4 = withLayout(LoginPage, \"blank\");\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReactSwal\");\n$RefreshReg$(_c2, \"LoginPage\");\n$RefreshReg$(_c3, \"LoginForm\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/pages/login.jsx"],"names":["Row","Col","Form","Label","Input","Button","Portlet","Spinner","Container","CustomInput","FloatLabel","Widget12","FontAwesomeIcon","useForm","Controller","firebaseClient","yupResolver","SolidIcon","yup","verifyCookie","withLayout","swalContent","Router","Swal","Link","Head","PAGE","ReactSwal","swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","LoginPage","faUserAlt","LoginForm","React","useState","loading","setLoading","schema","object","shape","email","string","required","password","min","resolver","defaultValues","control","handleSubmit","errors","onSubmit","auth","signInWithEmailAndPassword","then","push","query","redirect","dashboardPagePath","err","fire","text","message","icon","Boolean","getInitialProps","ctx","result","res","writeHead","Location","end","firebase"],"mappings":"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","sourcesContent":["import {\n  Row,\n  Col,\n  Form,\n  Label,\n  Input,\n  Button,\n  Portlet,\n  Spinner,\n  Container,\n  CustomInput,\n  FloatLabel,\n  Widget12\n} from \"@panely/components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { firebaseClient } from \"components/firebase/firebaseClient\"\nimport { yupResolver } from \"@hookform/resolvers\"\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\"\nimport * as yup from \"yup\"\nimport verifyCookie from \"components/firebase/firebaseVerifyCookie\"\nimport withLayout from \"components/layout/withLayout\"\nimport swalContent from \"sweetalert2-react-content\"\nimport Router from \"next/router\"\nimport Swal from \"@panely/sweetalert2\"\nimport Link from \"next/link\"\nimport Head from \"next/head\"\nimport PAGE from \"config/page.config\"\n\n// Use SweetAlert React Content library\nconst ReactSwal = swalContent(Swal)\n\n// Set SweetAlert options\nconst swal = ReactSwal.mixin({\n  customClass: {\n    confirmButton: \"btn btn-label-success btn-wide mx-1\",\n    cancelButton: \"btn btn-label-danger btn-wide mx-1\"\n  },\n  buttonsStyling: false\n})\n\nfunction LoginPage() {\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Login | Panely</title>\n      </Head>\n      <Container fluid>\n        <Row noGutters className=\"align-items-center justify-content-center h-100\">\n          <Col sm=\"8\" md=\"6\" lg=\"4\">\n            {/* BEGIN Portlet */}\n            <Portlet>\n              <Portlet.Body>\n                <div className=\"text-center mt-2 mb-4\">\n                  {/* BEGIN Widget */}\n                  <Widget12 display circle variant=\"label-primary\" className=\"mb-4\">\n                    <FontAwesomeIcon icon={SolidIcon.faUserAlt} />\n                  </Widget12>\n                  {/* END Widget */}\n                </div>\n                <LoginForm />\n              </Portlet.Body>\n            </Portlet>\n            {/* END Portlet */}\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  )\n}\n\nfunction LoginForm() {\n  // Loading state\n  const [loading, setLoading] = React.useState(false)\n\n  // Define Yup schema for form validation\n  const schema = yup.object().shape({\n    email: yup\n      .string()\n      .email(\"Your email is not valid\")\n      .required(\"Please enter your email\"),\n    password: yup\n      .string()\n      .min(6, \"Please enter at least 6 characters\")\n      .required(\"Please provide your password\")\n  })\n\n  const { control, handleSubmit, errors } = useForm({\n    // Apply Yup as resolver for react-hook-form\n    resolver: yupResolver(schema),\n    // Define the default values for all input forms\n    defaultValues: {\n      email: \"\",\n      password: \"\"\n    }\n  })\n\n  // Handle form submit event\n  const onSubmit = async ({ email, password }) => {\n    // Show loading indicator\n    setLoading(true)\n\n    // Trying to login with email and password with firebase\n    await firebaseClient\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        // Redirect to dashboard page\n        Router.push(Router.query.redirect || PAGE.dashboardPagePath)\n      })\n      .catch(err => {\n        // Show the error message if authentication is failed\n        swal.fire({ text: err.message, icon: \"error\" })\n      })\n\n    // Hide loading indicator\n    setLoading(false)\n  }\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      {/* BEGIN Form Group */}\n      <Form.Group>\n        <FloatLabel size=\"lg\">\n          <Controller\n            as={Input}\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            size=\"lg\"\n            control={control}\n            invalid={Boolean(errors.email)}\n            placeholder=\"Please insert your email\"\n          />\n          <Label for=\"email\">Email</Label>\n          {errors.email && <Form.Feedback children={errors.email.message} />}\n        </FloatLabel>\n      </Form.Group>\n      {/* END Form Group */}\n      {/* BEGIN Form Group */}\n      <Form.Group>\n        <FloatLabel size=\"lg\">\n          <Controller\n            as={Input}\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            size=\"lg\"\n            control={control}\n            invalid={Boolean(errors.password)}\n            placeholder=\"Please insert your password\"\n          />\n          <Label for=\"password\">Password</Label>\n          {errors.password && <Form.Feedback children={errors.password.message} />}\n        </FloatLabel>\n      </Form.Group>\n      {/* END Form Group */}\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <span>\n          Don't have an account ? <Link href=\"/register\">Sign Up</Link>\n        </span>\n        <Button type=\"submit\" variant=\"label-primary\" size=\"lg\" width=\"widest\" disabled={loading}>\n          {loading ? <Spinner className=\"mr-2\" /> : null} Login\n        </Button>\n      </div>\n    </Form>\n  )\n}\n\nLoginPage.getInitialProps = async ctx => {\n  const result = await verifyCookie(ctx)\n\n  // Redirect to dashboard page if the user has logged in\n  if (result) {\n    if (ctx.res) {\n      ctx.res.writeHead(302, { Location: ctx.query.redirect || PAGE.dashboardPagePath })\n      ctx.res.end()\n    } else {\n      Router.push(Router.query.redirect || PAGE.dashboardPagePath)\n    }\n  }\n\n  return { firebase: null }\n}\n\nexport default withLayout(LoginPage, \"blank\")\n"]},"metadata":{},"sourceType":"module"}