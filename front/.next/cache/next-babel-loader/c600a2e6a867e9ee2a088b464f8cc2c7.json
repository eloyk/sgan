{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { mapToCssModules, tagPropType, refPropType } from \"./utils\";\nimport classNames from \"classnames\";\nimport Fade from \"./Fade\";\nimport AlertLink from \"./AlertLink\";\nimport AlertHeader from \"./AlertHeader\";\nvar defaultProps = {\n  closeClassName: \"btn btn-text-danger btn-icon\",\n  closeAriaLabel: \"Close\",\n  transition: _objectSpread(_objectSpread({}, Fade.defaultProps), {}, {\n    unmountOnExit: true\n  }),\n  variant: \"primary\",\n  isOpen: true,\n  fade: false,\n  tag: \"div\"\n};\n\nvar Alert = function Alert(props) {\n  var closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      className = props.className,\n      cssModule = props.cssModule,\n      transition = props.transition,\n      innerRef = props.innerRef,\n      children = props.children,\n      variant = props.variant,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      fade = props.fade,\n      icon = props.icon,\n      Tag = props.tag,\n      attributes = _objectWithoutProperties(props, [\"closeClassName\", \"closeAriaLabel\", \"className\", \"cssModule\", \"transition\", \"innerRef\", \"children\", \"variant\", \"isOpen\", \"toggle\", \"fade\", \"icon\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(\"alert\", \"alert-\".concat(variant), {\n    \"alert-dismissible\": toggle\n  }, className), cssModule);\n  var closeClasses = mapToCssModules(classNames(closeClassName), cssModule);\n  var iconClasses = mapToCssModules(classNames(\"alert-icon\"), cssModule);\n  var contentClasses = mapToCssModules(classNames(\"alert-content\"), cssModule);\n\n  var alertTransition = _objectSpread(_objectSpread(_objectSpread({}, Fade.defaultProps), transition), {}, {\n    baseClass: fade ? transition.baseClass : \"\",\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return __jsx(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    \"in\": isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), icon ? __jsx(\"div\", {\n    className: iconClasses\n  }, icon) : null, __jsx(\"div\", {\n    className: contentClasses\n  }, children), toggle ? __jsx(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, __jsx(FontAwesomeIcon, {\n    icon: faTimes\n  })) : null);\n};\n\nvar AlertUncontrolled = /*#__PURE__*/function (_React$Component) {\n  _inherits(AlertUncontrolled, _React$Component);\n\n  var _super = _createSuper(AlertUncontrolled);\n\n  function AlertUncontrolled(props) {\n    var _this;\n\n    _classCallCheck(this, AlertUncontrolled);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isOpen: true\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AlertUncontrolled, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Alert, _extends({\n        isOpen: this.state.isOpen,\n        toggle: this.toggle\n      }, this.props));\n    }\n  }]);\n\n  return AlertUncontrolled;\n}(React.Component);\n\nAlert.defaultProps = defaultProps;\nAlert.Link = AlertLink;\nAlert.Header = AlertHeader;\nAlert.Uncontrolled = AlertUncontrolled;\nexport default Alert;","map":null,"metadata":{},"sourceType":"module"}