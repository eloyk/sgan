{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eloy\\\\Desktop\\\\sgan\\\\front\\\\src\\\\components\\\\layout\\\\part\\\\SidemenuAgendaContact.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Badge, Avatar, Button, Marker, Portlet, RichList } from \"@panely/components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\";\n\nclass SidemenuAgendaContact extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: [{\n        name: \"Charlie Stone\",\n        title: \"Art Director\",\n        time: \"1 min\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 1,\n        online: false,\n        avatarMarker: () => __jsx(Avatar.Icon, {\n          variant: \"info\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 11\n          }\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faThumbtack,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }\n        }))\n      }, {\n        name: \"Freddie Stevens\",\n        title: \"Journalist\",\n        time: \"2 hour\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 12,\n        online: true\n      }, {\n        name: \"Tyler Clark\",\n        title: \"Programmer\",\n        time: \"5 hour\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 0,\n        online: true\n      }, {\n        name: \"Darcy Harrison\",\n        title: \"Internet Marketer\",\n        time: \"1 day\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 2,\n        online: false,\n        avatarMarker: () => __jsx(Avatar.Icon, {\n          variant: \"success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }\n        }, __jsx(FontAwesomeIcon, {\n          icon: SolidIcon.faCheck,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }\n        }))\n      }, {\n        name: \"Victor Payne\",\n        title: \"Accountant\",\n        time: \"1 day\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 5,\n        online: true\n      }, {\n        name: \"Alberta Harris\",\n        title: \"UI Designer\",\n        time: \"2 day\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 4,\n        online: false\n      }]\n    });\n  }\n\n  render() {\n    return __jsx(Portlet, _extends({\n      bordered: true\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }), __jsx(Portlet.Header, {\n      bordered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, __jsx(Portlet.Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    })), __jsx(Portlet.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Contacts\"), __jsx(Portlet.Addon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      icon: true,\n      variant: \"label-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: SolidIcon.faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    })))), __jsx(Portlet.Body, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, __jsx(RichList, {\n      flush: true,\n      action: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, this.state.data.map((data, index) => {\n      const {\n        name,\n        title,\n        time,\n        link,\n        image,\n        count,\n        online,\n        avatarMarker: AvatarMarker\n      } = data;\n      return __jsx(RichList.Item, {\n        key: index,\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, __jsx(RichList.Addon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }\n      }, __jsx(Avatar, {\n        circle: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, Boolean(AvatarMarker) ? __jsx(Avatar.Addon, {\n        position: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, __jsx(AvatarMarker, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 27\n        }\n      })) : null, __jsx(Avatar.Display, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 23\n        }\n      }, __jsx(\"img\", {\n        src: image,\n        alt: \"Avatar image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      })), __jsx(Avatar.Addon, {\n        position: \"bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 23\n        }\n      }, online ? __jsx(Marker, {\n        type: \"dot\",\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 27\n        }\n      }) : __jsx(Marker, {\n        type: \"dot\",\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 27\n        }\n      })))), __jsx(RichList.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }\n      }, __jsx(RichList.Title, {\n        children: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }), __jsx(RichList.Subtitle, {\n        children: title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      })), __jsx(RichList.Addon, {\n        addonType: \"append\",\n        className: \"flex-column align-items-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 19\n        }\n      }, __jsx(\"span\", {\n        className: \"text-muted text-nowrap\",\n        children: time,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }), count > 0 ? __jsx(Badge, {\n        pill: true,\n        variant: \"success\",\n        children: count,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 34\n        }\n      }) : null));\n    }))));\n  }\n\n}\n\nexport default SidemenuAgendaContact;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/sgan/front/src/components/layout/part/SidemenuAgendaContact.jsx"],"names":["Badge","Avatar","Button","Marker","Portlet","RichList","FontAwesomeIcon","SolidIcon","SidemenuAgendaContact","React","Component","data","name","title","time","link","image","count","online","avatarMarker","faThumbtack","faCheck","render","props","faUsers","faPlus","state","map","index","AvatarMarker","Boolean"],"mappings":"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","sourcesContent":["import { Badge, Avatar, Button, Marker, Portlet, RichList } from \"@panely/components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport * as SolidIcon from \"@fortawesome/free-solid-svg-icons\"\n\nclass SidemenuAgendaContact extends React.Component {\n  state = {\n    data: [\n      {\n        name: \"Charlie Stone\",\n        title: \"Art Director\",\n        time: \"1 min\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 1,\n        online: false,\n        avatarMarker: () => (\n          <Avatar.Icon variant=\"info\">\n            <FontAwesomeIcon icon={SolidIcon.faThumbtack} />\n          </Avatar.Icon>\n        )\n      },\n      {\n        name: \"Freddie Stevens\",\n        title: \"Journalist\",\n        time: \"2 hour\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 12,\n        online: true\n      },\n      {\n        name: \"Tyler Clark\",\n        title: \"Programmer\",\n        time: \"5 hour\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 0,\n        online: true\n      },\n      {\n        name: \"Darcy Harrison\",\n        title: \"Internet Marketer\",\n        time: \"1 day\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 2,\n        online: false,\n        avatarMarker: () => (\n          <Avatar.Icon variant=\"success\">\n            <FontAwesomeIcon icon={SolidIcon.faCheck} />\n          </Avatar.Icon>\n        )\n      },\n      {\n        name: \"Victor Payne\",\n        title: \"Accountant\",\n        time: \"1 day\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 5,\n        online: true\n      },\n      {\n        name: \"Alberta Harris\",\n        title: \"UI Designer\",\n        time: \"2 day\",\n        link: \"#\",\n        image: \"/images/avatar/blank.webp\",\n        count: 4,\n        online: false\n      }\n    ]\n  }\n\n  render() {\n    return (\n      <Portlet bordered {...this.props}>\n        <Portlet.Header bordered>\n          <Portlet.Icon>\n            <FontAwesomeIcon icon={SolidIcon.faUsers} />\n          </Portlet.Icon>\n          <Portlet.Title>Contacts</Portlet.Title>\n          <Portlet.Addon>\n            <Button icon variant=\"label-primary\">\n              <FontAwesomeIcon icon={SolidIcon.faPlus} />\n            </Button>\n          </Portlet.Addon>\n        </Portlet.Header>\n        <Portlet.Body className=\"p-0\">\n          {/* BEGIN RichList */}\n          <RichList flush action>\n            {this.state.data.map((data, index) => {\n              const {\n                name,\n                title,\n                time,\n                link,\n                image,\n                count,\n                online,\n                avatarMarker: AvatarMarker\n              } = data\n\n              return (\n                <RichList.Item key={index} href=\"#\">\n                  <RichList.Addon addonType=\"prepend\">\n                    {/* BEGIN Avatar */}\n                    <Avatar circle>\n                      {Boolean(AvatarMarker) ? (\n                        <Avatar.Addon position=\"top\">\n                          <AvatarMarker />\n                        </Avatar.Addon>\n                      ) : null}\n                      <Avatar.Display>\n                        <img src={image} alt=\"Avatar image\" />\n                      </Avatar.Display>\n                      <Avatar.Addon position=\"bottom\">\n                        {online ? (\n                          <Marker type=\"dot\" variant=\"success\" />\n                        ) : (\n                          <Marker type=\"dot\" variant=\"secondary\" />\n                        )}\n                      </Avatar.Addon>\n                    </Avatar>\n                    {/* END Avatar */}\n                  </RichList.Addon>\n                  <RichList.Content>\n                    <RichList.Title children={name} />\n                    <RichList.Subtitle children={title} />\n                  </RichList.Content>\n                  <RichList.Addon addonType=\"append\" className=\"flex-column align-items-end\">\n                    <span className=\"text-muted text-nowrap\" children={time} />\n                    {count > 0 ? <Badge pill variant=\"success\" children={count} /> : null}\n                  </RichList.Addon>\n                </RichList.Item>\n              )\n            })}\n          </RichList>\n          {/* END RichList */}\n        </Portlet.Body>\n      </Portlet>\n    )\n  }\n}\n\nexport default SidemenuAgendaContact\n"]},"metadata":{},"sourceType":"module"}