// Base class
// Easily usable on <ul>, <ol>, or <div>.

.list-group {
  display: flex;
  flex-direction: column;
  // No need to set list-style: none; since .list-group-item is block level
  padding-left: 0; // reset padding because ul and ol
  margin-bottom: 0;
}
// Interactive list items
// Use anchor or button elements instead of `li`s or `div`s to create interactive
// list items. Includes an extra `.active` modifier class for selected items.

.list-group-action .list-group-item,
.list-group-item-action {
  width: 100%; // For `<button>`s (anchors become 100% by default though)
  text-align: inherit; // For `<button>`s (anchors inherit)

  &:focus,
  &:hover {
    z-index: 1; // Place hover/focus items above their siblings for proper border styling
    text-decoration: none;

    &:not(.active) {
      @include theme-variant("light") {
        color: $list-group-hover-color-light;
        background-color: $list-group-hover-bg-light;
        border-color: $list-group-hover-border-color-light;
      }
      @include theme-variant("dark") {
        color: $list-group-hover-color-dark;
        background-color: $list-group-hover-bg-dark;
        border-color: $list-group-hover-border-color-dark;
      }
    }
  }

  &.active,
  &:active {
    z-index: 2;
    @include theme-variant("light") {
      color: $list-group-active-color-light;
      background-color: $list-group-active-bg-light;
      border-color: $list-group-active-border-color-light;
    }
    @include theme-variant("dark") {
      color: $list-group-active-color-dark;
      background-color: $list-group-active-bg-dark;
      border-color: $list-group-active-border-color-dark;
    }
  }
}
// Individual list items
// Use on `li`s or `div`s within the `.list-group` parent.

.list-group-item {
  position: relative;
  display: block;
  padding: $list-group-item-padding-y $list-group-item-padding-x;
  border: 0;
  outline: 0 !important; // Remove user agent default outline
  @include theme-variant("light") {
    color: $list-group-color-light;
    background-color: $list-group-bg-light;
  }
  @include theme-variant("dark") {
    color: $list-group-color-dark;
    background-color: $list-group-bg-dark;
  }

  &:first-child {
    @include border-top-radius($list-group-border-radius);
  }

  &:last-child {
    @include border-bottom-radius($list-group-border-radius);
  }

  &.disabled,
  &:disabled {
    opacity: $list-group-disabled-opacity;
    pointer-events: none;
    @include theme-variant("light") {
      color: $list-group-disabled-color-light;
      background-color: $list-group-disabled-bg-light;
      border-color: $list-group-disabled-border-color-light !important;
    }
    @include theme-variant("dark") {
      color: $list-group-disabled-color-dark;
      background-color: $list-group-disabled-bg-dark;
      border-color: $list-group-disabled-border-color-dark !important;
    }
  }
  // Include both here for `<a>`s and `<button>`s
  &.active,
  &:active {
    z-index: 2;
    @include theme-variant("light") {
      color: $list-group-active-color-light;
      background-color: $list-group-active-bg-light;
      border-color: $list-group-active-border-color-light;
    }
    @include theme-variant("dark") {
      color: $list-group-active-color-dark;
      background-color: $list-group-active-bg-dark;
      border-color: $list-group-active-border-color-dark;
    }
  }
}
// List border versions
.list-group-flush {
  // Remove list group item space
  .list-group-item {
    margin: 0;
  }

  &:not(.list-group-horizontal) {
    .list-group-item + .list-group-item {
      border-top-width: $list-group-border-width;
      border-top-style: solid;
      @include theme-variant("light") {
        border-top-color: $list-group-border-color-light;
      }
      @include theme-variant("dark") {
        border-top-color: $list-group-border-color-dark;
      }
    }
  }

  &.list-group-horizontal {
    .list-group-item + .list-group-item {
      border-left-width: $list-group-border-width;
      border-left-style: solid;
      @include theme-variant("light") {
        border-left-color: $list-group-border-color-light;
      }
      @include theme-variant("dark") {
        border-left-color: $list-group-border-color-dark;
      }
    }
  }
}

.list-group-bordered {
  .list-group-item {
    margin-bottom: -#{$list-group-border-width};
    border-width: $list-group-border-width;
    border-style: solid;
    @include theme-variant("light") {
      border-color: $list-group-border-color-light;
    }
    @include theme-variant("dark") {
      border-color: $list-group-border-color-dark;
    }

    &:last-child {
      margin-bottom: 0;
    }
  }
}

.list-group-deck {
  .list-group-item {
    @include border-radius($list-group-border-radius);
  }

  &:not(.list-group-horizontal) {
    .list-group-item + .list-group-item {
      margin-top: $list-group-deck-spacer;
    }
  }

  &.list-group-horizontal {
    .list-group-item + .list-group-item {
      margin-left: $list-group-deck-spacer;
    }
  }
}
// Horizontal
// Change the layout of list group items from vertical (default) to horizontal.
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .list-group-horizontal#{$infix} {
      flex-direction: row;

      &.list-group-bordered .list-group-item {
        margin-right: -#{$list-group-border-width};
        margin-bottom: 0;

        &:last-child {
          margin-right: 0;
        }
      }

      &:not(.list-group-deck) {
        .list-group-item {
          &:first-child {
            @include border-left-radius($list-group-border-radius);
            @include border-top-right-radius(0);
          }

          &:last-child {
            @include border-right-radius($list-group-border-radius);
            @include border-bottom-left-radius(0);
          }
        }
      }
    }
  }
}
// Contextual variants
// Add modifier classes to change text and background color on individual items.
// Organizationally, this must come after the `:hover` states.
@each $color, $value in $theme-colors {
  .list-group-item-#{$color} {
    @include list-group-item-variant($value);
  }
}
