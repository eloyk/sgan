// Base styles

.input-group {
  position: relative;
  display: flex;
  flex-wrap: wrap; // For form validation feedback
  align-items: stretch;
  width: 100%;

  > .custom-select,
  > .form-control,
  > .form-control-plaintext,
  > .nice-select,
  > .custom-file {
    position: relative; // For focus state's z-index
    flex: 1 1 auto;
    // Add width 1% and flex-basis auto to ensure that button will not wrap out
    // the column. Applies to IE Edge+ and Firefox. Chrome does not require this.
    width: 1%;
    margin-bottom: 0;

    + .custom-file,
    + .custom-select,
    + .form-control,
    + .nice-select {
      margin-left: -$input-border-width;
    }
  }
  // Bring the "active" form control to the top of surrounding elements
  > .custom-select:focus,
  > .form-control:focus,
  > .nice-select:focus,
  > .custom-file .custom-file-input:focus ~ .custom-file-label {
    z-index: 3;
  }
  // Bring the custom file input above the label
  > .custom-file .custom-file-input:focus {
    z-index: 4;
  }
  // Custom file inputs have more complex markup, thus requiring different
  // border-radius overrides.
  > .custom-file {
    display: flex;
    align-items: center;
  }

  .float-label {
    display: table-cell;
  }
}

.input-group:not(.input-group-icon) {
  > .form-control,
  > .nice-select,
  > .custom-select {
    &:not(:last-child) {
      @include border-right-radius(0);
    }

    &:not(:first-child) {
      @include border-left-radius(0);
    }
  }
  // Custom file inputs have more complex markup, thus requiring different
  // border-radius overrides.
  > .custom-file {
    &:not(:last-child) .custom-file-label,
    &:not(:last-child) .custom-file-label::after {
      @include border-right-radius(0);
    }

    &:not(:first-child) .custom-file-label {
      @include border-left-radius(0);
    }
  }

  .float-label {
    .form-control {
      @include border-radius($input-border-radius);
    }

    &:not(:last-child),
    &:not(:last-child) .form-control {
      @include border-right-radius(0);
    }

    &:not(:first-child),
    &:not(:first-child) .form-control {
      @include border-left-radius(0);
    }
  }
}
// Prepend and append
//
// While it requires one extra layer of HTML for each, dedicated prepend and
// append elements allow us to 1) be less clever, 2) simplify our selectors, and
// 3) support HTML5 form validation.

.input-group-append,
.input-group-prepend {
  display: flex;
  // Ensure buttons are always above inputs for more visually pleasing borders.
  // This isn't needed for `.input-group-text` since it shares the same border-color
  // as our inputs.
  .btn {
    position: relative;
    z-index: 2;

    &:focus {
      z-index: 3;
    }
  }

  .btn + .btn,
  .btn + .input-group-text,
  .input-group-text + .btn,
  .input-group-text + .input-group-text {
    margin-left: -$input-border-width;
  }
}

.input-group-prepend {
  margin-right: -$input-border-width;
}

.input-group-append {
  margin-left: -$input-border-width;
}

.input-group-icon {
  display: flex;
  flex-direction: row;
  position: relative;

  .input-group-prepend + .form-control,
  .input-group-prepend + .form-control-plaintext,
  .input-group-prepend + .twitter-typeahead .form-control,
  .input-group-prepend + .twitter-typeahead .form-control-plaintext {
    padding-left: $input-height;
  }

  .input-group-append,
  .input-group-prepend {
    position: absolute;
    min-width: $input-height;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 4;
    top: 0;
    @include icon-size($input-group-icon-size);
    @include theme-variant("light") {
      color: $input-group-icon-color-light;
    }
    @include theme-variant("dark") {
      color: $input-group-icon-color-dark;
    }
  }

  .input-group-prepend:not(:last-child) {
    left: 0;
  }

  .input-group-append:not(:first-child) {
    right: 0;
  }

  &.input-group-lg {
    .input-group-append,
    .input-group-prepend {
      min-width: $input-height-lg;
      @include icon-size($input-group-icon-size + 0.2rem);
    }
  }

  &.input-group-sm {
    .input-group-append,
    .input-group-prepend {
      min-width: $input-height-sm;
      @include icon-size($input-group-icon-size - 0.2rem);
    }
  }
}
// Textual addons
//
// Serves as a catch-all element for any text or radio/checkbox input you wish
// to prepend or append to an input.

.input-group-text {
  display: flex;
  align-items: center;
  padding: $input-padding-y $input-padding-x;
  margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
  font-size: $input-font-size; // Match inputs
  font-weight: $font-weight-normal;
  line-height: $input-line-height;
  text-align: center;
  white-space: nowrap;
  border-width: $input-border-width;
  border-style: solid;
  @include border-radius($input-border-radius);
  @include theme-variant("light") {
    color: $input-group-addon-color-light;
    background: $input-group-addon-bg-light;
    border-color: $input-group-addon-border-color-light;
  }
  @include theme-variant("dark") {
    color: $input-group-addon-color-dark;
    background: $input-group-addon-bg-dark;
    border-color: $input-group-addon-border-color-dark;
  }
  // Nuke default margins from checkboxes and radios to vertically center within.
  input[type="radio"],
  input[type="checkbox"] {
    margin-top: 0;
  }
}
// Sizing
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

.input-group-lg .custom-select,
.input-group-lg .form-control:not(textarea),
.input-group-lg .nice-select {
  height: $input-height-lg;
}

.input-group-lg .custom-select,
.input-group-lg .form-control,
.input-group-lg .input-group-append > .btn,
.input-group-lg .input-group-append > .input-group-text,
.input-group-lg .input-group-prepend > .btn,
.input-group-lg .input-group-prepend > .input-group-text,
.input-group-lg .nice-select {
  padding: $input-padding-y-lg $input-padding-x-lg;
  font-size: $input-font-size-lg;
  line-height: $input-line-height-lg;
  @include border-radius($input-border-radius-lg);
}

.input-group-sm .custom-select,
.input-group-sm .form-control:not(textarea),
.input-group-sm .nice-select {
  height: $input-height-sm;
}

.input-group-sm .custom-select,
.input-group-sm .form-control,
.input-group-sm .input-group-append > .btn,
.input-group-sm .input-group-append > .input-group-text,
.input-group-sm .input-group-prepend > .btn,
.input-group-sm .input-group-prepend > .input-group-text,
.input-group-sm .nice-select {
  padding: $input-padding-y-sm $input-padding-x-sm;
  font-size: $input-font-size-sm;
  line-height: $input-line-height-sm;
  @include border-radius($input-border-radius-sm);
}

.input-group-lg .custom-select,
.input-group-lg .nice-select,
.input-group-sm .custom-select,
.input-group-sm .nice-select {
  padding-right: $custom-select-padding-x + $custom-select-indicator-padding;
}
// Prepend and append rounded corners
//
// These rulesets must come after the sizing ones to properly override sm and lg
// border-radius values when extending. They're more specific than we'd like
// with the `.input-group >` part, but without it, we cannot override the sizing.

.input-group:not(.input-group-icon) > .input-group-append:last-child > .btn:not(:last-child):not(.dropdown-toggle),
.input-group:not(.input-group-icon) > .input-group-append:last-child > .input-group-text:not(:last-child),
.input-group:not(.input-group-icon) > .input-group-append:not(:last-child) > .btn,
.input-group:not(.input-group-icon) > .input-group-append:not(:last-child) > .input-group-text,
.input-group:not(.input-group-icon) > .input-group-prepend > .btn,
.input-group:not(.input-group-icon) > .input-group-prepend > .input-group-text,
.input-group:not(.input-group-icon) > .input-group-prepend > .nice-select {
  @include border-right-radius(0);
}

.input-group:not(.input-group-icon) > .input-group-append > .btn,
.input-group:not(.input-group-icon) > .input-group-append > .input-group-text,
.input-group:not(.input-group-icon) > .input-group-append > .nice-select,
.input-group:not(.input-group-icon) > .input-group-prepend:first-child > .btn:not(:first-child),
.input-group:not(.input-group-icon) > .input-group-prepend:first-child > .input-group-text:not(:first-child),
.input-group:not(.input-group-icon) > .input-group-prepend:not(:first-child) > .btn,
.input-group:not(.input-group-icon) > .input-group-prepend:not(:first-child) > .input-group-text {
  @include border-left-radius(0);
}
